
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMMA COMMENT CTE_C CTE_F CTE_I CTE_S DESDE DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GREATEREQUAL GREATERTHAN HACER HASTA HAZ ID INT LBRACKET LEE LESSEQUAL LESSTHAN LPAREN LSQUARE MIENTRAS MINUS MULT NOEQUAL OR PLUS PRINCIPAL PROGRAMA RBRACKET REGRESA RPAREN RSQUARE SAME SEMICOLON SI SINO VAR VOID\n    programa : PROGRAMA ID SEMICOLON vars funcion principal\n            | PROGRAMA ID SEMICOLON funcion principal\n            | PROGRAMA ID SEMICOLON vars principal\n            | PROGRAMA ID SEMICOLON principal\n    \n    principal : PRINCIPAL LPAREN RPAREN bloque\n    \n  vars : VAR vars_aux\n  \n  vars_aux : tipo_simple vars_aux1 SEMICOLON\n  \t\t   | tipo_simple vars_aux1 SEMICOLON vars_aux\n  \n  vars_aux1 : vars_aux2\n  \t\t    | vars_aux2 COMMA vars_aux1\n  \n    vars_aux2 : ID n_save_var\n    \t\t  | ID LSQUARE CTE_I n_save_array RSQUARE\n  \n        n_save_array :\n    \n        n_save_var :\n    \n    tipo_simple : INT n_save_type\n                | FLOAT n_save_type\n                | CHAR n_save_type\n    n_save_type : \n    empty :\n    \n    variable : ID LSQUARE exp RSQUARE\n             | ID\n    \n  funcion : FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque\n  \t\t  | FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque\n  \t\t  | FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque\n          | FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque\n          | FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque\n          | FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque\n          | FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque\n          | FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque\n  n_register_func : \n  param : tipo_simple param_aux1\n        | tipo_simple param_aux1 param\n  \n  param_aux1 : ID save_param\n  \t\t     | ID save_param COMMA param\n  \n    save_param :\n    \n  bloque : LBRACKET mult_estatutos RBRACKET\n         | LBRACKET empty RBRACKET\n  \n  mult_estatutos : estatuto\n  \t\t\t\t | estatuto mult_estatutos\n  \n  estatuto : asigna\n  \t\t   | llamada\n           | lee\n           | escribe\n           | condicion\n           | ciclo_w\n           | retorno\n           | ciclo_f\n  \n  asigna : variable EQUAL exp SEMICOLON\n  \n  llamada : ID LPAREN mult_exp RPAREN\n  \n  mult_exp : exp\n  \t\t   | exp COMMA mult_exp\n           | empty\n  \n  lee : LEE LPAREN variable RPAREN\n  \n  escribe : ESCRIBE LPAREN mult_exp RPAREN SEMICOLON\n  \t\t  | LPAREN mult_cte_s RPAREN SEMICOLON\n  \n  mult_cte_s : CTE_S\n  \t\t     | CTE_S COMMA mult_cte_s\n             | empty\n  \n  exp : t_exp OR exp\n  \t  | t_exp\n  \n  t_exp : g_exp AND t_exp\n  \t    | g_exp\n  \n  g_exp : m_exp\n  \t\t| LESSTHAN m_exp\n        | LESSEQUAL m_exp\n        | GREATERTHAN m_exp\n        | GREATEREQUAL m_exp\n        | SAME m_exp\n        | NOEQUAL m_exp\n  \n  m_exp : t\n  \t    | t PLUS m_exp\n        | t MINUS m_exp\n  \n  \tt : f\n      | f MULT t\n      | f DIV t\n  \n  f : LPAREN exp RPAREN\n  \t| CTE_I\n    | CTE_F\n    | CTE_C\n    | variable\n    | llamada\n  \n  condicion : SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON\n  \t\t    | SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON\n  \n  ciclo_w : MIENTRAS LPAREN exp RPAREN HAZ bloque\n  \n  ciclo_f : DESDE asigna HASTA CTE_I HACER bloque\n  \n  var_cte : exp\n  \t      | CTE_I\n          | CTE_F\n  \n  retorno : REGRESA exp SEMICOLON\n  '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,7,12,13,22,38,70,71,],[0,-4,-3,-2,-1,-5,-36,-37,]),'ID':([2,15,16,17,18,19,20,26,27,28,30,33,39,47,48,49,50,51,52,53,54,55,63,64,66,70,71,73,74,75,79,80,81,82,87,88,89,90,91,92,95,123,124,125,132,133,134,135,146,147,148,150,152,170,177,178,180,182,],[3,25,-18,-18,-18,29,-18,-15,-16,-17,37,25,57,57,-40,-41,-42,-43,-44,-45,-46,-47,101,103,106,-36,-37,101,101,101,103,101,101,101,101,101,101,101,101,101,101,-89,101,101,101,101,101,101,-48,-49,101,-55,-53,-54,-84,-85,-83,-82,]),'SEMICOLON':([3,23,24,25,34,41,70,71,83,84,85,86,93,94,96,97,98,99,100,101,104,112,117,126,127,128,129,130,131,147,149,153,156,157,158,159,160,161,162,176,181,],[4,32,-9,-14,-11,-10,-36,-37,123,-60,-62,-63,-70,-73,-77,-78,-79,-80,-81,-21,-12,146,150,-64,-65,-66,-67,-68,-69,-49,-20,170,-59,-61,-71,-72,-74,-75,-76,180,182,]),'VAR':([4,68,107,111,143,],[8,8,8,8,8,]),'FUNCION':([4,5,14,32,40,],[9,9,-6,-7,-8,]),'PRINCIPAL':([4,5,6,11,14,32,40,70,71,109,141,142,145,165,167,168,175,],[10,10,10,10,-6,-7,-8,-36,-37,-27,-23,-26,-29,-22,-25,-28,-24,]),'INT':([8,9,32,43,69,105,106,138,139,164,174,],[16,16,16,16,16,16,-35,-32,-33,16,-34,]),'FLOAT':([8,9,32,43,69,105,106,138,139,164,174,],[17,17,17,17,17,17,-35,-32,-33,17,-34,]),'CHAR':([8,9,32,43,69,105,106,138,139,164,174,],[18,18,18,18,18,18,-35,-32,-33,18,-34,]),'VOID':([9,],[20,]),'LPAREN':([10,29,36,37,39,44,47,48,49,50,51,52,53,54,55,57,59,60,61,62,63,70,71,73,74,75,80,81,82,87,88,89,90,91,92,95,101,123,124,125,132,133,134,135,146,147,148,150,152,170,177,178,180,182,],[21,-30,43,-30,58,69,58,-40,-41,-42,-43,-44,-45,-46,-47,74,79,80,81,82,95,-36,-37,95,95,95,95,95,95,95,95,95,95,95,95,95,74,-89,95,95,95,95,95,95,-48,-49,95,-55,-53,-54,-84,-85,-83,-82,]),'LBRACKET':([14,31,32,40,68,107,108,111,140,143,144,166,171,172,173,179,],[-6,39,-7,-8,39,39,39,39,39,39,39,39,39,39,39,39,]),'RPAREN':([21,43,58,67,69,74,76,77,78,80,84,85,86,93,94,96,97,98,99,100,101,103,105,106,110,113,114,115,118,119,120,121,122,126,127,128,129,130,131,136,138,139,147,148,149,151,156,157,158,159,160,161,162,169,174,],[31,68,-19,107,111,-19,117,-56,-58,-19,-60,-62,-63,-70,-73,-77,-78,-79,-80,-81,-21,-21,-31,-35,143,147,-50,-52,-19,152,153,154,155,-64,-65,-66,-67,-68,-69,162,-32,-33,-49,-19,-20,-57,-59,-61,-71,-72,-74,-75,-76,-51,-34,]),'COMMA':([24,25,34,77,84,85,86,93,94,96,97,98,99,100,101,104,106,114,126,127,128,129,130,131,139,147,149,156,157,158,159,160,161,162,],[33,-14,-11,118,-60,-62,-63,-70,-73,-77,-78,-79,-80,-81,-21,-12,-35,148,-64,-65,-66,-67,-68,-69,164,-49,-20,-59,-61,-71,-72,-74,-75,-76,]),'LSQUARE':([25,57,101,103,],[35,75,75,75,]),'CTE_I':([35,63,73,74,75,80,81,82,87,88,89,90,91,92,95,124,125,132,133,134,135,137,148,],[42,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,163,96,]),'RBRACKET':([39,45,46,47,48,49,50,51,52,53,54,55,70,71,72,123,146,147,150,152,170,177,178,180,182,],[-19,70,71,-38,-40,-41,-42,-43,-44,-45,-46,-47,-36,-37,-39,-89,-48,-49,-55,-53,-54,-84,-85,-83,-82,]),'LEE':([39,47,48,49,50,51,52,53,54,55,70,71,123,146,147,150,152,170,177,178,180,182,],[59,59,-40,-41,-42,-43,-44,-45,-46,-47,-36,-37,-89,-48,-49,-55,-53,-54,-84,-85,-83,-82,]),'ESCRIBE':([39,47,48,49,50,51,52,53,54,55,70,71,123,146,147,150,152,170,177,178,180,182,],[60,60,-40,-41,-42,-43,-44,-45,-46,-47,-36,-37,-89,-48,-49,-55,-53,-54,-84,-85,-83,-82,]),'SI':([39,47,48,49,50,51,52,53,54,55,70,71,123,146,147,150,152,170,177,178,180,182,],[61,61,-40,-41,-42,-43,-44,-45,-46,-47,-36,-37,-89,-48,-49,-55,-53,-54,-84,-85,-83,-82,]),'MIENTRAS':([39,47,48,49,50,51,52,53,54,55,70,71,123,146,147,150,152,170,177,178,180,182,],[62,62,-40,-41,-42,-43,-44,-45,-46,-47,-36,-37,-89,-48,-49,-55,-53,-54,-84,-85,-83,-82,]),'REGRESA':([39,47,48,49,50,51,52,53,54,55,70,71,123,146,147,150,152,170,177,178,180,182,],[63,63,-40,-41,-42,-43,-44,-45,-46,-47,-36,-37,-89,-48,-49,-55,-53,-54,-84,-85,-83,-82,]),'DESDE':([39,47,48,49,50,51,52,53,54,55,70,71,123,146,147,150,152,170,177,178,180,182,],[64,64,-40,-41,-42,-43,-44,-45,-46,-47,-36,-37,-89,-48,-49,-55,-53,-54,-84,-85,-83,-82,]),'RSQUARE':([42,65,84,85,86,93,94,96,97,98,99,100,101,116,126,127,128,129,130,131,147,149,156,157,158,159,160,161,162,],[-13,104,-60,-62,-63,-70,-73,-77,-78,-79,-80,-81,-21,149,-64,-65,-66,-67,-68,-69,-49,-20,-59,-61,-71,-72,-74,-75,-76,]),'EQUAL':([56,57,103,149,],[73,-21,-21,-20,]),'CTE_S':([58,118,],[77,77,]),'LESSTHAN':([63,73,74,75,80,81,82,95,124,125,148,],[87,87,87,87,87,87,87,87,87,87,87,]),'LESSEQUAL':([63,73,74,75,80,81,82,95,124,125,148,],[88,88,88,88,88,88,88,88,88,88,88,]),'GREATERTHAN':([63,73,74,75,80,81,82,95,124,125,148,],[89,89,89,89,89,89,89,89,89,89,89,]),'GREATEREQUAL':([63,73,74,75,80,81,82,95,124,125,148,],[90,90,90,90,90,90,90,90,90,90,90,]),'SAME':([63,73,74,75,80,81,82,95,124,125,148,],[91,91,91,91,91,91,91,91,91,91,91,]),'NOEQUAL':([63,73,74,75,80,81,82,95,124,125,148,],[92,92,92,92,92,92,92,92,92,92,92,]),'CTE_F':([63,73,74,75,80,81,82,87,88,89,90,91,92,95,124,125,132,133,134,135,148,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'CTE_C':([63,73,74,75,80,81,82,87,88,89,90,91,92,95,124,125,132,133,134,135,148,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'SINO':([70,71,176,],[-36,-37,179,]),'OR':([84,85,86,93,94,96,97,98,99,100,101,126,127,128,129,130,131,147,149,157,158,159,160,161,162,],[124,-62,-63,-70,-73,-77,-78,-79,-80,-81,-21,-64,-65,-66,-67,-68,-69,-49,-20,-61,-71,-72,-74,-75,-76,]),'AND':([85,86,93,94,96,97,98,99,100,101,126,127,128,129,130,131,147,149,158,159,160,161,162,],[125,-63,-70,-73,-77,-78,-79,-80,-81,-21,-64,-65,-66,-67,-68,-69,-49,-20,-71,-72,-74,-75,-76,]),'PLUS':([93,94,96,97,98,99,100,101,147,149,160,161,162,],[132,-73,-77,-78,-79,-80,-81,-21,-49,-20,-74,-75,-76,]),'MINUS':([93,94,96,97,98,99,100,101,147,149,160,161,162,],[133,-73,-77,-78,-79,-80,-81,-21,-49,-20,-74,-75,-76,]),'MULT':([94,96,97,98,99,100,101,147,149,162,],[134,-77,-78,-79,-80,-81,-21,-49,-20,-76,]),'DIV':([94,96,97,98,99,100,101,147,149,162,],[135,-77,-78,-79,-80,-81,-21,-49,-20,-76,]),'HASTA':([102,146,],[137,-48,]),'ENTONCES':([154,],[171,]),'HAZ':([155,],[172,]),'HACER':([163,],[173,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'vars':([4,68,107,111,143,],[5,108,140,144,166,]),'funcion':([4,5,],[6,11,]),'principal':([4,5,6,11,],[7,12,13,22,]),'vars_aux':([8,32,],[14,40,]),'tipo_simple':([8,9,32,43,69,105,164,],[15,19,15,66,66,66,66,]),'vars_aux1':([15,33,],[23,41,]),'vars_aux2':([15,33,],[24,24,]),'n_save_type':([16,17,18,20,],[26,27,28,30,]),'n_save_var':([25,],[34,]),'n_register_func':([29,37,],[36,44,]),'bloque':([31,68,107,108,111,140,143,144,166,171,172,173,179,],[38,109,141,142,145,165,167,168,175,176,177,178,181,]),'mult_estatutos':([39,47,],[45,72,]),'empty':([39,58,74,80,118,148,],[46,78,115,115,78,115,]),'estatuto':([39,47,],[47,47,]),'asigna':([39,47,64,],[48,48,102,]),'llamada':([39,47,63,73,74,75,80,81,82,87,88,89,90,91,92,95,124,125,132,133,134,135,148,],[49,49,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'lee':([39,47,],[50,50,]),'escribe':([39,47,],[51,51,]),'condicion':([39,47,],[52,52,]),'ciclo_w':([39,47,],[53,53,]),'retorno':([39,47,],[54,54,]),'ciclo_f':([39,47,],[55,55,]),'variable':([39,47,63,64,73,74,75,79,80,81,82,87,88,89,90,91,92,95,124,125,132,133,134,135,148,],[56,56,99,56,99,99,99,119,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'n_save_array':([42,],[65,]),'param':([43,69,105,164,],[67,110,138,174,]),'mult_cte_s':([58,118,],[76,151,]),'exp':([63,73,74,75,80,81,82,95,124,148,],[83,112,114,116,114,121,122,136,156,114,]),'t_exp':([63,73,74,75,80,81,82,95,124,125,148,],[84,84,84,84,84,84,84,84,84,157,84,]),'g_exp':([63,73,74,75,80,81,82,95,124,125,148,],[85,85,85,85,85,85,85,85,85,85,85,]),'m_exp':([63,73,74,75,80,81,82,87,88,89,90,91,92,95,124,125,132,133,148,],[86,86,86,86,86,86,86,126,127,128,129,130,131,86,86,86,158,159,86,]),'t':([63,73,74,75,80,81,82,87,88,89,90,91,92,95,124,125,132,133,134,135,148,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,160,161,93,]),'f':([63,73,74,75,80,81,82,87,88,89,90,91,92,95,124,125,132,133,134,135,148,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'param_aux1':([66,],[105,]),'mult_exp':([74,80,148,],[113,120,169,]),'save_param':([106,],[139,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON vars funcion principal','programa',6,'p_programa','fa_yacc.py',21),
  ('programa -> PROGRAMA ID SEMICOLON funcion principal','programa',5,'p_programa','fa_yacc.py',22),
  ('programa -> PROGRAMA ID SEMICOLON vars principal','programa',5,'p_programa','fa_yacc.py',23),
  ('programa -> PROGRAMA ID SEMICOLON principal','programa',4,'p_programa','fa_yacc.py',24),
  ('principal -> PRINCIPAL LPAREN RPAREN bloque','principal',4,'p_principal','fa_yacc.py',31),
  ('vars -> VAR vars_aux','vars',2,'p_vars','fa_yacc.py',38),
  ('vars_aux -> tipo_simple vars_aux1 SEMICOLON','vars_aux',3,'p_vars_aux','fa_yacc.py',44),
  ('vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux','vars_aux',4,'p_vars_aux','fa_yacc.py',45),
  ('vars_aux1 -> vars_aux2','vars_aux1',1,'p_vars_aux1','fa_yacc.py',51),
  ('vars_aux1 -> vars_aux2 COMMA vars_aux1','vars_aux1',3,'p_vars_aux1','fa_yacc.py',52),
  ('vars_aux2 -> ID n_save_var','vars_aux2',2,'p_vars_aux2','fa_yacc.py',58),
  ('vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE','vars_aux2',5,'p_vars_aux2','fa_yacc.py',59),
  ('n_save_array -> <empty>','n_save_array',0,'p_n_save_array','fa_yacc.py',64),
  ('n_save_var -> <empty>','n_save_var',0,'p_n_save_var','fa_yacc.py',79),
  ('tipo_simple -> INT n_save_type','tipo_simple',2,'p_tipo_simple','fa_yacc.py',92),
  ('tipo_simple -> FLOAT n_save_type','tipo_simple',2,'p_tipo_simple','fa_yacc.py',93),
  ('tipo_simple -> CHAR n_save_type','tipo_simple',2,'p_tipo_simple','fa_yacc.py',94),
  ('n_save_type -> <empty>','n_save_type',0,'p_n_save_type','fa_yacc.py',98),
  ('empty -> <empty>','empty',0,'p_empty','fa_yacc.py',105),
  ('variable -> ID LSQUARE exp RSQUARE','variable',4,'p_variable','fa_yacc.py',110),
  ('variable -> ID','variable',1,'p_variable','fa_yacc.py',111),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque','funcion',9,'p_funcion','fa_yacc.py',116),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque','funcion',8,'p_funcion','fa_yacc.py',117),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque','funcion',10,'p_funcion','fa_yacc.py',118),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque','funcion',9,'p_funcion','fa_yacc.py',119),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque','funcion',8,'p_funcion','fa_yacc.py',120),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque','funcion',7,'p_funcion','fa_yacc.py',121),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque','funcion',9,'p_funcion','fa_yacc.py',122),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque','funcion',8,'p_funcion','fa_yacc.py',123),
  ('n_register_func -> <empty>','n_register_func',0,'p_n_register_func','fa_yacc.py',127),
  ('param -> tipo_simple param_aux1','param',2,'p_param','fa_yacc.py',141),
  ('param -> tipo_simple param_aux1 param','param',3,'p_param','fa_yacc.py',142),
  ('param_aux1 -> ID save_param','param_aux1',2,'p_param_aux1','fa_yacc.py',148),
  ('param_aux1 -> ID save_param COMMA param','param_aux1',4,'p_param_aux1','fa_yacc.py',149),
  ('save_param -> <empty>','save_param',0,'p_save_param','fa_yacc.py',154),
  ('bloque -> LBRACKET mult_estatutos RBRACKET','bloque',3,'p_bloque','fa_yacc.py',169),
  ('bloque -> LBRACKET empty RBRACKET','bloque',3,'p_bloque','fa_yacc.py',170),
  ('mult_estatutos -> estatuto','mult_estatutos',1,'p_mult_estatutos','fa_yacc.py',175),
  ('mult_estatutos -> estatuto mult_estatutos','mult_estatutos',2,'p_mult_estatutos','fa_yacc.py',176),
  ('estatuto -> asigna','estatuto',1,'p_estatuto','fa_yacc.py',181),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','fa_yacc.py',182),
  ('estatuto -> lee','estatuto',1,'p_estatuto','fa_yacc.py',183),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','fa_yacc.py',184),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','fa_yacc.py',185),
  ('estatuto -> ciclo_w','estatuto',1,'p_estatuto','fa_yacc.py',186),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','fa_yacc.py',187),
  ('estatuto -> ciclo_f','estatuto',1,'p_estatuto','fa_yacc.py',188),
  ('asigna -> variable EQUAL exp SEMICOLON','asigna',4,'p_asigna','fa_yacc.py',193),
  ('llamada -> ID LPAREN mult_exp RPAREN','llamada',4,'p_llamada','fa_yacc.py',198),
  ('mult_exp -> exp','mult_exp',1,'p_mult_exp','fa_yacc.py',203),
  ('mult_exp -> exp COMMA mult_exp','mult_exp',3,'p_mult_exp','fa_yacc.py',204),
  ('mult_exp -> empty','mult_exp',1,'p_mult_exp','fa_yacc.py',205),
  ('lee -> LEE LPAREN variable RPAREN','lee',4,'p_lee','fa_yacc.py',210),
  ('escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON','escribe',5,'p_escribe','fa_yacc.py',215),
  ('escribe -> LPAREN mult_cte_s RPAREN SEMICOLON','escribe',4,'p_escribe','fa_yacc.py',216),
  ('mult_cte_s -> CTE_S','mult_cte_s',1,'p_mult_cte_s','fa_yacc.py',221),
  ('mult_cte_s -> CTE_S COMMA mult_cte_s','mult_cte_s',3,'p_mult_cte_s','fa_yacc.py',222),
  ('mult_cte_s -> empty','mult_cte_s',1,'p_mult_cte_s','fa_yacc.py',223),
  ('exp -> t_exp OR exp','exp',3,'p_exp','fa_yacc.py',230),
  ('exp -> t_exp','exp',1,'p_exp','fa_yacc.py',231),
  ('t_exp -> g_exp AND t_exp','t_exp',3,'p_t_exp','fa_yacc.py',236),
  ('t_exp -> g_exp','t_exp',1,'p_t_exp','fa_yacc.py',237),
  ('g_exp -> m_exp','g_exp',1,'p_g_exp','fa_yacc.py',242),
  ('g_exp -> LESSTHAN m_exp','g_exp',2,'p_g_exp','fa_yacc.py',243),
  ('g_exp -> LESSEQUAL m_exp','g_exp',2,'p_g_exp','fa_yacc.py',244),
  ('g_exp -> GREATERTHAN m_exp','g_exp',2,'p_g_exp','fa_yacc.py',245),
  ('g_exp -> GREATEREQUAL m_exp','g_exp',2,'p_g_exp','fa_yacc.py',246),
  ('g_exp -> SAME m_exp','g_exp',2,'p_g_exp','fa_yacc.py',247),
  ('g_exp -> NOEQUAL m_exp','g_exp',2,'p_g_exp','fa_yacc.py',248),
  ('m_exp -> t','m_exp',1,'p_m_exp','fa_yacc.py',253),
  ('m_exp -> t PLUS m_exp','m_exp',3,'p_m_exp','fa_yacc.py',254),
  ('m_exp -> t MINUS m_exp','m_exp',3,'p_m_exp','fa_yacc.py',255),
  ('t -> f','t',1,'p_t','fa_yacc.py',260),
  ('t -> f MULT t','t',3,'p_t','fa_yacc.py',261),
  ('t -> f DIV t','t',3,'p_t','fa_yacc.py',262),
  ('f -> LPAREN exp RPAREN','f',3,'p_f','fa_yacc.py',267),
  ('f -> CTE_I','f',1,'p_f','fa_yacc.py',268),
  ('f -> CTE_F','f',1,'p_f','fa_yacc.py',269),
  ('f -> CTE_C','f',1,'p_f','fa_yacc.py',270),
  ('f -> variable','f',1,'p_f','fa_yacc.py',271),
  ('f -> llamada','f',1,'p_f','fa_yacc.py',272),
  ('condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON','condicion',9,'p_condicion','fa_yacc.py',277),
  ('condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON','condicion',7,'p_condicion','fa_yacc.py',278),
  ('ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque','ciclo_w',6,'p_ciclo_w','fa_yacc.py',283),
  ('ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque','ciclo_f',6,'p_ciclo_f','fa_yacc.py',289),
  ('var_cte -> exp','var_cte',1,'p_var_cte','fa_yacc.py',294),
  ('var_cte -> CTE_I','var_cte',1,'p_var_cte','fa_yacc.py',295),
  ('var_cte -> CTE_F','var_cte',1,'p_var_cte','fa_yacc.py',296),
  ('retorno -> REGRESA exp SEMICOLON','retorno',3,'p_retorno','fa_yacc.py',301),
]
