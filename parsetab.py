
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMMA COMMENT CTE_C CTE_F CTE_I CTE_S DESDE DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GREATEREQUAL GREATERTHAN HACER HASTA HAZ ID INT LBRACKET LEE LESSEQUAL LESSTHAN LPAREN LSQUARE MIENTRAS MINUS MULT NOEQUAL OR PLUS PRINCIPAL PROGRAMA RBRACKET REGRESA RPAREN RSQUARE SAME SEMICOLON SI SINO VAR VOID\n    programa : PROGRAMA p_n_mainJump ID SEMICOLON vars mult_funcion principal\n            | PROGRAMA p_n_mainJump ID SEMICOLON mult_funcion principal\n            | PROGRAMA p_n_mainJump ID SEMICOLON vars principal\n            | PROGRAMA p_n_mainJump ID SEMICOLON principal\n    \n    p_n_mainJump :\n    \n    principal : PRINCIPAL n_register_glob LPAREN RPAREN bloque\n    \n    n_register_glob :\n    \n  vars : VAR vars_aux\n  \n  vars_aux : tipo_simple vars_aux1 SEMICOLON\n  \t\t   | tipo_simple vars_aux1 SEMICOLON vars_aux\n  \n  vars_aux1 : vars_aux2\n  \t\t    | vars_aux2 COMMA vars_aux1\n  \n    vars_aux2 : ID n_save_var\n    \t\t  | ID LSQUARE CTE_I n_save_array RSQUARE\n  \n        n_save_array :\n    \n        n_save_var :\n    \n    tipo_simple : INT n_save_type\n                | FLOAT n_save_type\n                | CHAR n_save_type\n    n_save_type : \n    empty :\n    \n    variable : ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad\n             | ID n_getVarVal\n    \n    n_arr_quad :\n    \n    n_hasDim :\n    \n    n_getVarVal :\n    \n    mult_funcion : funcion\n                 | funcion mult_funcion\n    \n  funcion : FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func\n  \t\t  | FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func\n  \t\t  | FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func\n          | FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func\n          | FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func\n          | FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func\n          | FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func\n          | FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func\n  n_register_func : \n  param : tipo_simple param_aux1\n  \n  param_aux1 : ID save_param\n  \t\t     | ID save_param COMMA param\n  \n    save_param :\n    \n    n_endof_func :\n    \n  bloque : LBRACKET mult_estatutos RBRACKET\n         | LBRACKET empty RBRACKET\n  \n  mult_estatutos : estatuto\n  \t\t\t\t | estatuto mult_estatutos\n  \n  estatuto : asigna SEMICOLON\n  \t\t   | llamada SEMICOLON\n           | lee\n           | escribe\n           | condicion\n           | ciclo_w\n           | retorno\n           | ciclo_f\n  \n  asigna : mult_asigna\n  \n    mult_asigna : variable EQUAL n_Operador mult_exp n_asignQuad\n                | variable EQUAL n_Operador mult_asigna n_asignQuad\n    \n    n_asignQuad :\n    \n    param_exp : mult_exp n_parameter_action\n              | mult_exp n_parameter_action COMMA param_exp\n    \n    n_parameter_action :\n    \n  llamada : ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action\n          | ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action\n  \n    n_last_param_action :\n    \n    n_start_pcounter :\n    \n    n_verify_func :\n    \n  lee : LEE LPAREN variable RPAREN SEMICOLON\n  \n  escribe : ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON\n  \t\t  | ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON\n  \n    n_escribeExp :\n    \n  mult_cte_s : CTE_S\n  \t\t     | CTE_S COMMA mult_cte_s\n  \n  mult_exp : exp\n  \t\t   | exp COMMA mult_exp\n  \n  exp : t_exp n_orQuad\n  \t  | t_exp n_orQuad OR n_Operador exp\n  \n    n_orQuad :\n    \n  t_exp : g_exp n_andQuad\n        | g_exp n_andQuad AND n_Operador t_exp\n  \n    n_andQuad :\n    \n  g_exp : m_exp n_compareQuad\n  \t\t| m_exp n_compareQuad LESSTHAN n_Operador g_exp\n        | m_exp n_compareQuad LESSEQUAL n_Operador g_exp\n        | m_exp n_compareQuad GREATERTHAN n_Operador g_exp\n        | m_exp n_compareQuad GREATEREQUAL n_Operador g_exp\n        | m_exp n_compareQuad SAME n_Operador g_exp\n        | m_exp n_compareQuad NOEQUAL n_Operador g_exp\n  \n    n_compareQuad :\n    \n  m_exp : t n_sumQuad\n  \t    | t n_sumQuad PLUS n_Operador m_exp\n        | t n_sumQuad MINUS n_Operador m_exp\n  \n    n_sumQuad :\n    \n  \tt : f n_multQuad\n      | f n_multQuad MULT n_Operador t\n      | f n_multQuad DIV n_Operador t\n  \n    n_multQuad :\n    \n    n_Operador :\n    \n  f : LPAREN n_start_FF mult_exp RPAREN n_end_FF\n    | n_tempTypeI MINUS CTE_I n_directPrint_neg\n    | n_tempTypeF MINUS CTE_F n_directPrint_neg\n    | n_tempTypeI CTE_I n_directPrint\n    | n_tempTypeF CTE_F n_directPrint\n    | n_tempTypeC CTE_C n_directPrint\n    | variable\n    | llamada\n  \n    n_tempTypeI :\n    \n    n_tempTypeF :\n    \n    n_tempTypeC :\n    \n    n_directPrint_neg :\n    \n    n_directPrint :\n    \n    n_start_FF :\n    \n    n_end_FF :\n    \n  condicion : SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad\n            | SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad\n  \n    n_ifQuad :\n    \n    n_endIfQuad :\n    \n    p_n_sinoQuad :\n    \n  ciclo_w : MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile\n  \n    n_startCicle :\n    \n    n_evalExp :\n    \n    n_endWhile :\n    \n  ciclo_f : DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor\n  \n    n_evalExp_for :\n    \n    n_endFor :\n    \n  retorno : REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON\n  \n    n_regresaExp :\n    '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,8,14,15,25,45,75,76,],[0,-4,-3,-2,-1,-6,-43,-44,]),'ID':([2,3,17,18,19,20,23,24,29,30,31,34,36,46,52,55,56,57,58,59,60,69,70,75,76,78,79,82,83,84,85,87,97,98,100,101,118,129,130,135,138,153,162,163,164,172,173,174,175,176,177,178,179,180,181,182,183,203,204,205,206,207,208,209,210,211,212,213,214,215,216,221,241,246,248,250,251,256,257,258,259,],[-5,4,28,-20,-20,-20,33,-20,-17,-18,-19,41,28,62,62,-49,-50,-51,-52,-53,-54,89,91,-43,-44,-47,-48,89,-97,116,116,116,-111,-111,116,-111,116,-65,-25,116,116,116,116,116,-67,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-68,-69,116,116,116,116,116,116,116,116,116,116,116,116,-125,-116,116,-113,-121,-124,-118,-122,-116,-114,]),'SEMICOLON':([4,26,27,28,37,43,53,54,61,74,81,104,106,107,108,109,110,114,115,116,131,132,133,134,140,141,142,143,144,146,148,149,165,166,168,169,170,184,185,186,187,188,191,199,202,217,218,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,247,252,254,],[5,35,-11,-16,-13,-12,78,79,-55,-14,-23,-73,-77,-80,-88,-92,-96,-104,-105,-26,164,-104,-58,-58,-75,-78,-81,-89,-93,-110,-110,-110,-56,-57,203,204,-74,-109,-101,-109,-102,-103,221,-112,-112,-99,-100,-112,-64,-112,-98,-76,-79,-82,-83,-84,-85,-86,-87,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'VAR':([5,72,92,96,126,],[9,9,9,9,9,]),'PRINCIPAL':([5,6,7,10,13,16,21,35,42,75,76,94,123,124,125,128,155,156,157,159,160,161,194,195,196,197,223,],[11,11,11,-27,11,-8,-28,-9,-10,-43,-44,-42,-42,-42,-34,-42,-42,-30,-33,-42,-42,-36,-29,-42,-32,-35,-31,]),'FUNCION':([5,6,10,16,35,42,75,76,94,123,124,125,128,155,156,157,159,160,161,194,195,196,197,223,],[12,12,12,-8,-9,-10,-43,-44,-42,-42,-42,-34,-42,-42,-30,-33,-42,-42,-36,-29,-42,-32,-35,-31,]),'INT':([9,12,35,47,73,154,],[18,18,18,18,18,18,]),'FLOAT':([9,12,35,47,73,154,],[19,19,19,19,19,19,]),'CHAR':([9,12,35,47,73,154,],[20,20,20,20,20,20,]),'LPAREN':([11,22,33,40,41,48,62,63,65,66,67,68,80,83,84,85,86,87,97,98,100,101,116,118,129,130,135,138,153,162,163,172,173,174,175,176,177,178,179,180,181,182,183,205,206,207,208,209,210,211,212,213,214,215,216,246,],[-7,32,-37,47,-37,73,-66,82,84,85,-119,87,97,-97,101,101,118,101,-111,-111,101,-111,-66,101,-65,-25,101,101,101,101,101,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'VOID':([12,],[24,]),'LBRACKET':([16,35,39,42,72,92,93,96,122,126,127,158,219,242,243,249,255,],[-8,-9,46,-10,46,46,46,46,46,46,46,46,46,46,46,-117,46,]),'COMMA':([27,28,37,74,81,91,104,105,106,107,108,109,110,114,115,116,121,132,140,141,142,143,144,146,148,149,170,184,185,186,187,188,199,200,202,217,218,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,247,252,254,],[36,-16,-13,-14,-23,-41,138,139,-77,-80,-88,-92,-96,-104,-105,-26,154,-104,-75,-78,-81,-89,-93,-110,-110,-110,-74,-109,-101,-109,-102,-103,-112,-61,-112,-99,-100,-112,-64,246,-112,-98,-76,-79,-82,-83,-84,-85,-86,-87,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'LSQUARE':([28,62,81,89,116,],[38,-26,98,-26,-26,]),'RPAREN':([32,47,71,73,81,89,90,91,95,97,99,102,103,104,105,106,107,108,109,110,114,115,116,117,119,121,129,136,137,140,141,142,143,144,146,148,149,151,152,162,167,170,171,184,185,186,187,188,193,198,199,200,202,217,218,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,247,252,253,254,],[39,72,92,96,-23,-26,-38,-41,126,-111,131,-70,-70,-73,-71,-77,-80,-88,-92,-96,-104,-105,-26,150,-126,-39,-65,168,169,-75,-78,-81,-89,-93,-110,-110,-110,190,191,199,202,-74,-72,-109,-101,-109,-102,-103,-40,224,-112,-61,-112,-99,-100,-112,-64,-59,-112,-98,-76,-79,-82,-83,-84,-85,-86,-87,-90,-91,-94,-95,-64,-63,-24,-62,-60,-22,]),'CTE_I':([38,83,84,85,87,97,98,100,101,111,118,129,130,135,138,145,153,162,163,172,173,174,175,176,177,178,179,180,181,182,183,205,206,207,208,209,210,211,212,213,214,215,216,246,],[44,-97,-106,-106,-106,-111,-111,-106,-111,146,-106,-65,-25,-106,-106,184,-106,-106,-106,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,]),'RSQUARE':([44,49,81,104,106,107,108,109,110,114,115,116,140,141,142,143,144,146,148,149,170,184,185,186,187,188,199,201,202,217,218,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,247,252,254,],[-15,74,-23,-73,-77,-80,-88,-92,-96,-104,-105,-26,-75,-78,-81,-89,-93,-110,-110,-110,-74,-109,-101,-109,-102,-103,-112,227,-112,-99,-100,-112,-64,-112,-98,-76,-79,-82,-83,-84,-85,-86,-87,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'RBRACKET':([46,50,51,52,55,56,57,58,59,60,75,76,77,78,79,164,203,204,221,241,248,250,251,256,257,258,259,],[-21,75,76,-45,-49,-50,-51,-52,-53,-54,-43,-44,-46,-47,-48,-67,-68,-69,-125,-116,-113,-121,-124,-118,-122,-116,-114,]),'LEE':([46,52,55,56,57,58,59,60,75,76,78,79,164,203,204,221,241,248,250,251,256,257,258,259,],[63,63,-49,-50,-51,-52,-53,-54,-43,-44,-47,-48,-67,-68,-69,-125,-116,-113,-121,-124,-118,-122,-116,-114,]),'ESCRIBE':([46,52,55,56,57,58,59,60,75,76,78,79,164,203,204,221,241,248,250,251,256,257,258,259,],[65,65,-49,-50,-51,-52,-53,-54,-43,-44,-47,-48,-67,-68,-69,-125,-116,-113,-121,-124,-118,-122,-116,-114,]),'SI':([46,52,55,56,57,58,59,60,75,76,78,79,164,203,204,221,241,248,250,251,256,257,258,259,],[66,66,-49,-50,-51,-52,-53,-54,-43,-44,-47,-48,-67,-68,-69,-125,-116,-113,-121,-124,-118,-122,-116,-114,]),'MIENTRAS':([46,52,55,56,57,58,59,60,75,76,78,79,164,203,204,221,241,248,250,251,256,257,258,259,],[67,67,-49,-50,-51,-52,-53,-54,-43,-44,-47,-48,-67,-68,-69,-125,-116,-113,-121,-124,-118,-122,-116,-114,]),'REGRESA':([46,52,55,56,57,58,59,60,75,76,78,79,164,203,204,221,241,248,250,251,256,257,258,259,],[68,68,-49,-50,-51,-52,-53,-54,-43,-44,-47,-48,-67,-68,-69,-125,-116,-113,-121,-124,-118,-122,-116,-114,]),'DESDE':([46,52,55,56,57,58,59,60,75,76,78,79,164,203,204,221,241,248,250,251,256,257,258,259,],[69,69,-49,-50,-51,-52,-53,-54,-43,-44,-47,-48,-67,-68,-69,-125,-116,-113,-121,-124,-118,-122,-116,-114,]),'HASTA':([61,81,88,104,106,107,108,109,110,114,115,116,120,132,133,134,140,141,142,143,144,146,148,149,165,166,170,184,185,186,187,188,199,202,217,218,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,247,252,254,],[-55,-23,-119,-73,-77,-80,-88,-92,-96,-104,-105,-26,153,-104,-58,-58,-75,-78,-81,-89,-93,-110,-110,-110,-56,-57,-74,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-76,-79,-82,-83,-84,-85,-86,-87,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'EQUAL':([62,64,81,89,116,132,227,247,254,],[-26,83,-23,-26,-26,83,-112,-24,-22,]),'SINO':([75,76,241,],[-43,-44,249,]),'MULT':([81,110,114,115,116,132,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,244,245,247,252,254,],[-23,-96,-104,-105,-26,-104,182,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-64,-63,-24,-62,-22,]),'DIV':([81,110,114,115,116,132,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,244,245,247,252,254,],[-23,-96,-104,-105,-26,-104,183,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-64,-63,-24,-62,-22,]),'PLUS':([81,109,110,114,115,116,132,143,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,239,240,244,245,247,252,254,],[-23,-92,-96,-104,-105,-26,-104,180,-93,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-94,-95,-64,-63,-24,-62,-22,]),'MINUS':([81,83,84,85,87,97,98,100,101,109,110,111,112,114,115,116,118,129,130,132,135,138,143,144,146,148,149,153,162,163,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,199,202,205,206,207,208,209,210,211,212,213,214,215,216,217,218,224,225,227,228,239,240,244,245,246,247,252,254,],[-23,-97,-106,-106,-106,-111,-111,-106,-111,-92,-96,145,147,-104,-105,-26,-106,-65,-25,-104,-106,-106,181,-93,-110,-110,-110,-106,-106,-106,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-109,-101,-109,-102,-103,-112,-112,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-99,-100,-112,-64,-112,-98,-94,-95,-64,-63,-106,-24,-62,-22,]),'LESSTHAN':([81,108,109,110,114,115,116,132,142,143,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,237,238,239,240,244,245,247,252,254,],[-23,-88,-92,-96,-104,-105,-26,-104,174,-89,-93,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'LESSEQUAL':([81,108,109,110,114,115,116,132,142,143,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,237,238,239,240,244,245,247,252,254,],[-23,-88,-92,-96,-104,-105,-26,-104,175,-89,-93,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'GREATERTHAN':([81,108,109,110,114,115,116,132,142,143,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,237,238,239,240,244,245,247,252,254,],[-23,-88,-92,-96,-104,-105,-26,-104,176,-89,-93,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'GREATEREQUAL':([81,108,109,110,114,115,116,132,142,143,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,237,238,239,240,244,245,247,252,254,],[-23,-88,-92,-96,-104,-105,-26,-104,177,-89,-93,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'SAME':([81,108,109,110,114,115,116,132,142,143,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,237,238,239,240,244,245,247,252,254,],[-23,-88,-92,-96,-104,-105,-26,-104,178,-89,-93,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'NOEQUAL':([81,108,109,110,114,115,116,132,142,143,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,237,238,239,240,244,245,247,252,254,],[-23,-88,-92,-96,-104,-105,-26,-104,179,-89,-93,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'AND':([81,107,108,109,110,114,115,116,132,141,142,143,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,231,232,233,234,235,236,237,238,239,240,244,245,247,252,254,],[-23,-80,-88,-92,-96,-104,-105,-26,-104,173,-81,-89,-93,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-82,-83,-84,-85,-86,-87,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'OR':([81,106,107,108,109,110,114,115,116,132,140,141,142,143,144,146,148,149,184,185,186,187,188,199,202,217,218,224,225,227,228,230,231,232,233,234,235,236,237,238,239,240,244,245,247,252,254,],[-23,-77,-80,-88,-92,-96,-104,-105,-26,-104,172,-78,-81,-89,-93,-110,-110,-110,-109,-101,-109,-102,-103,-112,-112,-99,-100,-112,-64,-112,-98,-79,-82,-83,-84,-85,-86,-87,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'HACER':([81,104,106,107,108,109,110,114,115,116,140,141,142,143,144,146,148,149,170,184,185,186,187,188,192,199,202,217,218,222,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,247,252,254,],[-23,-73,-77,-80,-88,-92,-96,-104,-105,-26,-75,-78,-81,-89,-93,-110,-110,-110,-74,-109,-101,-109,-102,-103,-123,-112,-112,-99,-100,243,-112,-64,-112,-98,-76,-79,-82,-83,-84,-85,-86,-87,-90,-91,-94,-95,-64,-63,-24,-62,-22,]),'CTE_F':([83,84,85,87,97,98,100,101,112,118,129,130,135,138,147,153,162,163,172,173,174,175,176,177,178,179,180,181,182,183,205,206,207,208,209,210,211,212,213,214,215,216,246,],[-97,-107,-107,-107,-111,-111,-107,-111,148,-107,-65,-25,-107,-107,186,-107,-107,-107,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,]),'CTE_C':([83,84,85,87,97,98,100,101,113,118,129,130,135,138,153,162,163,172,173,174,175,176,177,178,179,180,181,182,183,205,206,207,208,209,210,211,212,213,214,215,216,246,],[-97,-108,-108,-108,-111,-111,-108,-111,149,-108,-65,-25,-108,-108,-108,-108,-108,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,]),'CTE_S':([84,139,],[105,105,]),'ENTONCES':([150,189,],[-115,219,]),'HAZ':([190,220,],[-120,242,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'p_n_mainJump':([2,],[3,]),'vars':([5,72,92,96,126,],[6,93,122,127,158,]),'mult_funcion':([5,6,10,],[7,13,21,]),'principal':([5,6,7,13,],[8,14,15,25,]),'funcion':([5,6,10,],[10,10,10,]),'vars_aux':([9,35,],[16,42,]),'tipo_simple':([9,12,35,47,73,154,],[17,23,17,70,70,70,]),'n_register_glob':([11,],[22,]),'vars_aux1':([17,36,],[26,43,]),'vars_aux2':([17,36,],[27,27,]),'n_save_type':([18,19,20,24,],[29,30,31,34,]),'n_save_var':([28,],[37,]),'n_register_func':([33,41,],[40,48,]),'bloque':([39,72,92,93,96,122,126,127,158,219,242,243,255,],[45,94,123,124,128,155,159,160,195,241,250,251,258,]),'n_save_array':([44,],[49,]),'mult_estatutos':([46,52,],[50,77,]),'empty':([46,],[51,]),'estatuto':([46,52,],[52,52,]),'asigna':([46,52,69,],[53,53,88,]),'llamada':([46,52,84,85,87,100,118,135,138,153,162,163,205,206,207,208,209,210,211,212,213,214,215,216,246,],[54,54,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'lee':([46,52,],[55,55,]),'escribe':([46,52,],[56,56,]),'condicion':([46,52,],[57,57,]),'ciclo_w':([46,52,],[58,58,]),'retorno':([46,52,],[59,59,]),'ciclo_f':([46,52,],[60,60,]),'mult_asigna':([46,52,69,100,],[61,61,61,134,]),'variable':([46,52,69,82,84,85,87,100,118,135,138,153,162,163,205,206,207,208,209,210,211,212,213,214,215,216,246,],[64,64,64,99,114,114,114,132,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'param':([47,73,154,],[71,95,193,]),'n_verify_func':([62,116,],[80,80,]),'n_getVarVal':([62,89,116,],[81,81,81,]),'n_startCicle':([67,88,],[86,120,]),'param_aux1':([70,],[90,]),'n_Operador':([83,172,173,174,175,176,177,178,179,180,181,182,183,],[100,205,206,207,208,209,210,211,212,213,214,215,216,]),'mult_exp':([84,85,87,100,118,135,138,153,162,163,246,],[102,117,119,133,151,167,170,192,200,201,200,]),'mult_cte_s':([84,139,],[103,171,]),'exp':([84,85,87,100,118,135,138,153,162,163,205,246,],[104,104,104,104,104,104,104,104,104,104,229,104,]),'t_exp':([84,85,87,100,118,135,138,153,162,163,205,206,246,],[106,106,106,106,106,106,106,106,106,106,106,230,106,]),'g_exp':([84,85,87,100,118,135,138,153,162,163,205,206,207,208,209,210,211,212,246,],[107,107,107,107,107,107,107,107,107,107,107,107,231,232,233,234,235,236,107,]),'m_exp':([84,85,87,100,118,135,138,153,162,163,205,206,207,208,209,210,211,212,213,214,246,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,237,238,108,]),'t':([84,85,87,100,118,135,138,153,162,163,205,206,207,208,209,210,211,212,213,214,215,216,246,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,239,240,109,]),'f':([84,85,87,100,118,135,138,153,162,163,205,206,207,208,209,210,211,212,213,214,215,216,246,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'n_tempTypeI':([84,85,87,100,118,135,138,153,162,163,205,206,207,208,209,210,211,212,213,214,215,216,246,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'n_tempTypeF':([84,85,87,100,118,135,138,153,162,163,205,206,207,208,209,210,211,212,213,214,215,216,246,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'n_tempTypeC':([84,85,87,100,118,135,138,153,162,163,205,206,207,208,209,210,211,212,213,214,215,216,246,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'save_param':([91,],[121,]),'n_endof_func':([94,123,124,128,155,159,160,195,],[125,156,157,161,194,196,197,223,]),'n_start_FF':([97,98,101,],[129,130,135,]),'n_escribeExp':([102,103,],[136,137,]),'n_orQuad':([106,],[140,]),'n_andQuad':([107,],[141,]),'n_compareQuad':([108,],[142,]),'n_sumQuad':([109,],[143,]),'n_multQuad':([110,],[144,]),'n_regresaExp':([119,],[152,]),'n_start_pcounter':([129,],[162,]),'n_hasDim':([130,],[163,]),'n_asignQuad':([133,134,],[165,166,]),'n_directPrint':([146,148,149,],[185,187,188,]),'n_ifQuad':([150,],[189,]),'param_exp':([162,246,],[198,253,]),'n_directPrint_neg':([184,186,],[217,218,]),'n_evalExp':([190,],[220,]),'n_evalExp_for':([192,],[222,]),'n_end_FF':([199,202,224,227,],[225,228,244,247,]),'n_parameter_action':([200,],[226,]),'n_last_param_action':([225,244,],[245,252,]),'n_endIfQuad':([241,258,],[248,259,]),'n_arr_quad':([247,],[254,]),'p_n_sinoQuad':([249,],[255,]),'n_endWhile':([250,],[256,]),'n_endFor':([251,],[257,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars mult_funcion principal','programa',7,'p_programa','fa_yacc.py',82),
  ('programa -> PROGRAMA p_n_mainJump ID SEMICOLON mult_funcion principal','programa',6,'p_programa','fa_yacc.py',83),
  ('programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars principal','programa',6,'p_programa','fa_yacc.py',84),
  ('programa -> PROGRAMA p_n_mainJump ID SEMICOLON principal','programa',5,'p_programa','fa_yacc.py',85),
  ('p_n_mainJump -> <empty>','p_n_mainJump',0,'p_n_mainJump','fa_yacc.py',94),
  ('principal -> PRINCIPAL n_register_glob LPAREN RPAREN bloque','principal',5,'p_principal','fa_yacc.py',103),
  ('n_register_glob -> <empty>','n_register_glob',0,'p_n_register_glob','fa_yacc.py',108),
  ('vars -> VAR vars_aux','vars',2,'p_vars','fa_yacc.py',119),
  ('vars_aux -> tipo_simple vars_aux1 SEMICOLON','vars_aux',3,'p_vars_aux','fa_yacc.py',125),
  ('vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux','vars_aux',4,'p_vars_aux','fa_yacc.py',126),
  ('vars_aux1 -> vars_aux2','vars_aux1',1,'p_vars_aux1','fa_yacc.py',132),
  ('vars_aux1 -> vars_aux2 COMMA vars_aux1','vars_aux1',3,'p_vars_aux1','fa_yacc.py',133),
  ('vars_aux2 -> ID n_save_var','vars_aux2',2,'p_vars_aux2','fa_yacc.py',139),
  ('vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE','vars_aux2',5,'p_vars_aux2','fa_yacc.py',140),
  ('n_save_array -> <empty>','n_save_array',0,'p_n_save_array','fa_yacc.py',145),
  ('n_save_var -> <empty>','n_save_var',0,'p_n_save_var','fa_yacc.py',161),
  ('tipo_simple -> INT n_save_type','tipo_simple',2,'p_tipo_simple','fa_yacc.py',258),
  ('tipo_simple -> FLOAT n_save_type','tipo_simple',2,'p_tipo_simple','fa_yacc.py',259),
  ('tipo_simple -> CHAR n_save_type','tipo_simple',2,'p_tipo_simple','fa_yacc.py',260),
  ('n_save_type -> <empty>','n_save_type',0,'p_n_save_type','fa_yacc.py',264),
  ('empty -> <empty>','empty',0,'p_empty','fa_yacc.py',271),
  ('variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad','variable',9,'p_variable','fa_yacc.py',276),
  ('variable -> ID n_getVarVal','variable',2,'p_variable','fa_yacc.py',277),
  ('n_arr_quad -> <empty>','n_arr_quad',0,'p_n_arr_quad','fa_yacc.py',282),
  ('n_hasDim -> <empty>','n_hasDim',0,'p_n_hasDim','fa_yacc.py',323),
  ('n_getVarVal -> <empty>','n_getVarVal',0,'p_n_getVarVal','fa_yacc.py',340),
  ('mult_funcion -> funcion','mult_funcion',1,'p_mult_funcion','fa_yacc.py',365),
  ('mult_funcion -> funcion mult_funcion','mult_funcion',2,'p_mult_funcion','fa_yacc.py',366),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func','funcion',10,'p_funcion','fa_yacc.py',371),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func','funcion',9,'p_funcion','fa_yacc.py',372),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func','funcion',11,'p_funcion','fa_yacc.py',373),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func','funcion',10,'p_funcion','fa_yacc.py',374),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func','funcion',9,'p_funcion','fa_yacc.py',375),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func','funcion',8,'p_funcion','fa_yacc.py',376),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func','funcion',10,'p_funcion','fa_yacc.py',377),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func','funcion',9,'p_funcion','fa_yacc.py',378),
  ('n_register_func -> <empty>','n_register_func',0,'p_n_register_func','fa_yacc.py',382),
  ('param -> tipo_simple param_aux1','param',2,'p_param','fa_yacc.py',419),
  ('param_aux1 -> ID save_param','param_aux1',2,'p_param_aux1','fa_yacc.py',425),
  ('param_aux1 -> ID save_param COMMA param','param_aux1',4,'p_param_aux1','fa_yacc.py',426),
  ('save_param -> <empty>','save_param',0,'p_save_param','fa_yacc.py',431),
  ('n_endof_func -> <empty>','n_endof_func',0,'p_n_endof_func','fa_yacc.py',446),
  ('bloque -> LBRACKET mult_estatutos RBRACKET','bloque',3,'p_bloque','fa_yacc.py',461),
  ('bloque -> LBRACKET empty RBRACKET','bloque',3,'p_bloque','fa_yacc.py',462),
  ('mult_estatutos -> estatuto','mult_estatutos',1,'p_mult_estatutos','fa_yacc.py',468),
  ('mult_estatutos -> estatuto mult_estatutos','mult_estatutos',2,'p_mult_estatutos','fa_yacc.py',469),
  ('estatuto -> asigna SEMICOLON','estatuto',2,'p_estatuto','fa_yacc.py',474),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','fa_yacc.py',475),
  ('estatuto -> lee','estatuto',1,'p_estatuto','fa_yacc.py',476),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','fa_yacc.py',477),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','fa_yacc.py',478),
  ('estatuto -> ciclo_w','estatuto',1,'p_estatuto','fa_yacc.py',479),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','fa_yacc.py',480),
  ('estatuto -> ciclo_f','estatuto',1,'p_estatuto','fa_yacc.py',481),
  ('asigna -> mult_asigna','asigna',1,'p_asigna','fa_yacc.py',486),
  ('mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad','mult_asigna',5,'p_mult_asigna','fa_yacc.py',492),
  ('mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad','mult_asigna',5,'p_mult_asigna','fa_yacc.py',493),
  ('n_asignQuad -> <empty>','n_asignQuad',0,'p_n_asignQuad','fa_yacc.py',498),
  ('param_exp -> mult_exp n_parameter_action','param_exp',2,'p_param_exp','fa_yacc.py',525),
  ('param_exp -> mult_exp n_parameter_action COMMA param_exp','param_exp',4,'p_param_exp','fa_yacc.py',526),
  ('n_parameter_action -> <empty>','n_parameter_action',0,'p_n_parameter_action','fa_yacc.py',531),
  ('llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action','llamada',9,'p_llamada','fa_yacc.py',564),
  ('llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action','llamada',8,'p_llamada','fa_yacc.py',565),
  ('n_last_param_action -> <empty>','n_last_param_action',0,'p_n_last_param_action','fa_yacc.py',570),
  ('n_start_pcounter -> <empty>','n_start_pcounter',0,'p_n_start_pcounter','fa_yacc.py',602),
  ('n_verify_func -> <empty>','n_verify_func',0,'p_n_verify_func','fa_yacc.py',615),
  ('lee -> LEE LPAREN variable RPAREN SEMICOLON','lee',5,'p_lee','fa_yacc.py',625),
  ('escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON','escribe',6,'p_escribe','fa_yacc.py',638),
  ('escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON','escribe',6,'p_escribe','fa_yacc.py',639),
  ('n_escribeExp -> <empty>','n_escribeExp',0,'p_n_escribeExp','fa_yacc.py',644),
  ('mult_cte_s -> CTE_S','mult_cte_s',1,'p_mult_cte_s','fa_yacc.py',655),
  ('mult_cte_s -> CTE_S COMMA mult_cte_s','mult_cte_s',3,'p_mult_cte_s','fa_yacc.py',656),
  ('mult_exp -> exp','mult_exp',1,'p_mult_exp','fa_yacc.py',661),
  ('mult_exp -> exp COMMA mult_exp','mult_exp',3,'p_mult_exp','fa_yacc.py',662),
  ('exp -> t_exp n_orQuad','exp',2,'p_exp','fa_yacc.py',667),
  ('exp -> t_exp n_orQuad OR n_Operador exp','exp',5,'p_exp','fa_yacc.py',668),
  ('n_orQuad -> <empty>','n_orQuad',0,'p_n_orQuad','fa_yacc.py',673),
  ('t_exp -> g_exp n_andQuad','t_exp',2,'p_t_exp','fa_yacc.py',709),
  ('t_exp -> g_exp n_andQuad AND n_Operador t_exp','t_exp',5,'p_t_exp','fa_yacc.py',710),
  ('n_andQuad -> <empty>','n_andQuad',0,'p_n_andQuad','fa_yacc.py',715),
  ('g_exp -> m_exp n_compareQuad','g_exp',2,'p_g_exp','fa_yacc.py',750),
  ('g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',751),
  ('g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',752),
  ('g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',753),
  ('g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',754),
  ('g_exp -> m_exp n_compareQuad SAME n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',755),
  ('g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',756),
  ('n_compareQuad -> <empty>','n_compareQuad',0,'p_n_compareQuad','fa_yacc.py',761),
  ('m_exp -> t n_sumQuad','m_exp',2,'p_m_exp','fa_yacc.py',796),
  ('m_exp -> t n_sumQuad PLUS n_Operador m_exp','m_exp',5,'p_m_exp','fa_yacc.py',797),
  ('m_exp -> t n_sumQuad MINUS n_Operador m_exp','m_exp',5,'p_m_exp','fa_yacc.py',798),
  ('n_sumQuad -> <empty>','n_sumQuad',0,'p_n_sumQuad','fa_yacc.py',803),
  ('t -> f n_multQuad','t',2,'p_t','fa_yacc.py',837),
  ('t -> f n_multQuad MULT n_Operador t','t',5,'p_t','fa_yacc.py',838),
  ('t -> f n_multQuad DIV n_Operador t','t',5,'p_t','fa_yacc.py',839),
  ('n_multQuad -> <empty>','n_multQuad',0,'p_n_multQuad','fa_yacc.py',845),
  ('n_Operador -> <empty>','n_Operador',0,'p_n_Operador','fa_yacc.py',879),
  ('f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF','f',5,'p_f','fa_yacc.py',887),
  ('f -> n_tempTypeI MINUS CTE_I n_directPrint_neg','f',4,'p_f','fa_yacc.py',888),
  ('f -> n_tempTypeF MINUS CTE_F n_directPrint_neg','f',4,'p_f','fa_yacc.py',889),
  ('f -> n_tempTypeI CTE_I n_directPrint','f',3,'p_f','fa_yacc.py',890),
  ('f -> n_tempTypeF CTE_F n_directPrint','f',3,'p_f','fa_yacc.py',891),
  ('f -> n_tempTypeC CTE_C n_directPrint','f',3,'p_f','fa_yacc.py',892),
  ('f -> variable','f',1,'p_f','fa_yacc.py',893),
  ('f -> llamada','f',1,'p_f','fa_yacc.py',894),
  ('n_tempTypeI -> <empty>','n_tempTypeI',0,'p_n_tempTypeI','fa_yacc.py',899),
  ('n_tempTypeF -> <empty>','n_tempTypeF',0,'p_n_tempTypeF','fa_yacc.py',906),
  ('n_tempTypeC -> <empty>','n_tempTypeC',0,'p_n_tempTypeC','fa_yacc.py',913),
  ('n_directPrint_neg -> <empty>','n_directPrint_neg',0,'p_n_directPrint_neg','fa_yacc.py',920),
  ('n_directPrint -> <empty>','n_directPrint',0,'p_n_directPrint','fa_yacc.py',932),
  ('n_start_FF -> <empty>','n_start_FF',0,'p_n_start_FF','fa_yacc.py',944),
  ('n_end_FF -> <empty>','n_end_FF',0,'p_n_end_FF','fa_yacc.py',951),
  ('condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad','condicion',8,'p_condicion','fa_yacc.py',962),
  ('condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad','condicion',11,'p_condicion','fa_yacc.py',963),
  ('n_ifQuad -> <empty>','n_ifQuad',0,'p_n_ifQuad','fa_yacc.py',968),
  ('n_endIfQuad -> <empty>','n_endIfQuad',0,'p_n_endIfQuad','fa_yacc.py',984),
  ('p_n_sinoQuad -> <empty>','p_n_sinoQuad',0,'p_n_sinoQuad','fa_yacc.py',993),
  ('ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile','ciclo_w',9,'p_ciclo_w','fa_yacc.py',1006),
  ('n_startCicle -> <empty>','n_startCicle',0,'p_n_startCicle','fa_yacc.py',1011),
  ('n_evalExp -> <empty>','n_evalExp',0,'p_n_evalExp','fa_yacc.py',1018),
  ('n_endWhile -> <empty>','n_endWhile',0,'p_n_endWhile','fa_yacc.py',1034),
  ('ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor','ciclo_f',9,'p_ciclo_f','fa_yacc.py',1051),
  ('n_evalExp_for -> <empty>','n_evalExp_for',0,'p_n_evalExp_for','fa_yacc.py',1057),
  ('n_endFor -> <empty>','n_endFor',0,'p_n_endFor','fa_yacc.py',1087),
  ('retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON','retorno',6,'p_retorno','fa_yacc.py',1101),
  ('n_regresaExp -> <empty>','n_regresaExp',0,'p_n_regresaExp','fa_yacc.py',1106),
]
