
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMMA COMMENT CTE_C CTE_F CTE_I CTE_S DESDE DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GREATEREQUAL GREATERTHAN HACER HASTA HAZ ID INT LBRACKET LEE LESSEQUAL LESSTHAN LPAREN LSQUARE MIENTRAS MINUS MULT NOEQUAL OR PLUS PRINCIPAL PROGRAMA RBRACKET REGRESA RPAREN RSQUARE SAME SEMICOLON SI SINO VAR VOID\n    programa : PROGRAMA ID SEMICOLON vars funcion principal\n            | PROGRAMA ID SEMICOLON funcion principal\n            | PROGRAMA ID SEMICOLON vars principal\n            | PROGRAMA ID SEMICOLON principal\n    \n    principal : PRINCIPAL LPAREN RPAREN bloque\n    \n  vars : VAR vars_aux\n  \n  vars_aux : tipo_simple vars_aux1 SEMICOLON\n  \t\t   | tipo_simple vars_aux1 SEMICOLON vars_aux\n  \n  vars_aux1 : vars_aux2\n  \t\t    | vars_aux2 COMMA vars_aux1\n  \n    vars_aux2 : ID n_save_var\n    \t\t  | ID LSQUARE CTE_I n_save_array RSQUARE\n  \n        n_save_array :\n    \n        n_save_var :\n    \n    tipo_simple : INT n_save_type\n                | FLOAT n_save_type\n                | CHAR n_save_type\n    n_save_type : \n    empty :\n    \n    variable : ID LSQUARE mult_exp RSQUARE\n             | ID p_n_getVarVal\n    \n    p_n_getVarVal :\n    \n  funcion : FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque\n  \t\t  | FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque\n  \t\t  | FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque\n          | FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque\n          | FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque\n          | FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque\n          | FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque\n          | FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque\n  n_register_func : \n  param : tipo_simple param_aux1\n  \n  param_aux1 : ID save_param\n  \t\t     | ID save_param COMMA param\n  \n    save_param :\n    \n  bloque : LBRACKET mult_estatutos RBRACKET\n         | LBRACKET empty RBRACKET\n  \n  mult_estatutos : estatuto\n  \t\t\t\t | estatuto mult_estatutos\n  \n  estatuto : asigna SEMICOLON\n  \t\t   | llamada\n           | lee\n           | escribe\n           | condicion\n           | ciclo_w\n           | retorno\n           | ciclo_f\n  \n  asigna : mult_asigna\n  \n    mult_asigna : variable EQUAL n_Operador mult_exp n_asignQuad\n                | variable EQUAL n_Operador mult_asigna n_asignQuad\n    \n    n_asignQuad :\n    \n  llamada : ID LPAREN mult_exp RPAREN\n  \n  lee : LEE LPAREN variable RPAREN\n  \n  escribe : ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON\n  \t\t  | ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON\n  \n    n_escribeExp :\n    \n  mult_cte_s : CTE_S\n  \t\t     | CTE_S COMMA mult_cte_s\n  \n  mult_exp : exp\n  \t\t   | exp COMMA mult_exp\n  \n  exp : t_exp n_orQuad\n  \t  | t_exp n_orQuad OR n_Operador exp\n  \n    n_orQuad :\n    \n  t_exp : g_exp n_andQuad\n        | g_exp n_andQuad AND n_Operador t_exp\n  \n    n_andQuad :\n    \n  g_exp : m_exp n_compareQuad\n  \t\t| m_exp n_compareQuad LESSTHAN n_Operador g_exp\n        | m_exp n_compareQuad LESSEQUAL n_Operador g_exp\n        | m_exp n_compareQuad GREATERTHAN n_Operador g_exp\n        | m_exp n_compareQuad GREATEREQUAL n_Operador g_exp\n        | m_exp n_compareQuad SAME n_Operador g_exp\n        | m_exp n_compareQuad NOEQUAL n_Operador g_exp\n  \n    n_compareQuad :\n    \n  m_exp : t n_sumQuad\n  \t    | t n_sumQuad PLUS n_Operador m_exp\n        | t n_sumQuad MINUS n_Operador m_exp\n  \n    n_sumQuad :\n    \n  \tt : f n_multQuad\n      | f n_multQuad MULT n_Operador t\n      | f n_multQuad DIV n_Operador t\n  \n    n_multQuad :\n    \n    n_Operador :\n    \n  f : LPAREN n_FF mult_exp RPAREN n_FF\n  \t| n_tempTypeI CTE_I n_directPrint\n    | n_tempTypeF CTE_F n_directPrint\n    | n_tempTypeC CTE_C n_directPrint\n    | variable\n    | llamada\n  \n    n_tempTypeI :\n    \n    n_tempTypeF :\n    \n    n_tempTypeC :\n    \n    n_directPrint :\n    \n    n_FF :\n    \n  condicion : SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad\n            | SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad\n  \n    n_ifQuad :\n    \n    n_endIfQuad :\n    \n    p_n_sinoQuad :\n    \n  ciclo_w : MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile\n  \n    n_startCicle :\n    \n    n_evalExp :\n    \n    n_endWhile :\n    \n  ciclo_f : DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor\n  \n    n_evalExp_for :\n    \n    n_endFor :\n    \n  retorno : REGRESA mult_exp SEMICOLON\n  '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,7,12,13,22,38,70,71,],[0,-4,-3,-2,-1,-5,-36,-37,]),'ID':([2,15,16,17,18,19,20,26,27,28,30,33,39,47,49,50,51,52,53,54,55,63,64,66,70,71,73,74,75,77,78,79,80,89,96,109,114,115,116,122,134,136,146,147,148,149,150,151,152,153,154,155,156,157,162,175,176,177,178,179,180,181,182,183,184,185,186,191,192,209,212,214,215,217,218,219,220,],[3,25,-18,-18,-18,29,-18,-15,-16,-17,37,25,57,57,-41,-42,-43,-44,-45,-46,-47,95,-101,99,-36,-37,-40,95,95,108,-83,95,95,-94,108,95,95,-107,95,95,-52,-53,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,95,95,95,95,95,95,95,95,95,95,95,95,95,-54,-55,-98,-95,-103,-106,-100,-104,-98,-96,]),'SEMICOLON':([3,23,24,25,34,41,48,56,76,82,83,84,85,86,87,88,93,94,95,97,117,118,119,120,121,123,124,125,134,135,137,138,139,145,159,160,161,168,169,170,171,187,195,196,197,198,199,200,201,202,203,204,205,206,207,],[4,32,-9,-14,-11,-10,73,-48,-21,115,-59,-63,-66,-74,-78,-82,-88,-89,-22,-12,-61,-64,-67,-75,-79,-93,-93,-93,-52,-20,-88,-51,-51,-60,-85,-86,-87,-49,-50,191,192,-94,-62,-65,-68,-69,-70,-71,-72,-73,-76,-77,-80,-81,-84,]),'VAR':([4,68,100,104,131,],[8,8,8,8,8,]),'FUNCION':([4,5,14,32,40,],[9,9,-6,-7,-8,]),'PRINCIPAL':([4,5,6,11,14,32,40,70,71,102,129,130,133,164,166,167,190,],[10,10,10,10,-6,-7,-8,-36,-37,-28,-24,-27,-30,-23,-26,-29,-25,]),'INT':([8,9,32,43,69,163,],[16,16,16,16,16,16,]),'FLOAT':([8,9,32,43,69,163,],[17,17,17,17,17,17,]),'CHAR':([8,9,32,43,69,163,],[18,18,18,18,18,18,]),'VOID':([9,],[20,]),'LPAREN':([10,29,36,37,44,57,58,60,61,62,63,74,75,78,79,80,81,89,95,109,114,116,122,146,147,148,149,150,151,152,153,154,155,156,157,162,175,176,177,178,179,180,181,182,183,184,185,186,],[21,-31,43,-31,69,74,77,79,80,-101,89,89,89,-83,89,89,114,-94,74,89,89,89,89,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'LBRACKET':([14,31,32,40,68,100,101,104,128,131,132,165,193,210,211,213,216,],[-6,39,-7,-8,39,39,39,39,39,39,39,39,39,39,39,-99,39,]),'RPAREN':([21,43,67,69,76,83,84,85,86,87,88,93,94,95,98,99,103,105,107,108,110,111,112,113,117,118,119,120,121,123,124,125,127,134,135,140,141,144,145,158,159,160,161,172,187,189,195,196,197,198,199,200,201,202,203,204,205,206,207,],[31,68,100,104,-21,-59,-63,-66,-74,-78,-82,-88,-89,-22,-32,-35,131,134,136,-22,-56,-56,-57,143,-61,-64,-67,-75,-79,-93,-93,-93,-33,-52,-20,170,171,174,-60,187,-85,-86,-87,-58,-94,-34,-62,-65,-68,-69,-70,-71,-72,-73,-76,-77,-80,-81,-84,]),'COMMA':([24,25,34,76,83,84,85,86,87,88,93,94,95,97,99,112,117,118,119,120,121,123,124,125,127,134,135,137,159,160,161,187,195,196,197,198,199,200,201,202,203,204,205,206,207,],[33,-14,-11,-21,116,-63,-66,-74,-78,-82,-88,-89,-22,-12,-35,142,-61,-64,-67,-75,-79,-93,-93,-93,163,-52,-20,-88,-85,-86,-87,-94,-62,-65,-68,-69,-70,-71,-72,-73,-76,-77,-80,-81,-84,]),'LSQUARE':([25,57,95,108,],[35,75,75,75,]),'CTE_I':([35,63,74,75,78,79,80,89,90,109,114,116,122,146,147,148,149,150,151,152,153,154,155,156,157,162,175,176,177,178,179,180,181,182,183,184,185,186,],[42,-90,-90,-90,-83,-90,-90,-94,123,-90,-90,-90,-90,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,]),'RBRACKET':([39,45,46,47,49,50,51,52,53,54,55,70,71,72,73,115,134,136,191,192,209,212,214,215,217,218,219,220,],[-19,70,71,-38,-41,-42,-43,-44,-45,-46,-47,-36,-37,-39,-40,-107,-52,-53,-54,-55,-98,-95,-103,-106,-100,-104,-98,-96,]),'LEE':([39,47,49,50,51,52,53,54,55,70,71,73,115,134,136,191,192,209,212,214,215,217,218,219,220,],[58,58,-41,-42,-43,-44,-45,-46,-47,-36,-37,-40,-107,-52,-53,-54,-55,-98,-95,-103,-106,-100,-104,-98,-96,]),'ESCRIBE':([39,47,49,50,51,52,53,54,55,70,71,73,115,134,136,191,192,209,212,214,215,217,218,219,220,],[60,60,-41,-42,-43,-44,-45,-46,-47,-36,-37,-40,-107,-52,-53,-54,-55,-98,-95,-103,-106,-100,-104,-98,-96,]),'SI':([39,47,49,50,51,52,53,54,55,70,71,73,115,134,136,191,192,209,212,214,215,217,218,219,220,],[61,61,-41,-42,-43,-44,-45,-46,-47,-36,-37,-40,-107,-52,-53,-54,-55,-98,-95,-103,-106,-100,-104,-98,-96,]),'MIENTRAS':([39,47,49,50,51,52,53,54,55,70,71,73,115,134,136,191,192,209,212,214,215,217,218,219,220,],[62,62,-41,-42,-43,-44,-45,-46,-47,-36,-37,-40,-107,-52,-53,-54,-55,-98,-95,-103,-106,-100,-104,-98,-96,]),'REGRESA':([39,47,49,50,51,52,53,54,55,70,71,73,115,134,136,191,192,209,212,214,215,217,218,219,220,],[63,63,-41,-42,-43,-44,-45,-46,-47,-36,-37,-40,-107,-52,-53,-54,-55,-98,-95,-103,-106,-100,-104,-98,-96,]),'DESDE':([39,47,49,50,51,52,53,54,55,70,71,73,115,134,136,191,192,209,212,214,215,217,218,219,220,],[64,64,-41,-42,-43,-44,-45,-46,-47,-36,-37,-40,-107,-52,-53,-54,-55,-98,-95,-103,-106,-100,-104,-98,-96,]),'RSQUARE':([42,65,76,83,84,85,86,87,88,93,94,95,106,117,118,119,120,121,123,124,125,134,135,145,159,160,161,187,195,196,197,198,199,200,201,202,203,204,205,206,207,],[-13,97,-21,-59,-63,-66,-74,-78,-82,-88,-89,-22,135,-61,-64,-67,-75,-79,-93,-93,-93,-52,-20,-60,-85,-86,-87,-94,-62,-65,-68,-69,-70,-71,-72,-73,-76,-77,-80,-81,-84,]),'HASTA':([56,76,83,84,85,86,87,88,93,94,95,117,118,119,120,121,123,124,125,126,134,135,137,138,139,145,159,160,161,168,169,187,195,196,197,198,199,200,201,202,203,204,205,206,207,],[-48,-21,-59,-63,-66,-74,-78,-82,-88,-89,-22,-61,-64,-67,-75,-79,-93,-93,-93,162,-52,-20,-88,-51,-51,-60,-85,-86,-87,-49,-50,-94,-62,-65,-68,-69,-70,-71,-72,-73,-76,-77,-80,-81,-84,]),'EQUAL':([57,59,76,95,108,135,137,],[-22,78,-21,-22,-22,-20,78,]),'CTE_F':([63,74,75,78,79,80,89,91,109,114,116,122,146,147,148,149,150,151,152,153,154,155,156,157,162,175,176,177,178,179,180,181,182,183,184,185,186,],[-91,-91,-91,-83,-91,-91,-94,124,-91,-91,-91,-91,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,]),'CTE_C':([63,74,75,78,79,80,89,92,109,114,116,122,146,147,148,149,150,151,152,153,154,155,156,157,162,175,176,177,178,179,180,181,182,183,184,185,186,],[-92,-92,-92,-83,-92,-92,-94,125,-92,-92,-92,-92,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-92,-92,-92,-92,-92,-92,-92,-92,-92,-92,-92,-92,-92,]),'SINO':([70,71,209,],[-36,-37,213,]),'MULT':([76,88,93,94,95,121,123,124,125,134,135,137,159,160,161,187,207,],[-21,-82,-88,-89,-22,156,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-84,]),'DIV':([76,88,93,94,95,121,123,124,125,134,135,137,159,160,161,187,207,],[-21,-82,-88,-89,-22,157,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-84,]),'PLUS':([76,87,88,93,94,95,120,121,123,124,125,134,135,137,159,160,161,187,205,206,207,],[-21,-78,-82,-88,-89,-22,154,-79,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-80,-81,-84,]),'MINUS':([76,87,88,93,94,95,120,121,123,124,125,134,135,137,159,160,161,187,205,206,207,],[-21,-78,-82,-88,-89,-22,155,-79,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-80,-81,-84,]),'LESSTHAN':([76,86,87,88,93,94,95,119,120,121,123,124,125,134,135,137,159,160,161,187,203,204,205,206,207,],[-21,-74,-78,-82,-88,-89,-22,148,-75,-79,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-76,-77,-80,-81,-84,]),'LESSEQUAL':([76,86,87,88,93,94,95,119,120,121,123,124,125,134,135,137,159,160,161,187,203,204,205,206,207,],[-21,-74,-78,-82,-88,-89,-22,149,-75,-79,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-76,-77,-80,-81,-84,]),'GREATERTHAN':([76,86,87,88,93,94,95,119,120,121,123,124,125,134,135,137,159,160,161,187,203,204,205,206,207,],[-21,-74,-78,-82,-88,-89,-22,150,-75,-79,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-76,-77,-80,-81,-84,]),'GREATEREQUAL':([76,86,87,88,93,94,95,119,120,121,123,124,125,134,135,137,159,160,161,187,203,204,205,206,207,],[-21,-74,-78,-82,-88,-89,-22,151,-75,-79,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-76,-77,-80,-81,-84,]),'SAME':([76,86,87,88,93,94,95,119,120,121,123,124,125,134,135,137,159,160,161,187,203,204,205,206,207,],[-21,-74,-78,-82,-88,-89,-22,152,-75,-79,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-76,-77,-80,-81,-84,]),'NOEQUAL':([76,86,87,88,93,94,95,119,120,121,123,124,125,134,135,137,159,160,161,187,203,204,205,206,207,],[-21,-74,-78,-82,-88,-89,-22,153,-75,-79,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-76,-77,-80,-81,-84,]),'AND':([76,85,86,87,88,93,94,95,118,119,120,121,123,124,125,134,135,137,159,160,161,187,197,198,199,200,201,202,203,204,205,206,207,],[-21,-66,-74,-78,-82,-88,-89,-22,147,-67,-75,-79,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-68,-69,-70,-71,-72,-73,-76,-77,-80,-81,-84,]),'OR':([76,84,85,86,87,88,93,94,95,117,118,119,120,121,123,124,125,134,135,137,159,160,161,187,196,197,198,199,200,201,202,203,204,205,206,207,],[-21,-63,-66,-74,-78,-82,-88,-89,-22,146,-64,-67,-75,-79,-93,-93,-93,-52,-20,-88,-85,-86,-87,-94,-65,-68,-69,-70,-71,-72,-73,-76,-77,-80,-81,-84,]),'HACER':([76,83,84,85,86,87,88,93,94,95,117,118,119,120,121,123,124,125,134,135,145,159,160,161,187,188,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-21,-59,-63,-66,-74,-78,-82,-88,-89,-22,-61,-64,-67,-75,-79,-93,-93,-93,-52,-20,-60,-85,-86,-87,-94,-105,-62,-65,-68,-69,-70,-71,-72,-73,-76,-77,-80,-81,-84,211,]),'CTE_S':([79,142,],[112,112,]),'ENTONCES':([143,173,],[-97,193,]),'HAZ':([174,194,],[-102,210,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'vars':([4,68,100,104,131,],[5,101,128,132,165,]),'funcion':([4,5,],[6,11,]),'principal':([4,5,6,11,],[7,12,13,22,]),'vars_aux':([8,32,],[14,40,]),'tipo_simple':([8,9,32,43,69,163,],[15,19,15,66,66,66,]),'vars_aux1':([15,33,],[23,41,]),'vars_aux2':([15,33,],[24,24,]),'n_save_type':([16,17,18,20,],[26,27,28,30,]),'n_save_var':([25,],[34,]),'n_register_func':([29,37,],[36,44,]),'bloque':([31,68,100,101,104,128,131,132,165,193,210,211,216,],[38,102,129,130,133,164,166,167,190,209,214,215,219,]),'mult_estatutos':([39,47,],[45,72,]),'empty':([39,],[46,]),'estatuto':([39,47,],[47,47,]),'asigna':([39,47,96,],[48,48,126,]),'llamada':([39,47,63,74,75,79,80,109,114,116,122,162,175,176,177,178,179,180,181,182,183,184,185,186,],[49,49,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'lee':([39,47,],[50,50,]),'escribe':([39,47,],[51,51,]),'condicion':([39,47,],[52,52,]),'ciclo_w':([39,47,],[53,53,]),'retorno':([39,47,],[54,54,]),'ciclo_f':([39,47,],[55,55,]),'mult_asigna':([39,47,96,109,],[56,56,56,139,]),'variable':([39,47,63,74,75,77,79,80,96,109,114,116,122,162,175,176,177,178,179,180,181,182,183,184,185,186,],[59,59,93,93,93,107,93,93,59,137,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'n_save_array':([42,],[65,]),'param':([43,69,163,],[67,103,189,]),'p_n_getVarVal':([57,95,108,],[76,76,76,]),'n_startCicle':([62,64,],[81,96,]),'mult_exp':([63,74,75,79,80,109,114,116,122,162,],[82,105,106,110,113,138,144,145,158,188,]),'exp':([63,74,75,79,80,109,114,116,122,162,175,],[83,83,83,83,83,83,83,83,83,83,195,]),'t_exp':([63,74,75,79,80,109,114,116,122,162,175,176,],[84,84,84,84,84,84,84,84,84,84,84,196,]),'g_exp':([63,74,75,79,80,109,114,116,122,162,175,176,177,178,179,180,181,182,],[85,85,85,85,85,85,85,85,85,85,85,85,197,198,199,200,201,202,]),'m_exp':([63,74,75,79,80,109,114,116,122,162,175,176,177,178,179,180,181,182,183,184,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,203,204,]),'t':([63,74,75,79,80,109,114,116,122,162,175,176,177,178,179,180,181,182,183,184,185,186,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,205,206,]),'f':([63,74,75,79,80,109,114,116,122,162,175,176,177,178,179,180,181,182,183,184,185,186,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'n_tempTypeI':([63,74,75,79,80,109,114,116,122,162,175,176,177,178,179,180,181,182,183,184,185,186,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'n_tempTypeF':([63,74,75,79,80,109,114,116,122,162,175,176,177,178,179,180,181,182,183,184,185,186,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'n_tempTypeC':([63,74,75,79,80,109,114,116,122,162,175,176,177,178,179,180,181,182,183,184,185,186,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'param_aux1':([66,],[98,]),'n_Operador':([78,146,147,148,149,150,151,152,153,154,155,156,157,],[109,175,176,177,178,179,180,181,182,183,184,185,186,]),'mult_cte_s':([79,142,],[111,172,]),'n_orQuad':([84,],[117,]),'n_andQuad':([85,],[118,]),'n_compareQuad':([86,],[119,]),'n_sumQuad':([87,],[120,]),'n_multQuad':([88,],[121,]),'n_FF':([89,187,],[122,207,]),'save_param':([99,],[127,]),'n_escribeExp':([110,111,],[140,141,]),'n_directPrint':([123,124,125,],[159,160,161,]),'n_asignQuad':([138,139,],[168,169,]),'n_ifQuad':([143,],[173,]),'n_evalExp':([174,],[194,]),'n_evalExp_for':([188,],[208,]),'n_endIfQuad':([209,219,],[212,220,]),'p_n_sinoQuad':([213,],[216,]),'n_endWhile':([214,],[217,]),'n_endFor':([215,],[218,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON vars funcion principal','programa',6,'p_programa','fa_yacc.py',71),
  ('programa -> PROGRAMA ID SEMICOLON funcion principal','programa',5,'p_programa','fa_yacc.py',72),
  ('programa -> PROGRAMA ID SEMICOLON vars principal','programa',5,'p_programa','fa_yacc.py',73),
  ('programa -> PROGRAMA ID SEMICOLON principal','programa',4,'p_programa','fa_yacc.py',74),
  ('principal -> PRINCIPAL LPAREN RPAREN bloque','principal',4,'p_principal','fa_yacc.py',84),
  ('vars -> VAR vars_aux','vars',2,'p_vars','fa_yacc.py',91),
  ('vars_aux -> tipo_simple vars_aux1 SEMICOLON','vars_aux',3,'p_vars_aux','fa_yacc.py',97),
  ('vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux','vars_aux',4,'p_vars_aux','fa_yacc.py',98),
  ('vars_aux1 -> vars_aux2','vars_aux1',1,'p_vars_aux1','fa_yacc.py',104),
  ('vars_aux1 -> vars_aux2 COMMA vars_aux1','vars_aux1',3,'p_vars_aux1','fa_yacc.py',105),
  ('vars_aux2 -> ID n_save_var','vars_aux2',2,'p_vars_aux2','fa_yacc.py',111),
  ('vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE','vars_aux2',5,'p_vars_aux2','fa_yacc.py',112),
  ('n_save_array -> <empty>','n_save_array',0,'p_n_save_array','fa_yacc.py',117),
  ('n_save_var -> <empty>','n_save_var',0,'p_n_save_var','fa_yacc.py',132),
  ('tipo_simple -> INT n_save_type','tipo_simple',2,'p_tipo_simple','fa_yacc.py',145),
  ('tipo_simple -> FLOAT n_save_type','tipo_simple',2,'p_tipo_simple','fa_yacc.py',146),
  ('tipo_simple -> CHAR n_save_type','tipo_simple',2,'p_tipo_simple','fa_yacc.py',147),
  ('n_save_type -> <empty>','n_save_type',0,'p_n_save_type','fa_yacc.py',151),
  ('empty -> <empty>','empty',0,'p_empty','fa_yacc.py',158),
  ('variable -> ID LSQUARE mult_exp RSQUARE','variable',4,'p_variable','fa_yacc.py',163),
  ('variable -> ID p_n_getVarVal','variable',2,'p_variable','fa_yacc.py',164),
  ('p_n_getVarVal -> <empty>','p_n_getVarVal',0,'p_n_getVarVal','fa_yacc.py',169),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque','funcion',9,'p_funcion','fa_yacc.py',190),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque','funcion',8,'p_funcion','fa_yacc.py',191),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque','funcion',10,'p_funcion','fa_yacc.py',192),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque','funcion',9,'p_funcion','fa_yacc.py',193),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque','funcion',8,'p_funcion','fa_yacc.py',194),
  ('funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque','funcion',7,'p_funcion','fa_yacc.py',195),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque','funcion',9,'p_funcion','fa_yacc.py',196),
  ('funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque','funcion',8,'p_funcion','fa_yacc.py',197),
  ('n_register_func -> <empty>','n_register_func',0,'p_n_register_func','fa_yacc.py',201),
  ('param -> tipo_simple param_aux1','param',2,'p_param','fa_yacc.py',215),
  ('param_aux1 -> ID save_param','param_aux1',2,'p_param_aux1','fa_yacc.py',221),
  ('param_aux1 -> ID save_param COMMA param','param_aux1',4,'p_param_aux1','fa_yacc.py',222),
  ('save_param -> <empty>','save_param',0,'p_save_param','fa_yacc.py',227),
  ('bloque -> LBRACKET mult_estatutos RBRACKET','bloque',3,'p_bloque','fa_yacc.py',240),
  ('bloque -> LBRACKET empty RBRACKET','bloque',3,'p_bloque','fa_yacc.py',241),
  ('mult_estatutos -> estatuto','mult_estatutos',1,'p_mult_estatutos','fa_yacc.py',246),
  ('mult_estatutos -> estatuto mult_estatutos','mult_estatutos',2,'p_mult_estatutos','fa_yacc.py',247),
  ('estatuto -> asigna SEMICOLON','estatuto',2,'p_estatuto','fa_yacc.py',252),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','fa_yacc.py',253),
  ('estatuto -> lee','estatuto',1,'p_estatuto','fa_yacc.py',254),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','fa_yacc.py',255),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','fa_yacc.py',256),
  ('estatuto -> ciclo_w','estatuto',1,'p_estatuto','fa_yacc.py',257),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','fa_yacc.py',258),
  ('estatuto -> ciclo_f','estatuto',1,'p_estatuto','fa_yacc.py',259),
  ('asigna -> mult_asigna','asigna',1,'p_asigna','fa_yacc.py',264),
  ('mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad','mult_asigna',5,'p_mult_asigna','fa_yacc.py',270),
  ('mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad','mult_asigna',5,'p_mult_asigna','fa_yacc.py',271),
  ('n_asignQuad -> <empty>','n_asignQuad',0,'p_n_asignQuad','fa_yacc.py',276),
  ('llamada -> ID LPAREN mult_exp RPAREN','llamada',4,'p_llamada','fa_yacc.py',302),
  ('lee -> LEE LPAREN variable RPAREN','lee',4,'p_lee','fa_yacc.py',307),
  ('escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON','escribe',6,'p_escribe','fa_yacc.py',312),
  ('escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON','escribe',6,'p_escribe','fa_yacc.py',313),
  ('n_escribeExp -> <empty>','n_escribeExp',0,'p_n_escribeExp','fa_yacc.py',318),
  ('mult_cte_s -> CTE_S','mult_cte_s',1,'p_mult_cte_s','fa_yacc.py',326),
  ('mult_cte_s -> CTE_S COMMA mult_cte_s','mult_cte_s',3,'p_mult_cte_s','fa_yacc.py',327),
  ('mult_exp -> exp','mult_exp',1,'p_mult_exp','fa_yacc.py',332),
  ('mult_exp -> exp COMMA mult_exp','mult_exp',3,'p_mult_exp','fa_yacc.py',333),
  ('exp -> t_exp n_orQuad','exp',2,'p_exp','fa_yacc.py',338),
  ('exp -> t_exp n_orQuad OR n_Operador exp','exp',5,'p_exp','fa_yacc.py',339),
  ('n_orQuad -> <empty>','n_orQuad',0,'p_n_orQuad','fa_yacc.py',344),
  ('t_exp -> g_exp n_andQuad','t_exp',2,'p_t_exp','fa_yacc.py',371),
  ('t_exp -> g_exp n_andQuad AND n_Operador t_exp','t_exp',5,'p_t_exp','fa_yacc.py',372),
  ('n_andQuad -> <empty>','n_andQuad',0,'p_n_andQuad','fa_yacc.py',377),
  ('g_exp -> m_exp n_compareQuad','g_exp',2,'p_g_exp','fa_yacc.py',405),
  ('g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',406),
  ('g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',407),
  ('g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',408),
  ('g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',409),
  ('g_exp -> m_exp n_compareQuad SAME n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',410),
  ('g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp','g_exp',5,'p_g_exp','fa_yacc.py',411),
  ('n_compareQuad -> <empty>','n_compareQuad',0,'p_n_compareQuad','fa_yacc.py',416),
  ('m_exp -> t n_sumQuad','m_exp',2,'p_m_exp','fa_yacc.py',445),
  ('m_exp -> t n_sumQuad PLUS n_Operador m_exp','m_exp',5,'p_m_exp','fa_yacc.py',446),
  ('m_exp -> t n_sumQuad MINUS n_Operador m_exp','m_exp',5,'p_m_exp','fa_yacc.py',447),
  ('n_sumQuad -> <empty>','n_sumQuad',0,'p_n_sumQuad','fa_yacc.py',452),
  ('t -> f n_multQuad','t',2,'p_t','fa_yacc.py',480),
  ('t -> f n_multQuad MULT n_Operador t','t',5,'p_t','fa_yacc.py',481),
  ('t -> f n_multQuad DIV n_Operador t','t',5,'p_t','fa_yacc.py',482),
  ('n_multQuad -> <empty>','n_multQuad',0,'p_n_multQuad','fa_yacc.py',488),
  ('n_Operador -> <empty>','n_Operador',0,'p_n_Operador','fa_yacc.py',515),
  ('f -> LPAREN n_FF mult_exp RPAREN n_FF','f',5,'p_f','fa_yacc.py',523),
  ('f -> n_tempTypeI CTE_I n_directPrint','f',3,'p_f','fa_yacc.py',524),
  ('f -> n_tempTypeF CTE_F n_directPrint','f',3,'p_f','fa_yacc.py',525),
  ('f -> n_tempTypeC CTE_C n_directPrint','f',3,'p_f','fa_yacc.py',526),
  ('f -> variable','f',1,'p_f','fa_yacc.py',527),
  ('f -> llamada','f',1,'p_f','fa_yacc.py',528),
  ('n_tempTypeI -> <empty>','n_tempTypeI',0,'p_n_tempTypeI','fa_yacc.py',535),
  ('n_tempTypeF -> <empty>','n_tempTypeF',0,'p_n_tempTypeF','fa_yacc.py',542),
  ('n_tempTypeC -> <empty>','n_tempTypeC',0,'p_n_tempTypeC','fa_yacc.py',549),
  ('n_directPrint -> <empty>','n_directPrint',0,'p_n_directPrint','fa_yacc.py',557),
  ('n_FF -> <empty>','n_FF',0,'p_n_FF','fa_yacc.py',566),
  ('condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad','condicion',8,'p_condicion','fa_yacc.py',573),
  ('condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad','condicion',11,'p_condicion','fa_yacc.py',574),
  ('n_ifQuad -> <empty>','n_ifQuad',0,'p_n_ifQuad','fa_yacc.py',579),
  ('n_endIfQuad -> <empty>','n_endIfQuad',0,'p_n_endIfQuad','fa_yacc.py',593),
  ('p_n_sinoQuad -> <empty>','p_n_sinoQuad',0,'p_n_sinoQuad','fa_yacc.py',601),
  ('ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile','ciclo_w',9,'p_ciclo_w','fa_yacc.py',612),
  ('n_startCicle -> <empty>','n_startCicle',0,'p_n_startCicle','fa_yacc.py',617),
  ('n_evalExp -> <empty>','n_evalExp',0,'p_n_evalExp','fa_yacc.py',624),
  ('n_endWhile -> <empty>','n_endWhile',0,'p_n_endWhile','fa_yacc.py',638),
  ('ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor','ciclo_f',9,'p_ciclo_f','fa_yacc.py',652),
  ('n_evalExp_for -> <empty>','n_evalExp_for',0,'p_n_evalExp_for','fa_yacc.py',658),
  ('n_endFor -> <empty>','n_endFor',0,'p_n_endFor','fa_yacc.py',681),
  ('retorno -> REGRESA mult_exp SEMICOLON','retorno',3,'p_retorno','fa_yacc.py',693),
]
