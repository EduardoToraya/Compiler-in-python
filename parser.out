Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON vars mult_funcion principal
Rule 2     programa -> PROGRAMA ID SEMICOLON mult_funcion principal
Rule 3     programa -> PROGRAMA ID SEMICOLON vars principal
Rule 4     programa -> PROGRAMA ID SEMICOLON principal
Rule 5     principal -> PRINCIPAL n_register_glob LPAREN RPAREN bloque
Rule 6     n_register_glob -> <empty>
Rule 7     vars -> VAR vars_aux
Rule 8     vars_aux -> tipo_simple vars_aux1 SEMICOLON
Rule 9     vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux
Rule 10    vars_aux1 -> vars_aux2
Rule 11    vars_aux1 -> vars_aux2 COMMA vars_aux1
Rule 12    vars_aux2 -> ID n_save_var
Rule 13    vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE
Rule 14    n_save_array -> <empty>
Rule 15    n_save_var -> <empty>
Rule 16    tipo_simple -> INT n_save_type
Rule 17    tipo_simple -> FLOAT n_save_type
Rule 18    tipo_simple -> CHAR n_save_type
Rule 19    n_save_type -> <empty>
Rule 20    empty -> <empty>
Rule 21    variable -> ID LSQUARE mult_exp RSQUARE
Rule 22    variable -> ID p_n_getVarVal
Rule 23    p_n_getVarVal -> <empty>
Rule 24    mult_funcion -> funcion
Rule 25    mult_funcion -> funcion mult_funcion
Rule 26    funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
Rule 27    funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque
Rule 28    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
Rule 29    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
Rule 30    funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque
Rule 31    funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque
Rule 32    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
Rule 33    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque
Rule 34    n_register_func -> <empty>
Rule 35    param -> tipo_simple param_aux1
Rule 36    param_aux1 -> ID save_param
Rule 37    param_aux1 -> ID save_param COMMA param
Rule 38    save_param -> <empty>
Rule 39    bloque -> LBRACKET mult_estatutos RBRACKET
Rule 40    bloque -> LBRACKET empty RBRACKET
Rule 41    mult_estatutos -> estatuto
Rule 42    mult_estatutos -> estatuto mult_estatutos
Rule 43    estatuto -> asigna SEMICOLON
Rule 44    estatuto -> llamada
Rule 45    estatuto -> lee
Rule 46    estatuto -> escribe
Rule 47    estatuto -> condicion
Rule 48    estatuto -> ciclo_w
Rule 49    estatuto -> retorno
Rule 50    estatuto -> ciclo_f
Rule 51    asigna -> mult_asigna
Rule 52    mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad
Rule 53    mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad
Rule 54    n_asignQuad -> <empty>
Rule 55    llamada -> ID LPAREN mult_exp RPAREN
Rule 56    lee -> LEE LPAREN variable RPAREN
Rule 57    escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
Rule 58    escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON
Rule 59    n_escribeExp -> <empty>
Rule 60    mult_cte_s -> CTE_S
Rule 61    mult_cte_s -> CTE_S COMMA mult_cte_s
Rule 62    mult_exp -> exp
Rule 63    mult_exp -> exp COMMA mult_exp
Rule 64    exp -> t_exp n_orQuad
Rule 65    exp -> t_exp n_orQuad OR n_Operador exp
Rule 66    n_orQuad -> <empty>
Rule 67    t_exp -> g_exp n_andQuad
Rule 68    t_exp -> g_exp n_andQuad AND n_Operador t_exp
Rule 69    n_andQuad -> <empty>
Rule 70    g_exp -> m_exp n_compareQuad
Rule 71    g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp
Rule 72    g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp
Rule 73    g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp
Rule 74    g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
Rule 75    g_exp -> m_exp n_compareQuad SAME n_Operador g_exp
Rule 76    g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp
Rule 77    n_compareQuad -> <empty>
Rule 78    m_exp -> t n_sumQuad
Rule 79    m_exp -> t n_sumQuad PLUS n_Operador m_exp
Rule 80    m_exp -> t n_sumQuad MINUS n_Operador m_exp
Rule 81    n_sumQuad -> <empty>
Rule 82    t -> f n_multQuad
Rule 83    t -> f n_multQuad MULT n_Operador t
Rule 84    t -> f n_multQuad DIV n_Operador t
Rule 85    n_multQuad -> <empty>
Rule 86    n_Operador -> <empty>
Rule 87    f -> LPAREN n_FF mult_exp RPAREN n_FF
Rule 88    f -> n_tempTypeI CTE_I n_directPrint
Rule 89    f -> n_tempTypeF CTE_F n_directPrint
Rule 90    f -> n_tempTypeC CTE_C n_directPrint
Rule 91    f -> variable
Rule 92    f -> llamada
Rule 93    n_tempTypeI -> <empty>
Rule 94    n_tempTypeF -> <empty>
Rule 95    n_tempTypeC -> <empty>
Rule 96    n_directPrint -> <empty>
Rule 97    n_FF -> <empty>
Rule 98    condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
Rule 99    condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
Rule 100   n_ifQuad -> <empty>
Rule 101   n_endIfQuad -> <empty>
Rule 102   p_n_sinoQuad -> <empty>
Rule 103   ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
Rule 104   n_startCicle -> <empty>
Rule 105   n_evalExp -> <empty>
Rule 106   n_endWhile -> <empty>
Rule 107   ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
Rule 108   n_evalExp_for -> <empty>
Rule 109   n_endFor -> <empty>
Rule 110   retorno -> REGRESA mult_exp SEMICOLON

Terminals, with rules where they appear

AND                  : 68
CHAR                 : 18
COMMA                : 11 37 61 63
COMMENT              : 
CTE_C                : 90
CTE_F                : 89
CTE_I                : 13 88
CTE_S                : 60 61
DESDE                : 107
DIV                  : 84
ENTONCES             : 98 99
EQUAL                : 52 53
ESCRIBE              : 57 58
FLOAT                : 17
FUNCION              : 26 27 28 29 30 31 32 33
GREATEREQUAL         : 74
GREATERTHAN          : 73
HACER                : 107
HASTA                : 107
HAZ                  : 103
ID                   : 1 2 3 4 12 13 21 22 26 27 28 29 30 31 32 33 36 37 55
INT                  : 16
LBRACKET             : 39 40
LEE                  : 56
LESSEQUAL            : 72
LESSTHAN             : 71
LPAREN               : 5 26 27 28 29 30 31 32 33 55 56 57 58 87 98 99 103
LSQUARE              : 13 21
MIENTRAS             : 103
MINUS                : 80
MULT                 : 83
NOEQUAL              : 76
OR                   : 65
PLUS                 : 79
PRINCIPAL            : 5
PROGRAMA             : 1 2 3 4
RBRACKET             : 39 40
REGRESA              : 110
RPAREN               : 5 26 27 28 29 30 31 32 33 55 56 57 58 87 98 99 103
RSQUARE              : 13 21
SAME                 : 75
SEMICOLON            : 1 2 3 4 8 9 43 57 58 110
SI                   : 98 99
SINO                 : 99
VAR                  : 7
VOID                 : 28 29 32 33
error                : 

Nonterminals, with rules where they appear

asigna               : 43 107
bloque               : 5 26 27 28 29 30 31 32 33 98 99 99 103 107
ciclo_f              : 50
ciclo_w              : 48
condicion            : 47
empty                : 40
escribe              : 46
estatuto             : 41 42
exp                  : 62 63 65
f                    : 82 83 84
funcion              : 24 25
g_exp                : 67 68 71 72 73 74 75 76
lee                  : 45
llamada              : 44 92
m_exp                : 70 71 72 73 74 75 76 79 80
mult_asigna          : 51 53
mult_cte_s           : 58 61
mult_estatutos       : 39 42
mult_exp             : 21 52 55 57 63 87 98 99 103 107 110
mult_funcion         : 1 2 25
n_FF                 : 87 87
n_Operador           : 52 53 65 68 71 72 73 74 75 76 79 80 83 84
n_andQuad            : 67 68
n_asignQuad          : 52 53
n_compareQuad        : 70 71 72 73 74 75 76
n_directPrint        : 88 89 90
n_endFor             : 107
n_endIfQuad          : 98 99
n_endWhile           : 103
n_escribeExp         : 57 58
n_evalExp            : 103
n_evalExp_for        : 107
n_ifQuad             : 98 99
n_multQuad           : 82 83 84
n_orQuad             : 64 65
n_register_func      : 26 27 28 29 30 31 32 33
n_register_glob      : 5
n_save_array         : 13
n_save_type          : 16 17 18 28 29 32 33
n_save_var           : 12
n_startCicle         : 103 107
n_sumQuad            : 78 79 80
n_tempTypeC          : 90
n_tempTypeF          : 89
n_tempTypeI          : 88
p_n_getVarVal        : 22
p_n_sinoQuad         : 99
param                : 26 27 28 29 37
param_aux1           : 35
principal            : 1 2 3 4
programa             : 0
retorno              : 49
save_param           : 36 37
t                    : 78 79 80 83 84
t_exp                : 64 65 68
tipo_simple          : 8 9 26 27 30 31 35
variable             : 52 53 56 91
vars                 : 1 3 26 28 30 32
vars_aux             : 7 9
vars_aux1            : 8 9 11
vars_aux2            : 10 11

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON vars mult_funcion principal
    (2) programa -> . PROGRAMA ID SEMICOLON mult_funcion principal
    (3) programa -> . PROGRAMA ID SEMICOLON vars principal
    (4) programa -> . PROGRAMA ID SEMICOLON principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON vars mult_funcion principal
    (2) programa -> PROGRAMA . ID SEMICOLON mult_funcion principal
    (3) programa -> PROGRAMA . ID SEMICOLON vars principal
    (4) programa -> PROGRAMA . ID SEMICOLON principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON vars mult_funcion principal
    (2) programa -> PROGRAMA ID . SEMICOLON mult_funcion principal
    (3) programa -> PROGRAMA ID . SEMICOLON vars principal
    (4) programa -> PROGRAMA ID . SEMICOLON principal

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . vars mult_funcion principal
    (2) programa -> PROGRAMA ID SEMICOLON . mult_funcion principal
    (3) programa -> PROGRAMA ID SEMICOLON . vars principal
    (4) programa -> PROGRAMA ID SEMICOLON . principal
    (7) vars -> . VAR vars_aux
    (24) mult_funcion -> . funcion
    (25) mult_funcion -> . funcion mult_funcion
    (5) principal -> . PRINCIPAL n_register_glob LPAREN RPAREN bloque
    (26) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
    (27) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque
    (28) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (29) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
    (30) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque
    (31) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque
    (32) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (33) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque

    VAR             shift and go to state 8
    PRINCIPAL       shift and go to state 10
    FUNCION         shift and go to state 11

    vars                           shift and go to state 5
    mult_funcion                   shift and go to state 6
    principal                      shift and go to state 7
    funcion                        shift and go to state 9

state 5

    (1) programa -> PROGRAMA ID SEMICOLON vars . mult_funcion principal
    (3) programa -> PROGRAMA ID SEMICOLON vars . principal
    (24) mult_funcion -> . funcion
    (25) mult_funcion -> . funcion mult_funcion
    (5) principal -> . PRINCIPAL n_register_glob LPAREN RPAREN bloque
    (26) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
    (27) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque
    (28) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (29) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
    (30) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque
    (31) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque
    (32) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (33) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 10
    FUNCION         shift and go to state 11

    mult_funcion                   shift and go to state 12
    principal                      shift and go to state 13
    funcion                        shift and go to state 9

state 6

    (2) programa -> PROGRAMA ID SEMICOLON mult_funcion . principal
    (5) principal -> . PRINCIPAL n_register_glob LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 10

    principal                      shift and go to state 14

state 7

    (4) programa -> PROGRAMA ID SEMICOLON principal .

    $end            reduce using rule 4 (programa -> PROGRAMA ID SEMICOLON principal .)


state 8

    (7) vars -> VAR . vars_aux
    (8) vars_aux -> . tipo_simple vars_aux1 SEMICOLON
    (9) vars_aux -> . tipo_simple vars_aux1 SEMICOLON vars_aux
    (16) tipo_simple -> . INT n_save_type
    (17) tipo_simple -> . FLOAT n_save_type
    (18) tipo_simple -> . CHAR n_save_type

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    vars_aux                       shift and go to state 15
    tipo_simple                    shift and go to state 16

state 9

    (24) mult_funcion -> funcion .
    (25) mult_funcion -> funcion . mult_funcion
    (24) mult_funcion -> . funcion
    (25) mult_funcion -> . funcion mult_funcion
    (26) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
    (27) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque
    (28) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (29) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
    (30) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque
    (31) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque
    (32) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (33) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque

    PRINCIPAL       reduce using rule 24 (mult_funcion -> funcion .)
    FUNCION         shift and go to state 11

    funcion                        shift and go to state 9
    mult_funcion                   shift and go to state 20

state 10

    (5) principal -> PRINCIPAL . n_register_glob LPAREN RPAREN bloque
    (6) n_register_glob -> .

    LPAREN          reduce using rule 6 (n_register_glob -> .)

    n_register_glob                shift and go to state 21

state 11

    (26) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
    (27) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN param RPAREN bloque
    (28) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (29) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
    (30) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN RPAREN vars bloque
    (31) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN RPAREN bloque
    (32) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (33) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN RPAREN bloque
    (16) tipo_simple -> . INT n_save_type
    (17) tipo_simple -> . FLOAT n_save_type
    (18) tipo_simple -> . CHAR n_save_type

    VOID            shift and go to state 23
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    tipo_simple                    shift and go to state 22

state 12

    (1) programa -> PROGRAMA ID SEMICOLON vars mult_funcion . principal
    (5) principal -> . PRINCIPAL n_register_glob LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 10

    principal                      shift and go to state 24

state 13

    (3) programa -> PROGRAMA ID SEMICOLON vars principal .

    $end            reduce using rule 3 (programa -> PROGRAMA ID SEMICOLON vars principal .)


state 14

    (2) programa -> PROGRAMA ID SEMICOLON mult_funcion principal .

    $end            reduce using rule 2 (programa -> PROGRAMA ID SEMICOLON mult_funcion principal .)


state 15

    (7) vars -> VAR vars_aux .

    PRINCIPAL       reduce using rule 7 (vars -> VAR vars_aux .)
    FUNCION         reduce using rule 7 (vars -> VAR vars_aux .)
    LBRACKET        reduce using rule 7 (vars -> VAR vars_aux .)


state 16

    (8) vars_aux -> tipo_simple . vars_aux1 SEMICOLON
    (9) vars_aux -> tipo_simple . vars_aux1 SEMICOLON vars_aux
    (10) vars_aux1 -> . vars_aux2
    (11) vars_aux1 -> . vars_aux2 COMMA vars_aux1
    (12) vars_aux2 -> . ID n_save_var
    (13) vars_aux2 -> . ID LSQUARE CTE_I n_save_array RSQUARE

    ID              shift and go to state 27

    vars_aux1                      shift and go to state 25
    vars_aux2                      shift and go to state 26

state 17

    (16) tipo_simple -> INT . n_save_type
    (19) n_save_type -> .

    ID              reduce using rule 19 (n_save_type -> .)

    n_save_type                    shift and go to state 28

state 18

    (17) tipo_simple -> FLOAT . n_save_type
    (19) n_save_type -> .

    ID              reduce using rule 19 (n_save_type -> .)

    n_save_type                    shift and go to state 29

state 19

    (18) tipo_simple -> CHAR . n_save_type
    (19) n_save_type -> .

    ID              reduce using rule 19 (n_save_type -> .)

    n_save_type                    shift and go to state 30

state 20

    (25) mult_funcion -> funcion mult_funcion .

    PRINCIPAL       reduce using rule 25 (mult_funcion -> funcion mult_funcion .)


state 21

    (5) principal -> PRINCIPAL n_register_glob . LPAREN RPAREN bloque

    LPAREN          shift and go to state 31


state 22

    (26) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN param RPAREN vars bloque
    (27) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN param RPAREN bloque
    (30) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN RPAREN vars bloque
    (31) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN RPAREN bloque

    ID              shift and go to state 32


state 23

    (28) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (29) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN param RPAREN bloque
    (32) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (33) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN RPAREN bloque
    (19) n_save_type -> .

    ID              reduce using rule 19 (n_save_type -> .)

    n_save_type                    shift and go to state 33

state 24

    (1) programa -> PROGRAMA ID SEMICOLON vars mult_funcion principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON vars mult_funcion principal .)


state 25

    (8) vars_aux -> tipo_simple vars_aux1 . SEMICOLON
    (9) vars_aux -> tipo_simple vars_aux1 . SEMICOLON vars_aux

    SEMICOLON       shift and go to state 34


state 26

    (10) vars_aux1 -> vars_aux2 .
    (11) vars_aux1 -> vars_aux2 . COMMA vars_aux1

    SEMICOLON       reduce using rule 10 (vars_aux1 -> vars_aux2 .)
    COMMA           shift and go to state 35


state 27

    (12) vars_aux2 -> ID . n_save_var
    (13) vars_aux2 -> ID . LSQUARE CTE_I n_save_array RSQUARE
    (15) n_save_var -> .

    LSQUARE         shift and go to state 37
    COMMA           reduce using rule 15 (n_save_var -> .)
    SEMICOLON       reduce using rule 15 (n_save_var -> .)

    n_save_var                     shift and go to state 36

state 28

    (16) tipo_simple -> INT n_save_type .

    ID              reduce using rule 16 (tipo_simple -> INT n_save_type .)


state 29

    (17) tipo_simple -> FLOAT n_save_type .

    ID              reduce using rule 17 (tipo_simple -> FLOAT n_save_type .)


state 30

    (18) tipo_simple -> CHAR n_save_type .

    ID              reduce using rule 18 (tipo_simple -> CHAR n_save_type .)


state 31

    (5) principal -> PRINCIPAL n_register_glob LPAREN . RPAREN bloque

    RPAREN          shift and go to state 38


state 32

    (26) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN param RPAREN vars bloque
    (27) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN param RPAREN bloque
    (30) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN RPAREN vars bloque
    (31) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN RPAREN bloque
    (34) n_register_func -> .

    LPAREN          reduce using rule 34 (n_register_func -> .)

    n_register_func                shift and go to state 39

state 33

    (28) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN param RPAREN vars bloque
    (29) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN param RPAREN bloque
    (32) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN RPAREN vars bloque
    (33) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN RPAREN bloque

    ID              shift and go to state 40


state 34

    (8) vars_aux -> tipo_simple vars_aux1 SEMICOLON .
    (9) vars_aux -> tipo_simple vars_aux1 SEMICOLON . vars_aux
    (8) vars_aux -> . tipo_simple vars_aux1 SEMICOLON
    (9) vars_aux -> . tipo_simple vars_aux1 SEMICOLON vars_aux
    (16) tipo_simple -> . INT n_save_type
    (17) tipo_simple -> . FLOAT n_save_type
    (18) tipo_simple -> . CHAR n_save_type

    PRINCIPAL       reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    FUNCION         reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    LBRACKET        reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    tipo_simple                    shift and go to state 16
    vars_aux                       shift and go to state 41

state 35

    (11) vars_aux1 -> vars_aux2 COMMA . vars_aux1
    (10) vars_aux1 -> . vars_aux2
    (11) vars_aux1 -> . vars_aux2 COMMA vars_aux1
    (12) vars_aux2 -> . ID n_save_var
    (13) vars_aux2 -> . ID LSQUARE CTE_I n_save_array RSQUARE

    ID              shift and go to state 27

    vars_aux2                      shift and go to state 26
    vars_aux1                      shift and go to state 42

state 36

    (12) vars_aux2 -> ID n_save_var .

    COMMA           reduce using rule 12 (vars_aux2 -> ID n_save_var .)
    SEMICOLON       reduce using rule 12 (vars_aux2 -> ID n_save_var .)


state 37

    (13) vars_aux2 -> ID LSQUARE . CTE_I n_save_array RSQUARE

    CTE_I           shift and go to state 43


state 38

    (5) principal -> PRINCIPAL n_register_glob LPAREN RPAREN . bloque
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 45

    bloque                         shift and go to state 44

state 39

    (26) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN param RPAREN vars bloque
    (27) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN param RPAREN bloque
    (30) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN RPAREN vars bloque
    (31) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN RPAREN bloque

    LPAREN          shift and go to state 46


state 40

    (28) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN param RPAREN vars bloque
    (29) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN param RPAREN bloque
    (32) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN RPAREN vars bloque
    (33) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN RPAREN bloque
    (34) n_register_func -> .

    LPAREN          reduce using rule 34 (n_register_func -> .)

    n_register_func                shift and go to state 47

state 41

    (9) vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .

    PRINCIPAL       reduce using rule 9 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)
    FUNCION         reduce using rule 9 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)
    LBRACKET        reduce using rule 9 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)


state 42

    (11) vars_aux1 -> vars_aux2 COMMA vars_aux1 .

    SEMICOLON       reduce using rule 11 (vars_aux1 -> vars_aux2 COMMA vars_aux1 .)


state 43

    (13) vars_aux2 -> ID LSQUARE CTE_I . n_save_array RSQUARE
    (14) n_save_array -> .

    RSQUARE         reduce using rule 14 (n_save_array -> .)

    n_save_array                   shift and go to state 48

state 44

    (5) principal -> PRINCIPAL n_register_glob LPAREN RPAREN bloque .

    $end            reduce using rule 5 (principal -> PRINCIPAL n_register_glob LPAREN RPAREN bloque .)


state 45

    (39) bloque -> LBRACKET . mult_estatutos RBRACKET
    (40) bloque -> LBRACKET . empty RBRACKET
    (41) mult_estatutos -> . estatuto
    (42) mult_estatutos -> . estatuto mult_estatutos
    (20) empty -> .
    (43) estatuto -> . asigna SEMICOLON
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclo_w
    (49) estatuto -> . retorno
    (50) estatuto -> . ciclo_f
    (51) asigna -> . mult_asigna
    (55) llamada -> . ID LPAREN mult_exp RPAREN
    (56) lee -> . LEE LPAREN variable RPAREN
    (57) escribe -> . ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
    (58) escribe -> . ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON
    (98) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (99) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (103) ciclo_w -> . MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (110) retorno -> . REGRESA mult_exp SEMICOLON
    (107) ciclo_f -> . DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (52) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (53) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal

    RBRACKET        reduce using rule 20 (empty -> .)
    ID              shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    MIENTRAS        shift and go to state 66
    REGRESA         shift and go to state 67
    DESDE           shift and go to state 68

    mult_estatutos                 shift and go to state 49
    empty                          shift and go to state 50
    estatuto                       shift and go to state 51
    asigna                         shift and go to state 52
    llamada                        shift and go to state 53
    lee                            shift and go to state 54
    escribe                        shift and go to state 55
    condicion                      shift and go to state 56
    ciclo_w                        shift and go to state 57
    retorno                        shift and go to state 58
    ciclo_f                        shift and go to state 59
    mult_asigna                    shift and go to state 60
    variable                       shift and go to state 63

state 46

    (26) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . param RPAREN vars bloque
    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . param RPAREN bloque
    (30) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . RPAREN vars bloque
    (31) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . RPAREN bloque
    (35) param -> . tipo_simple param_aux1
    (16) tipo_simple -> . INT n_save_type
    (17) tipo_simple -> . FLOAT n_save_type
    (18) tipo_simple -> . CHAR n_save_type

    RPAREN          shift and go to state 71
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    tipo_simple                    shift and go to state 69
    param                          shift and go to state 70

state 47

    (28) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN param RPAREN vars bloque
    (29) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN param RPAREN bloque
    (32) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN RPAREN vars bloque
    (33) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN RPAREN bloque

    LPAREN          shift and go to state 72


state 48

    (13) vars_aux2 -> ID LSQUARE CTE_I n_save_array . RSQUARE

    RSQUARE         shift and go to state 73


state 49

    (39) bloque -> LBRACKET mult_estatutos . RBRACKET

    RBRACKET        shift and go to state 74


state 50

    (40) bloque -> LBRACKET empty . RBRACKET

    RBRACKET        shift and go to state 75


state 51

    (41) mult_estatutos -> estatuto .
    (42) mult_estatutos -> estatuto . mult_estatutos
    (41) mult_estatutos -> . estatuto
    (42) mult_estatutos -> . estatuto mult_estatutos
    (43) estatuto -> . asigna SEMICOLON
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclo_w
    (49) estatuto -> . retorno
    (50) estatuto -> . ciclo_f
    (51) asigna -> . mult_asigna
    (55) llamada -> . ID LPAREN mult_exp RPAREN
    (56) lee -> . LEE LPAREN variable RPAREN
    (57) escribe -> . ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
    (58) escribe -> . ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON
    (98) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (99) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (103) ciclo_w -> . MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (110) retorno -> . REGRESA mult_exp SEMICOLON
    (107) ciclo_f -> . DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (52) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (53) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal

    RBRACKET        reduce using rule 41 (mult_estatutos -> estatuto .)
    ID              shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    MIENTRAS        shift and go to state 66
    REGRESA         shift and go to state 67
    DESDE           shift and go to state 68

    estatuto                       shift and go to state 51
    mult_estatutos                 shift and go to state 76
    asigna                         shift and go to state 52
    llamada                        shift and go to state 53
    lee                            shift and go to state 54
    escribe                        shift and go to state 55
    condicion                      shift and go to state 56
    ciclo_w                        shift and go to state 57
    retorno                        shift and go to state 58
    ciclo_f                        shift and go to state 59
    mult_asigna                    shift and go to state 60
    variable                       shift and go to state 63

state 52

    (43) estatuto -> asigna . SEMICOLON

    SEMICOLON       shift and go to state 77


state 53

    (44) estatuto -> llamada .

    ID              reduce using rule 44 (estatuto -> llamada .)
    LEE             reduce using rule 44 (estatuto -> llamada .)
    ESCRIBE         reduce using rule 44 (estatuto -> llamada .)
    SI              reduce using rule 44 (estatuto -> llamada .)
    MIENTRAS        reduce using rule 44 (estatuto -> llamada .)
    REGRESA         reduce using rule 44 (estatuto -> llamada .)
    DESDE           reduce using rule 44 (estatuto -> llamada .)
    RBRACKET        reduce using rule 44 (estatuto -> llamada .)


state 54

    (45) estatuto -> lee .

    ID              reduce using rule 45 (estatuto -> lee .)
    LEE             reduce using rule 45 (estatuto -> lee .)
    ESCRIBE         reduce using rule 45 (estatuto -> lee .)
    SI              reduce using rule 45 (estatuto -> lee .)
    MIENTRAS        reduce using rule 45 (estatuto -> lee .)
    REGRESA         reduce using rule 45 (estatuto -> lee .)
    DESDE           reduce using rule 45 (estatuto -> lee .)
    RBRACKET        reduce using rule 45 (estatuto -> lee .)


state 55

    (46) estatuto -> escribe .

    ID              reduce using rule 46 (estatuto -> escribe .)
    LEE             reduce using rule 46 (estatuto -> escribe .)
    ESCRIBE         reduce using rule 46 (estatuto -> escribe .)
    SI              reduce using rule 46 (estatuto -> escribe .)
    MIENTRAS        reduce using rule 46 (estatuto -> escribe .)
    REGRESA         reduce using rule 46 (estatuto -> escribe .)
    DESDE           reduce using rule 46 (estatuto -> escribe .)
    RBRACKET        reduce using rule 46 (estatuto -> escribe .)


state 56

    (47) estatuto -> condicion .

    ID              reduce using rule 47 (estatuto -> condicion .)
    LEE             reduce using rule 47 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 47 (estatuto -> condicion .)
    SI              reduce using rule 47 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 47 (estatuto -> condicion .)
    REGRESA         reduce using rule 47 (estatuto -> condicion .)
    DESDE           reduce using rule 47 (estatuto -> condicion .)
    RBRACKET        reduce using rule 47 (estatuto -> condicion .)


state 57

    (48) estatuto -> ciclo_w .

    ID              reduce using rule 48 (estatuto -> ciclo_w .)
    LEE             reduce using rule 48 (estatuto -> ciclo_w .)
    ESCRIBE         reduce using rule 48 (estatuto -> ciclo_w .)
    SI              reduce using rule 48 (estatuto -> ciclo_w .)
    MIENTRAS        reduce using rule 48 (estatuto -> ciclo_w .)
    REGRESA         reduce using rule 48 (estatuto -> ciclo_w .)
    DESDE           reduce using rule 48 (estatuto -> ciclo_w .)
    RBRACKET        reduce using rule 48 (estatuto -> ciclo_w .)


state 58

    (49) estatuto -> retorno .

    ID              reduce using rule 49 (estatuto -> retorno .)
    LEE             reduce using rule 49 (estatuto -> retorno .)
    ESCRIBE         reduce using rule 49 (estatuto -> retorno .)
    SI              reduce using rule 49 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 49 (estatuto -> retorno .)
    REGRESA         reduce using rule 49 (estatuto -> retorno .)
    DESDE           reduce using rule 49 (estatuto -> retorno .)
    RBRACKET        reduce using rule 49 (estatuto -> retorno .)


state 59

    (50) estatuto -> ciclo_f .

    ID              reduce using rule 50 (estatuto -> ciclo_f .)
    LEE             reduce using rule 50 (estatuto -> ciclo_f .)
    ESCRIBE         reduce using rule 50 (estatuto -> ciclo_f .)
    SI              reduce using rule 50 (estatuto -> ciclo_f .)
    MIENTRAS        reduce using rule 50 (estatuto -> ciclo_f .)
    REGRESA         reduce using rule 50 (estatuto -> ciclo_f .)
    DESDE           reduce using rule 50 (estatuto -> ciclo_f .)
    RBRACKET        reduce using rule 50 (estatuto -> ciclo_f .)


state 60

    (51) asigna -> mult_asigna .

    SEMICOLON       reduce using rule 51 (asigna -> mult_asigna .)
    HASTA           reduce using rule 51 (asigna -> mult_asigna .)


state 61

    (55) llamada -> ID . LPAREN mult_exp RPAREN
    (21) variable -> ID . LSQUARE mult_exp RSQUARE
    (22) variable -> ID . p_n_getVarVal
    (23) p_n_getVarVal -> .

    LPAREN          shift and go to state 78
    LSQUARE         shift and go to state 79
    EQUAL           reduce using rule 23 (p_n_getVarVal -> .)

    p_n_getVarVal                  shift and go to state 80

state 62

    (56) lee -> LEE . LPAREN variable RPAREN

    LPAREN          shift and go to state 81


state 63

    (52) mult_asigna -> variable . EQUAL n_Operador mult_exp n_asignQuad
    (53) mult_asigna -> variable . EQUAL n_Operador mult_asigna n_asignQuad

    EQUAL           shift and go to state 82


state 64

    (57) escribe -> ESCRIBE . LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
    (58) escribe -> ESCRIBE . LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON

    LPAREN          shift and go to state 83


state 65

    (98) condicion -> SI . LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (99) condicion -> SI . LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad

    LPAREN          shift and go to state 84


state 66

    (103) ciclo_w -> MIENTRAS . n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (104) n_startCicle -> .

    LPAREN          reduce using rule 104 (n_startCicle -> .)

    n_startCicle                   shift and go to state 85

state 67

    (110) retorno -> REGRESA . mult_exp SEMICOLON
    (62) mult_exp -> . exp
    (63) mult_exp -> . exp COMMA mult_exp
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    mult_exp                       shift and go to state 86
    exp                            shift and go to state 87
    t_exp                          shift and go to state 88
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 68

    (107) ciclo_f -> DESDE . asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (51) asigna -> . mult_asigna
    (52) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (53) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal

    ID              shift and go to state 101

    asigna                         shift and go to state 100
    mult_asigna                    shift and go to state 60
    variable                       shift and go to state 63

state 69

    (35) param -> tipo_simple . param_aux1
    (36) param_aux1 -> . ID save_param
    (37) param_aux1 -> . ID save_param COMMA param

    ID              shift and go to state 103

    param_aux1                     shift and go to state 102

state 70

    (26) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param . RPAREN vars bloque
    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 104


state 71

    (30) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN . vars bloque
    (31) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN . bloque
    (7) vars -> . VAR vars_aux
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 45

    vars                           shift and go to state 105
    bloque                         shift and go to state 106

state 72

    (28) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . param RPAREN vars bloque
    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . param RPAREN bloque
    (32) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . RPAREN vars bloque
    (33) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . RPAREN bloque
    (35) param -> . tipo_simple param_aux1
    (16) tipo_simple -> . INT n_save_type
    (17) tipo_simple -> . FLOAT n_save_type
    (18) tipo_simple -> . CHAR n_save_type

    RPAREN          shift and go to state 108
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    param                          shift and go to state 107
    tipo_simple                    shift and go to state 69

state 73

    (13) vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .

    COMMA           reduce using rule 13 (vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .)
    SEMICOLON       reduce using rule 13 (vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .)


state 74

    (39) bloque -> LBRACKET mult_estatutos RBRACKET .

    $end            reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    FUNCION         reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    PRINCIPAL       reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SINO            reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    ID              reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    LEE             reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    ESCRIBE         reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SI              reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    MIENTRAS        reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    REGRESA         reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    DESDE           reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    RBRACKET        reduce using rule 39 (bloque -> LBRACKET mult_estatutos RBRACKET .)


state 75

    (40) bloque -> LBRACKET empty RBRACKET .

    $end            reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    FUNCION         reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    PRINCIPAL       reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    SINO            reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    ID              reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    LEE             reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    ESCRIBE         reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    SI              reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    MIENTRAS        reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    REGRESA         reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    DESDE           reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)
    RBRACKET        reduce using rule 40 (bloque -> LBRACKET empty RBRACKET .)


state 76

    (42) mult_estatutos -> estatuto mult_estatutos .

    RBRACKET        reduce using rule 42 (mult_estatutos -> estatuto mult_estatutos .)


state 77

    (43) estatuto -> asigna SEMICOLON .

    ID              reduce using rule 43 (estatuto -> asigna SEMICOLON .)
    LEE             reduce using rule 43 (estatuto -> asigna SEMICOLON .)
    ESCRIBE         reduce using rule 43 (estatuto -> asigna SEMICOLON .)
    SI              reduce using rule 43 (estatuto -> asigna SEMICOLON .)
    MIENTRAS        reduce using rule 43 (estatuto -> asigna SEMICOLON .)
    REGRESA         reduce using rule 43 (estatuto -> asigna SEMICOLON .)
    DESDE           reduce using rule 43 (estatuto -> asigna SEMICOLON .)
    RBRACKET        reduce using rule 43 (estatuto -> asigna SEMICOLON .)


state 78

    (55) llamada -> ID LPAREN . mult_exp RPAREN
    (62) mult_exp -> . exp
    (63) mult_exp -> . exp COMMA mult_exp
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    mult_exp                       shift and go to state 109
    exp                            shift and go to state 87
    t_exp                          shift and go to state 88
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 79

    (21) variable -> ID LSQUARE . mult_exp RSQUARE
    (62) mult_exp -> . exp
    (63) mult_exp -> . exp COMMA mult_exp
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    mult_exp                       shift and go to state 110
    exp                            shift and go to state 87
    t_exp                          shift and go to state 88
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 80

    (22) variable -> ID p_n_getVarVal .

    EQUAL           reduce using rule 22 (variable -> ID p_n_getVarVal .)
    MULT            reduce using rule 22 (variable -> ID p_n_getVarVal .)
    DIV             reduce using rule 22 (variable -> ID p_n_getVarVal .)
    PLUS            reduce using rule 22 (variable -> ID p_n_getVarVal .)
    MINUS           reduce using rule 22 (variable -> ID p_n_getVarVal .)
    LESSTHAN        reduce using rule 22 (variable -> ID p_n_getVarVal .)
    LESSEQUAL       reduce using rule 22 (variable -> ID p_n_getVarVal .)
    GREATERTHAN     reduce using rule 22 (variable -> ID p_n_getVarVal .)
    GREATEREQUAL    reduce using rule 22 (variable -> ID p_n_getVarVal .)
    SAME            reduce using rule 22 (variable -> ID p_n_getVarVal .)
    NOEQUAL         reduce using rule 22 (variable -> ID p_n_getVarVal .)
    AND             reduce using rule 22 (variable -> ID p_n_getVarVal .)
    OR              reduce using rule 22 (variable -> ID p_n_getVarVal .)
    COMMA           reduce using rule 22 (variable -> ID p_n_getVarVal .)
    SEMICOLON       reduce using rule 22 (variable -> ID p_n_getVarVal .)
    RPAREN          reduce using rule 22 (variable -> ID p_n_getVarVal .)
    RSQUARE         reduce using rule 22 (variable -> ID p_n_getVarVal .)
    HASTA           reduce using rule 22 (variable -> ID p_n_getVarVal .)
    HACER           reduce using rule 22 (variable -> ID p_n_getVarVal .)


state 81

    (56) lee -> LEE LPAREN . variable RPAREN
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal

    ID              shift and go to state 101

    variable                       shift and go to state 111

state 82

    (52) mult_asigna -> variable EQUAL . n_Operador mult_exp n_asignQuad
    (53) mult_asigna -> variable EQUAL . n_Operador mult_asigna n_asignQuad
    (86) n_Operador -> .

    ID              reduce using rule 86 (n_Operador -> .)
    LPAREN          reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 112

state 83

    (57) escribe -> ESCRIBE LPAREN . mult_exp n_escribeExp RPAREN SEMICOLON
    (58) escribe -> ESCRIBE LPAREN . mult_cte_s n_escribeExp RPAREN SEMICOLON
    (62) mult_exp -> . exp
    (63) mult_exp -> . exp COMMA mult_exp
    (60) mult_cte_s -> . CTE_S
    (61) mult_cte_s -> . CTE_S COMMA mult_cte_s
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    CTE_S           shift and go to state 115
    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    mult_exp                       shift and go to state 113
    mult_cte_s                     shift and go to state 114
    exp                            shift and go to state 87
    t_exp                          shift and go to state 88
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 84

    (98) condicion -> SI LPAREN . mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (99) condicion -> SI LPAREN . mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (62) mult_exp -> . exp
    (63) mult_exp -> . exp COMMA mult_exp
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    mult_exp                       shift and go to state 116
    exp                            shift and go to state 87
    t_exp                          shift and go to state 88
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 85

    (103) ciclo_w -> MIENTRAS n_startCicle . LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile

    LPAREN          shift and go to state 117


state 86

    (110) retorno -> REGRESA mult_exp . SEMICOLON

    SEMICOLON       shift and go to state 118


state 87

    (62) mult_exp -> exp .
    (63) mult_exp -> exp . COMMA mult_exp

    SEMICOLON       reduce using rule 62 (mult_exp -> exp .)
    RPAREN          reduce using rule 62 (mult_exp -> exp .)
    RSQUARE         reduce using rule 62 (mult_exp -> exp .)
    HASTA           reduce using rule 62 (mult_exp -> exp .)
    HACER           reduce using rule 62 (mult_exp -> exp .)
    COMMA           shift and go to state 119


state 88

    (64) exp -> t_exp . n_orQuad
    (65) exp -> t_exp . n_orQuad OR n_Operador exp
    (66) n_orQuad -> .

    OR              reduce using rule 66 (n_orQuad -> .)
    COMMA           reduce using rule 66 (n_orQuad -> .)
    SEMICOLON       reduce using rule 66 (n_orQuad -> .)
    RPAREN          reduce using rule 66 (n_orQuad -> .)
    RSQUARE         reduce using rule 66 (n_orQuad -> .)
    HASTA           reduce using rule 66 (n_orQuad -> .)
    HACER           reduce using rule 66 (n_orQuad -> .)

    n_orQuad                       shift and go to state 120

state 89

    (67) t_exp -> g_exp . n_andQuad
    (68) t_exp -> g_exp . n_andQuad AND n_Operador t_exp
    (69) n_andQuad -> .

    AND             reduce using rule 69 (n_andQuad -> .)
    OR              reduce using rule 69 (n_andQuad -> .)
    COMMA           reduce using rule 69 (n_andQuad -> .)
    SEMICOLON       reduce using rule 69 (n_andQuad -> .)
    RPAREN          reduce using rule 69 (n_andQuad -> .)
    RSQUARE         reduce using rule 69 (n_andQuad -> .)
    HASTA           reduce using rule 69 (n_andQuad -> .)
    HACER           reduce using rule 69 (n_andQuad -> .)

    n_andQuad                      shift and go to state 121

state 90

    (70) g_exp -> m_exp . n_compareQuad
    (71) g_exp -> m_exp . n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> m_exp . n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> m_exp . n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> m_exp . n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> m_exp . n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> m_exp . n_compareQuad NOEQUAL n_Operador g_exp
    (77) n_compareQuad -> .

    LESSTHAN        reduce using rule 77 (n_compareQuad -> .)
    LESSEQUAL       reduce using rule 77 (n_compareQuad -> .)
    GREATERTHAN     reduce using rule 77 (n_compareQuad -> .)
    GREATEREQUAL    reduce using rule 77 (n_compareQuad -> .)
    SAME            reduce using rule 77 (n_compareQuad -> .)
    NOEQUAL         reduce using rule 77 (n_compareQuad -> .)
    AND             reduce using rule 77 (n_compareQuad -> .)
    OR              reduce using rule 77 (n_compareQuad -> .)
    COMMA           reduce using rule 77 (n_compareQuad -> .)
    SEMICOLON       reduce using rule 77 (n_compareQuad -> .)
    RPAREN          reduce using rule 77 (n_compareQuad -> .)
    RSQUARE         reduce using rule 77 (n_compareQuad -> .)
    HASTA           reduce using rule 77 (n_compareQuad -> .)
    HACER           reduce using rule 77 (n_compareQuad -> .)

    n_compareQuad                  shift and go to state 122

state 91

    (78) m_exp -> t . n_sumQuad
    (79) m_exp -> t . n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> t . n_sumQuad MINUS n_Operador m_exp
    (81) n_sumQuad -> .

    PLUS            reduce using rule 81 (n_sumQuad -> .)
    MINUS           reduce using rule 81 (n_sumQuad -> .)
    LESSTHAN        reduce using rule 81 (n_sumQuad -> .)
    LESSEQUAL       reduce using rule 81 (n_sumQuad -> .)
    GREATERTHAN     reduce using rule 81 (n_sumQuad -> .)
    GREATEREQUAL    reduce using rule 81 (n_sumQuad -> .)
    SAME            reduce using rule 81 (n_sumQuad -> .)
    NOEQUAL         reduce using rule 81 (n_sumQuad -> .)
    AND             reduce using rule 81 (n_sumQuad -> .)
    OR              reduce using rule 81 (n_sumQuad -> .)
    COMMA           reduce using rule 81 (n_sumQuad -> .)
    SEMICOLON       reduce using rule 81 (n_sumQuad -> .)
    RPAREN          reduce using rule 81 (n_sumQuad -> .)
    RSQUARE         reduce using rule 81 (n_sumQuad -> .)
    HASTA           reduce using rule 81 (n_sumQuad -> .)
    HACER           reduce using rule 81 (n_sumQuad -> .)

    n_sumQuad                      shift and go to state 123

state 92

    (82) t -> f . n_multQuad
    (83) t -> f . n_multQuad MULT n_Operador t
    (84) t -> f . n_multQuad DIV n_Operador t
    (85) n_multQuad -> .

    MULT            reduce using rule 85 (n_multQuad -> .)
    DIV             reduce using rule 85 (n_multQuad -> .)
    PLUS            reduce using rule 85 (n_multQuad -> .)
    MINUS           reduce using rule 85 (n_multQuad -> .)
    LESSTHAN        reduce using rule 85 (n_multQuad -> .)
    LESSEQUAL       reduce using rule 85 (n_multQuad -> .)
    GREATERTHAN     reduce using rule 85 (n_multQuad -> .)
    GREATEREQUAL    reduce using rule 85 (n_multQuad -> .)
    SAME            reduce using rule 85 (n_multQuad -> .)
    NOEQUAL         reduce using rule 85 (n_multQuad -> .)
    AND             reduce using rule 85 (n_multQuad -> .)
    OR              reduce using rule 85 (n_multQuad -> .)
    COMMA           reduce using rule 85 (n_multQuad -> .)
    SEMICOLON       reduce using rule 85 (n_multQuad -> .)
    RPAREN          reduce using rule 85 (n_multQuad -> .)
    RSQUARE         reduce using rule 85 (n_multQuad -> .)
    HASTA           reduce using rule 85 (n_multQuad -> .)
    HACER           reduce using rule 85 (n_multQuad -> .)

    n_multQuad                     shift and go to state 124

state 93

    (87) f -> LPAREN . n_FF mult_exp RPAREN n_FF
    (97) n_FF -> .

    LPAREN          reduce using rule 97 (n_FF -> .)
    ID              reduce using rule 97 (n_FF -> .)
    CTE_I           reduce using rule 97 (n_FF -> .)
    CTE_F           reduce using rule 97 (n_FF -> .)
    CTE_C           reduce using rule 97 (n_FF -> .)

    n_FF                           shift and go to state 125

state 94

    (88) f -> n_tempTypeI . CTE_I n_directPrint

    CTE_I           shift and go to state 126


state 95

    (89) f -> n_tempTypeF . CTE_F n_directPrint

    CTE_F           shift and go to state 127


state 96

    (90) f -> n_tempTypeC . CTE_C n_directPrint

    CTE_C           shift and go to state 128


state 97

    (91) f -> variable .

    MULT            reduce using rule 91 (f -> variable .)
    DIV             reduce using rule 91 (f -> variable .)
    PLUS            reduce using rule 91 (f -> variable .)
    MINUS           reduce using rule 91 (f -> variable .)
    LESSTHAN        reduce using rule 91 (f -> variable .)
    LESSEQUAL       reduce using rule 91 (f -> variable .)
    GREATERTHAN     reduce using rule 91 (f -> variable .)
    GREATEREQUAL    reduce using rule 91 (f -> variable .)
    SAME            reduce using rule 91 (f -> variable .)
    NOEQUAL         reduce using rule 91 (f -> variable .)
    AND             reduce using rule 91 (f -> variable .)
    OR              reduce using rule 91 (f -> variable .)
    COMMA           reduce using rule 91 (f -> variable .)
    SEMICOLON       reduce using rule 91 (f -> variable .)
    RPAREN          reduce using rule 91 (f -> variable .)
    RSQUARE         reduce using rule 91 (f -> variable .)
    HASTA           reduce using rule 91 (f -> variable .)
    HACER           reduce using rule 91 (f -> variable .)


state 98

    (92) f -> llamada .

    MULT            reduce using rule 92 (f -> llamada .)
    DIV             reduce using rule 92 (f -> llamada .)
    PLUS            reduce using rule 92 (f -> llamada .)
    MINUS           reduce using rule 92 (f -> llamada .)
    LESSTHAN        reduce using rule 92 (f -> llamada .)
    LESSEQUAL       reduce using rule 92 (f -> llamada .)
    GREATERTHAN     reduce using rule 92 (f -> llamada .)
    GREATEREQUAL    reduce using rule 92 (f -> llamada .)
    SAME            reduce using rule 92 (f -> llamada .)
    NOEQUAL         reduce using rule 92 (f -> llamada .)
    AND             reduce using rule 92 (f -> llamada .)
    OR              reduce using rule 92 (f -> llamada .)
    COMMA           reduce using rule 92 (f -> llamada .)
    SEMICOLON       reduce using rule 92 (f -> llamada .)
    RPAREN          reduce using rule 92 (f -> llamada .)
    RSQUARE         reduce using rule 92 (f -> llamada .)
    HASTA           reduce using rule 92 (f -> llamada .)
    HACER           reduce using rule 92 (f -> llamada .)


state 99

    (21) variable -> ID . LSQUARE mult_exp RSQUARE
    (22) variable -> ID . p_n_getVarVal
    (55) llamada -> ID . LPAREN mult_exp RPAREN
    (23) p_n_getVarVal -> .

    LSQUARE         shift and go to state 79
    LPAREN          shift and go to state 78
    MULT            reduce using rule 23 (p_n_getVarVal -> .)
    DIV             reduce using rule 23 (p_n_getVarVal -> .)
    PLUS            reduce using rule 23 (p_n_getVarVal -> .)
    MINUS           reduce using rule 23 (p_n_getVarVal -> .)
    LESSTHAN        reduce using rule 23 (p_n_getVarVal -> .)
    LESSEQUAL       reduce using rule 23 (p_n_getVarVal -> .)
    GREATERTHAN     reduce using rule 23 (p_n_getVarVal -> .)
    GREATEREQUAL    reduce using rule 23 (p_n_getVarVal -> .)
    SAME            reduce using rule 23 (p_n_getVarVal -> .)
    NOEQUAL         reduce using rule 23 (p_n_getVarVal -> .)
    AND             reduce using rule 23 (p_n_getVarVal -> .)
    OR              reduce using rule 23 (p_n_getVarVal -> .)
    COMMA           reduce using rule 23 (p_n_getVarVal -> .)
    SEMICOLON       reduce using rule 23 (p_n_getVarVal -> .)
    RPAREN          reduce using rule 23 (p_n_getVarVal -> .)
    RSQUARE         reduce using rule 23 (p_n_getVarVal -> .)
    EQUAL           reduce using rule 23 (p_n_getVarVal -> .)
    HASTA           reduce using rule 23 (p_n_getVarVal -> .)
    HACER           reduce using rule 23 (p_n_getVarVal -> .)

    p_n_getVarVal                  shift and go to state 80

state 100

    (107) ciclo_f -> DESDE asigna . n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (104) n_startCicle -> .

    HASTA           reduce using rule 104 (n_startCicle -> .)

    n_startCicle                   shift and go to state 129

state 101

    (21) variable -> ID . LSQUARE mult_exp RSQUARE
    (22) variable -> ID . p_n_getVarVal
    (23) p_n_getVarVal -> .

    LSQUARE         shift and go to state 79
    EQUAL           reduce using rule 23 (p_n_getVarVal -> .)
    RPAREN          reduce using rule 23 (p_n_getVarVal -> .)

    p_n_getVarVal                  shift and go to state 80

state 102

    (35) param -> tipo_simple param_aux1 .

    RPAREN          reduce using rule 35 (param -> tipo_simple param_aux1 .)


state 103

    (36) param_aux1 -> ID . save_param
    (37) param_aux1 -> ID . save_param COMMA param
    (38) save_param -> .

    COMMA           reduce using rule 38 (save_param -> .)
    RPAREN          reduce using rule 38 (save_param -> .)

    save_param                     shift and go to state 130

state 104

    (26) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN . vars bloque
    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN . bloque
    (7) vars -> . VAR vars_aux
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 45

    vars                           shift and go to state 131
    bloque                         shift and go to state 132

state 105

    (30) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars . bloque
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 45

    bloque                         shift and go to state 133

state 106

    (31) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque .

    FUNCION         reduce using rule 31 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque .)
    PRINCIPAL       reduce using rule 31 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque .)


state 107

    (28) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param . RPAREN vars bloque
    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 134


state 108

    (32) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN . vars bloque
    (33) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN . bloque
    (7) vars -> . VAR vars_aux
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 45

    vars                           shift and go to state 135
    bloque                         shift and go to state 136

state 109

    (55) llamada -> ID LPAREN mult_exp . RPAREN

    RPAREN          shift and go to state 137


state 110

    (21) variable -> ID LSQUARE mult_exp . RSQUARE

    RSQUARE         shift and go to state 138


state 111

    (56) lee -> LEE LPAREN variable . RPAREN

    RPAREN          shift and go to state 139


state 112

    (52) mult_asigna -> variable EQUAL n_Operador . mult_exp n_asignQuad
    (53) mult_asigna -> variable EQUAL n_Operador . mult_asigna n_asignQuad
    (62) mult_exp -> . exp
    (63) mult_exp -> . exp COMMA mult_exp
    (52) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (53) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    ID              shift and go to state 99
    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)

    variable                       shift and go to state 140
    mult_exp                       shift and go to state 141
    mult_asigna                    shift and go to state 142
    exp                            shift and go to state 87
    t_exp                          shift and go to state 88
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    llamada                        shift and go to state 98

state 113

    (57) escribe -> ESCRIBE LPAREN mult_exp . n_escribeExp RPAREN SEMICOLON
    (59) n_escribeExp -> .

    RPAREN          reduce using rule 59 (n_escribeExp -> .)

    n_escribeExp                   shift and go to state 143

state 114

    (58) escribe -> ESCRIBE LPAREN mult_cte_s . n_escribeExp RPAREN SEMICOLON
    (59) n_escribeExp -> .

    RPAREN          reduce using rule 59 (n_escribeExp -> .)

    n_escribeExp                   shift and go to state 144

state 115

    (60) mult_cte_s -> CTE_S .
    (61) mult_cte_s -> CTE_S . COMMA mult_cte_s

    RPAREN          reduce using rule 60 (mult_cte_s -> CTE_S .)
    COMMA           shift and go to state 145


state 116

    (98) condicion -> SI LPAREN mult_exp . RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (99) condicion -> SI LPAREN mult_exp . RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad

    RPAREN          shift and go to state 146


state 117

    (103) ciclo_w -> MIENTRAS n_startCicle LPAREN . mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (62) mult_exp -> . exp
    (63) mult_exp -> . exp COMMA mult_exp
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    mult_exp                       shift and go to state 147
    exp                            shift and go to state 87
    t_exp                          shift and go to state 88
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 118

    (110) retorno -> REGRESA mult_exp SEMICOLON .

    ID              reduce using rule 110 (retorno -> REGRESA mult_exp SEMICOLON .)
    LEE             reduce using rule 110 (retorno -> REGRESA mult_exp SEMICOLON .)
    ESCRIBE         reduce using rule 110 (retorno -> REGRESA mult_exp SEMICOLON .)
    SI              reduce using rule 110 (retorno -> REGRESA mult_exp SEMICOLON .)
    MIENTRAS        reduce using rule 110 (retorno -> REGRESA mult_exp SEMICOLON .)
    REGRESA         reduce using rule 110 (retorno -> REGRESA mult_exp SEMICOLON .)
    DESDE           reduce using rule 110 (retorno -> REGRESA mult_exp SEMICOLON .)
    RBRACKET        reduce using rule 110 (retorno -> REGRESA mult_exp SEMICOLON .)


state 119

    (63) mult_exp -> exp COMMA . mult_exp
    (62) mult_exp -> . exp
    (63) mult_exp -> . exp COMMA mult_exp
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    exp                            shift and go to state 87
    mult_exp                       shift and go to state 148
    t_exp                          shift and go to state 88
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 120

    (64) exp -> t_exp n_orQuad .
    (65) exp -> t_exp n_orQuad . OR n_Operador exp

    COMMA           reduce using rule 64 (exp -> t_exp n_orQuad .)
    SEMICOLON       reduce using rule 64 (exp -> t_exp n_orQuad .)
    RPAREN          reduce using rule 64 (exp -> t_exp n_orQuad .)
    RSQUARE         reduce using rule 64 (exp -> t_exp n_orQuad .)
    HASTA           reduce using rule 64 (exp -> t_exp n_orQuad .)
    HACER           reduce using rule 64 (exp -> t_exp n_orQuad .)
    OR              shift and go to state 149


state 121

    (67) t_exp -> g_exp n_andQuad .
    (68) t_exp -> g_exp n_andQuad . AND n_Operador t_exp

    OR              reduce using rule 67 (t_exp -> g_exp n_andQuad .)
    COMMA           reduce using rule 67 (t_exp -> g_exp n_andQuad .)
    SEMICOLON       reduce using rule 67 (t_exp -> g_exp n_andQuad .)
    RPAREN          reduce using rule 67 (t_exp -> g_exp n_andQuad .)
    RSQUARE         reduce using rule 67 (t_exp -> g_exp n_andQuad .)
    HASTA           reduce using rule 67 (t_exp -> g_exp n_andQuad .)
    HACER           reduce using rule 67 (t_exp -> g_exp n_andQuad .)
    AND             shift and go to state 150


state 122

    (70) g_exp -> m_exp n_compareQuad .
    (71) g_exp -> m_exp n_compareQuad . LESSTHAN n_Operador g_exp
    (72) g_exp -> m_exp n_compareQuad . LESSEQUAL n_Operador g_exp
    (73) g_exp -> m_exp n_compareQuad . GREATERTHAN n_Operador g_exp
    (74) g_exp -> m_exp n_compareQuad . GREATEREQUAL n_Operador g_exp
    (75) g_exp -> m_exp n_compareQuad . SAME n_Operador g_exp
    (76) g_exp -> m_exp n_compareQuad . NOEQUAL n_Operador g_exp

    AND             reduce using rule 70 (g_exp -> m_exp n_compareQuad .)
    OR              reduce using rule 70 (g_exp -> m_exp n_compareQuad .)
    COMMA           reduce using rule 70 (g_exp -> m_exp n_compareQuad .)
    SEMICOLON       reduce using rule 70 (g_exp -> m_exp n_compareQuad .)
    RPAREN          reduce using rule 70 (g_exp -> m_exp n_compareQuad .)
    RSQUARE         reduce using rule 70 (g_exp -> m_exp n_compareQuad .)
    HASTA           reduce using rule 70 (g_exp -> m_exp n_compareQuad .)
    HACER           reduce using rule 70 (g_exp -> m_exp n_compareQuad .)
    LESSTHAN        shift and go to state 151
    LESSEQUAL       shift and go to state 152
    GREATERTHAN     shift and go to state 153
    GREATEREQUAL    shift and go to state 154
    SAME            shift and go to state 155
    NOEQUAL         shift and go to state 156


state 123

    (78) m_exp -> t n_sumQuad .
    (79) m_exp -> t n_sumQuad . PLUS n_Operador m_exp
    (80) m_exp -> t n_sumQuad . MINUS n_Operador m_exp

    LESSTHAN        reduce using rule 78 (m_exp -> t n_sumQuad .)
    LESSEQUAL       reduce using rule 78 (m_exp -> t n_sumQuad .)
    GREATERTHAN     reduce using rule 78 (m_exp -> t n_sumQuad .)
    GREATEREQUAL    reduce using rule 78 (m_exp -> t n_sumQuad .)
    SAME            reduce using rule 78 (m_exp -> t n_sumQuad .)
    NOEQUAL         reduce using rule 78 (m_exp -> t n_sumQuad .)
    AND             reduce using rule 78 (m_exp -> t n_sumQuad .)
    OR              reduce using rule 78 (m_exp -> t n_sumQuad .)
    COMMA           reduce using rule 78 (m_exp -> t n_sumQuad .)
    SEMICOLON       reduce using rule 78 (m_exp -> t n_sumQuad .)
    RPAREN          reduce using rule 78 (m_exp -> t n_sumQuad .)
    RSQUARE         reduce using rule 78 (m_exp -> t n_sumQuad .)
    HASTA           reduce using rule 78 (m_exp -> t n_sumQuad .)
    HACER           reduce using rule 78 (m_exp -> t n_sumQuad .)
    PLUS            shift and go to state 157
    MINUS           shift and go to state 158


state 124

    (82) t -> f n_multQuad .
    (83) t -> f n_multQuad . MULT n_Operador t
    (84) t -> f n_multQuad . DIV n_Operador t

    PLUS            reduce using rule 82 (t -> f n_multQuad .)
    MINUS           reduce using rule 82 (t -> f n_multQuad .)
    LESSTHAN        reduce using rule 82 (t -> f n_multQuad .)
    LESSEQUAL       reduce using rule 82 (t -> f n_multQuad .)
    GREATERTHAN     reduce using rule 82 (t -> f n_multQuad .)
    GREATEREQUAL    reduce using rule 82 (t -> f n_multQuad .)
    SAME            reduce using rule 82 (t -> f n_multQuad .)
    NOEQUAL         reduce using rule 82 (t -> f n_multQuad .)
    AND             reduce using rule 82 (t -> f n_multQuad .)
    OR              reduce using rule 82 (t -> f n_multQuad .)
    COMMA           reduce using rule 82 (t -> f n_multQuad .)
    SEMICOLON       reduce using rule 82 (t -> f n_multQuad .)
    RPAREN          reduce using rule 82 (t -> f n_multQuad .)
    RSQUARE         reduce using rule 82 (t -> f n_multQuad .)
    HASTA           reduce using rule 82 (t -> f n_multQuad .)
    HACER           reduce using rule 82 (t -> f n_multQuad .)
    MULT            shift and go to state 159
    DIV             shift and go to state 160


state 125

    (87) f -> LPAREN n_FF . mult_exp RPAREN n_FF
    (62) mult_exp -> . exp
    (63) mult_exp -> . exp COMMA mult_exp
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    mult_exp                       shift and go to state 161
    exp                            shift and go to state 87
    t_exp                          shift and go to state 88
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 126

    (88) f -> n_tempTypeI CTE_I . n_directPrint
    (96) n_directPrint -> .

    MULT            reduce using rule 96 (n_directPrint -> .)
    DIV             reduce using rule 96 (n_directPrint -> .)
    PLUS            reduce using rule 96 (n_directPrint -> .)
    MINUS           reduce using rule 96 (n_directPrint -> .)
    LESSTHAN        reduce using rule 96 (n_directPrint -> .)
    LESSEQUAL       reduce using rule 96 (n_directPrint -> .)
    GREATERTHAN     reduce using rule 96 (n_directPrint -> .)
    GREATEREQUAL    reduce using rule 96 (n_directPrint -> .)
    SAME            reduce using rule 96 (n_directPrint -> .)
    NOEQUAL         reduce using rule 96 (n_directPrint -> .)
    AND             reduce using rule 96 (n_directPrint -> .)
    OR              reduce using rule 96 (n_directPrint -> .)
    COMMA           reduce using rule 96 (n_directPrint -> .)
    SEMICOLON       reduce using rule 96 (n_directPrint -> .)
    RPAREN          reduce using rule 96 (n_directPrint -> .)
    RSQUARE         reduce using rule 96 (n_directPrint -> .)
    HASTA           reduce using rule 96 (n_directPrint -> .)
    HACER           reduce using rule 96 (n_directPrint -> .)

    n_directPrint                  shift and go to state 162

state 127

    (89) f -> n_tempTypeF CTE_F . n_directPrint
    (96) n_directPrint -> .

    MULT            reduce using rule 96 (n_directPrint -> .)
    DIV             reduce using rule 96 (n_directPrint -> .)
    PLUS            reduce using rule 96 (n_directPrint -> .)
    MINUS           reduce using rule 96 (n_directPrint -> .)
    LESSTHAN        reduce using rule 96 (n_directPrint -> .)
    LESSEQUAL       reduce using rule 96 (n_directPrint -> .)
    GREATERTHAN     reduce using rule 96 (n_directPrint -> .)
    GREATEREQUAL    reduce using rule 96 (n_directPrint -> .)
    SAME            reduce using rule 96 (n_directPrint -> .)
    NOEQUAL         reduce using rule 96 (n_directPrint -> .)
    AND             reduce using rule 96 (n_directPrint -> .)
    OR              reduce using rule 96 (n_directPrint -> .)
    COMMA           reduce using rule 96 (n_directPrint -> .)
    SEMICOLON       reduce using rule 96 (n_directPrint -> .)
    RPAREN          reduce using rule 96 (n_directPrint -> .)
    RSQUARE         reduce using rule 96 (n_directPrint -> .)
    HASTA           reduce using rule 96 (n_directPrint -> .)
    HACER           reduce using rule 96 (n_directPrint -> .)

    n_directPrint                  shift and go to state 163

state 128

    (90) f -> n_tempTypeC CTE_C . n_directPrint
    (96) n_directPrint -> .

    MULT            reduce using rule 96 (n_directPrint -> .)
    DIV             reduce using rule 96 (n_directPrint -> .)
    PLUS            reduce using rule 96 (n_directPrint -> .)
    MINUS           reduce using rule 96 (n_directPrint -> .)
    LESSTHAN        reduce using rule 96 (n_directPrint -> .)
    LESSEQUAL       reduce using rule 96 (n_directPrint -> .)
    GREATERTHAN     reduce using rule 96 (n_directPrint -> .)
    GREATEREQUAL    reduce using rule 96 (n_directPrint -> .)
    SAME            reduce using rule 96 (n_directPrint -> .)
    NOEQUAL         reduce using rule 96 (n_directPrint -> .)
    AND             reduce using rule 96 (n_directPrint -> .)
    OR              reduce using rule 96 (n_directPrint -> .)
    COMMA           reduce using rule 96 (n_directPrint -> .)
    SEMICOLON       reduce using rule 96 (n_directPrint -> .)
    RPAREN          reduce using rule 96 (n_directPrint -> .)
    RSQUARE         reduce using rule 96 (n_directPrint -> .)
    HASTA           reduce using rule 96 (n_directPrint -> .)
    HACER           reduce using rule 96 (n_directPrint -> .)

    n_directPrint                  shift and go to state 164

state 129

    (107) ciclo_f -> DESDE asigna n_startCicle . HASTA mult_exp n_evalExp_for HACER bloque n_endFor

    HASTA           shift and go to state 165


state 130

    (36) param_aux1 -> ID save_param .
    (37) param_aux1 -> ID save_param . COMMA param

    RPAREN          reduce using rule 36 (param_aux1 -> ID save_param .)
    COMMA           shift and go to state 166


state 131

    (26) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars . bloque
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 45

    bloque                         shift and go to state 167

state 132

    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque .

    FUNCION         reduce using rule 27 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque .)
    PRINCIPAL       reduce using rule 27 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque .)


state 133

    (30) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque .

    FUNCION         reduce using rule 30 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque .)
    PRINCIPAL       reduce using rule 30 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque .)


state 134

    (28) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN . vars bloque
    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN . bloque
    (7) vars -> . VAR vars_aux
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 45

    vars                           shift and go to state 168
    bloque                         shift and go to state 169

state 135

    (32) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars . bloque
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 45

    bloque                         shift and go to state 170

state 136

    (33) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque .

    FUNCION         reduce using rule 33 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque .)
    PRINCIPAL       reduce using rule 33 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque .)


state 137

    (55) llamada -> ID LPAREN mult_exp RPAREN .

    ID              reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    LEE             reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    ESCRIBE         reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    SI              reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    MIENTRAS        reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    REGRESA         reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    DESDE           reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    RBRACKET        reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    MULT            reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    DIV             reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    PLUS            reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    MINUS           reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    LESSTHAN        reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    LESSEQUAL       reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    GREATERTHAN     reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    GREATEREQUAL    reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    SAME            reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    NOEQUAL         reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    AND             reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    OR              reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    COMMA           reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    SEMICOLON       reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    RPAREN          reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    RSQUARE         reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    HASTA           reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)
    HACER           reduce using rule 55 (llamada -> ID LPAREN mult_exp RPAREN .)


state 138

    (21) variable -> ID LSQUARE mult_exp RSQUARE .

    EQUAL           reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    MULT            reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    DIV             reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    PLUS            reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    MINUS           reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    LESSTHAN        reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    LESSEQUAL       reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    GREATERTHAN     reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    GREATEREQUAL    reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    SAME            reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    NOEQUAL         reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    AND             reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    OR              reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    COMMA           reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    SEMICOLON       reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    RPAREN          reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    RSQUARE         reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    HASTA           reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)
    HACER           reduce using rule 21 (variable -> ID LSQUARE mult_exp RSQUARE .)


state 139

    (56) lee -> LEE LPAREN variable RPAREN .

    ID              reduce using rule 56 (lee -> LEE LPAREN variable RPAREN .)
    LEE             reduce using rule 56 (lee -> LEE LPAREN variable RPAREN .)
    ESCRIBE         reduce using rule 56 (lee -> LEE LPAREN variable RPAREN .)
    SI              reduce using rule 56 (lee -> LEE LPAREN variable RPAREN .)
    MIENTRAS        reduce using rule 56 (lee -> LEE LPAREN variable RPAREN .)
    REGRESA         reduce using rule 56 (lee -> LEE LPAREN variable RPAREN .)
    DESDE           reduce using rule 56 (lee -> LEE LPAREN variable RPAREN .)
    RBRACKET        reduce using rule 56 (lee -> LEE LPAREN variable RPAREN .)


state 140

    (52) mult_asigna -> variable . EQUAL n_Operador mult_exp n_asignQuad
    (53) mult_asigna -> variable . EQUAL n_Operador mult_asigna n_asignQuad
    (91) f -> variable .

    EQUAL           shift and go to state 82
    MULT            reduce using rule 91 (f -> variable .)
    DIV             reduce using rule 91 (f -> variable .)
    PLUS            reduce using rule 91 (f -> variable .)
    MINUS           reduce using rule 91 (f -> variable .)
    LESSTHAN        reduce using rule 91 (f -> variable .)
    LESSEQUAL       reduce using rule 91 (f -> variable .)
    GREATERTHAN     reduce using rule 91 (f -> variable .)
    GREATEREQUAL    reduce using rule 91 (f -> variable .)
    SAME            reduce using rule 91 (f -> variable .)
    NOEQUAL         reduce using rule 91 (f -> variable .)
    AND             reduce using rule 91 (f -> variable .)
    OR              reduce using rule 91 (f -> variable .)
    COMMA           reduce using rule 91 (f -> variable .)
    SEMICOLON       reduce using rule 91 (f -> variable .)
    HASTA           reduce using rule 91 (f -> variable .)


state 141

    (52) mult_asigna -> variable EQUAL n_Operador mult_exp . n_asignQuad
    (54) n_asignQuad -> .

    SEMICOLON       reduce using rule 54 (n_asignQuad -> .)
    HASTA           reduce using rule 54 (n_asignQuad -> .)

    n_asignQuad                    shift and go to state 171

state 142

    (53) mult_asigna -> variable EQUAL n_Operador mult_asigna . n_asignQuad
    (54) n_asignQuad -> .

    SEMICOLON       reduce using rule 54 (n_asignQuad -> .)
    HASTA           reduce using rule 54 (n_asignQuad -> .)

    n_asignQuad                    shift and go to state 172

state 143

    (57) escribe -> ESCRIBE LPAREN mult_exp n_escribeExp . RPAREN SEMICOLON

    RPAREN          shift and go to state 173


state 144

    (58) escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp . RPAREN SEMICOLON

    RPAREN          shift and go to state 174


state 145

    (61) mult_cte_s -> CTE_S COMMA . mult_cte_s
    (60) mult_cte_s -> . CTE_S
    (61) mult_cte_s -> . CTE_S COMMA mult_cte_s

    CTE_S           shift and go to state 115

    mult_cte_s                     shift and go to state 175

state 146

    (98) condicion -> SI LPAREN mult_exp RPAREN . n_ifQuad ENTONCES bloque n_endIfQuad
    (99) condicion -> SI LPAREN mult_exp RPAREN . n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (100) n_ifQuad -> .

    ENTONCES        reduce using rule 100 (n_ifQuad -> .)

    n_ifQuad                       shift and go to state 176

state 147

    (103) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp . RPAREN n_evalExp HAZ bloque n_endWhile

    RPAREN          shift and go to state 177


state 148

    (63) mult_exp -> exp COMMA mult_exp .

    SEMICOLON       reduce using rule 63 (mult_exp -> exp COMMA mult_exp .)
    RPAREN          reduce using rule 63 (mult_exp -> exp COMMA mult_exp .)
    RSQUARE         reduce using rule 63 (mult_exp -> exp COMMA mult_exp .)
    HASTA           reduce using rule 63 (mult_exp -> exp COMMA mult_exp .)
    HACER           reduce using rule 63 (mult_exp -> exp COMMA mult_exp .)


state 149

    (65) exp -> t_exp n_orQuad OR . n_Operador exp
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 178

state 150

    (68) t_exp -> g_exp n_andQuad AND . n_Operador t_exp
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 179

state 151

    (71) g_exp -> m_exp n_compareQuad LESSTHAN . n_Operador g_exp
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 180

state 152

    (72) g_exp -> m_exp n_compareQuad LESSEQUAL . n_Operador g_exp
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 181

state 153

    (73) g_exp -> m_exp n_compareQuad GREATERTHAN . n_Operador g_exp
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 182

state 154

    (74) g_exp -> m_exp n_compareQuad GREATEREQUAL . n_Operador g_exp
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 183

state 155

    (75) g_exp -> m_exp n_compareQuad SAME . n_Operador g_exp
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 184

state 156

    (76) g_exp -> m_exp n_compareQuad NOEQUAL . n_Operador g_exp
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 185

state 157

    (79) m_exp -> t n_sumQuad PLUS . n_Operador m_exp
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 186

state 158

    (80) m_exp -> t n_sumQuad MINUS . n_Operador m_exp
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 187

state 159

    (83) t -> f n_multQuad MULT . n_Operador t
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 188

state 160

    (84) t -> f n_multQuad DIV . n_Operador t
    (86) n_Operador -> .

    LPAREN          reduce using rule 86 (n_Operador -> .)
    ID              reduce using rule 86 (n_Operador -> .)
    CTE_I           reduce using rule 86 (n_Operador -> .)
    CTE_F           reduce using rule 86 (n_Operador -> .)
    CTE_C           reduce using rule 86 (n_Operador -> .)

    n_Operador                     shift and go to state 189

state 161

    (87) f -> LPAREN n_FF mult_exp . RPAREN n_FF

    RPAREN          shift and go to state 190


state 162

    (88) f -> n_tempTypeI CTE_I n_directPrint .

    MULT            reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    DIV             reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    PLUS            reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    MINUS           reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    LESSTHAN        reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    LESSEQUAL       reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    GREATERTHAN     reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    GREATEREQUAL    reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    SAME            reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    NOEQUAL         reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    AND             reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    OR              reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    COMMA           reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    SEMICOLON       reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    RPAREN          reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    RSQUARE         reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    HASTA           reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)
    HACER           reduce using rule 88 (f -> n_tempTypeI CTE_I n_directPrint .)


state 163

    (89) f -> n_tempTypeF CTE_F n_directPrint .

    MULT            reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    DIV             reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    PLUS            reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    MINUS           reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    LESSTHAN        reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    LESSEQUAL       reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    GREATERTHAN     reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    GREATEREQUAL    reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    SAME            reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    NOEQUAL         reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    AND             reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    OR              reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    COMMA           reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    SEMICOLON       reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    RPAREN          reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    RSQUARE         reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    HASTA           reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)
    HACER           reduce using rule 89 (f -> n_tempTypeF CTE_F n_directPrint .)


state 164

    (90) f -> n_tempTypeC CTE_C n_directPrint .

    MULT            reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    DIV             reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    PLUS            reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    MINUS           reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    LESSTHAN        reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    LESSEQUAL       reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    GREATERTHAN     reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    GREATEREQUAL    reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    SAME            reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    NOEQUAL         reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    AND             reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    OR              reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    COMMA           reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    SEMICOLON       reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    RPAREN          reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    RSQUARE         reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    HASTA           reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)
    HACER           reduce using rule 90 (f -> n_tempTypeC CTE_C n_directPrint .)


state 165

    (107) ciclo_f -> DESDE asigna n_startCicle HASTA . mult_exp n_evalExp_for HACER bloque n_endFor
    (62) mult_exp -> . exp
    (63) mult_exp -> . exp COMMA mult_exp
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    mult_exp                       shift and go to state 191
    exp                            shift and go to state 87
    t_exp                          shift and go to state 88
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 166

    (37) param_aux1 -> ID save_param COMMA . param
    (35) param -> . tipo_simple param_aux1
    (16) tipo_simple -> . INT n_save_type
    (17) tipo_simple -> . FLOAT n_save_type
    (18) tipo_simple -> . CHAR n_save_type

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    param                          shift and go to state 192
    tipo_simple                    shift and go to state 69

state 167

    (26) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque .

    FUNCION         reduce using rule 26 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque .)
    PRINCIPAL       reduce using rule 26 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque .)


state 168

    (28) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars . bloque
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 45

    bloque                         shift and go to state 193

state 169

    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque .

    FUNCION         reduce using rule 29 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque .)
    PRINCIPAL       reduce using rule 29 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque .)


state 170

    (32) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque .

    FUNCION         reduce using rule 32 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque .)
    PRINCIPAL       reduce using rule 32 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque .)


state 171

    (52) mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad .

    SEMICOLON       reduce using rule 52 (mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad .)
    HASTA           reduce using rule 52 (mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad .)


state 172

    (53) mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad .

    SEMICOLON       reduce using rule 53 (mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad .)
    HASTA           reduce using rule 53 (mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad .)


state 173

    (57) escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 194


state 174

    (58) escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 195


state 175

    (61) mult_cte_s -> CTE_S COMMA mult_cte_s .

    RPAREN          reduce using rule 61 (mult_cte_s -> CTE_S COMMA mult_cte_s .)


state 176

    (98) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad . ENTONCES bloque n_endIfQuad
    (99) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad . ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad

    ENTONCES        shift and go to state 196


state 177

    (103) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN . n_evalExp HAZ bloque n_endWhile
    (105) n_evalExp -> .

    HAZ             reduce using rule 105 (n_evalExp -> .)

    n_evalExp                      shift and go to state 197

state 178

    (65) exp -> t_exp n_orQuad OR n_Operador . exp
    (64) exp -> . t_exp n_orQuad
    (65) exp -> . t_exp n_orQuad OR n_Operador exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    t_exp                          shift and go to state 88
    exp                            shift and go to state 198
    g_exp                          shift and go to state 89
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 179

    (68) t_exp -> g_exp n_andQuad AND n_Operador . t_exp
    (67) t_exp -> . g_exp n_andQuad
    (68) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    g_exp                          shift and go to state 89
    t_exp                          shift and go to state 199
    m_exp                          shift and go to state 90
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 180

    (71) g_exp -> m_exp n_compareQuad LESSTHAN n_Operador . g_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    m_exp                          shift and go to state 90
    g_exp                          shift and go to state 200
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 181

    (72) g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador . g_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    m_exp                          shift and go to state 90
    g_exp                          shift and go to state 201
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 182

    (73) g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador . g_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    m_exp                          shift and go to state 90
    g_exp                          shift and go to state 202
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 183

    (74) g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador . g_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    m_exp                          shift and go to state 90
    g_exp                          shift and go to state 203
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 184

    (75) g_exp -> m_exp n_compareQuad SAME n_Operador . g_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    m_exp                          shift and go to state 90
    g_exp                          shift and go to state 204
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 185

    (76) g_exp -> m_exp n_compareQuad NOEQUAL n_Operador . g_exp
    (70) g_exp -> . m_exp n_compareQuad
    (71) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (74) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (75) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (76) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    m_exp                          shift and go to state 90
    g_exp                          shift and go to state 205
    t                              shift and go to state 91
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 186

    (79) m_exp -> t n_sumQuad PLUS n_Operador . m_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    t                              shift and go to state 91
    m_exp                          shift and go to state 206
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 187

    (80) m_exp -> t n_sumQuad MINUS n_Operador . m_exp
    (78) m_exp -> . t n_sumQuad
    (79) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (80) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    t                              shift and go to state 91
    m_exp                          shift and go to state 207
    f                              shift and go to state 92
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 188

    (83) t -> f n_multQuad MULT n_Operador . t
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    f                              shift and go to state 92
    t                              shift and go to state 208
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 189

    (84) t -> f n_multQuad DIV n_Operador . t
    (82) t -> . f n_multQuad
    (83) t -> . f n_multQuad MULT n_Operador t
    (84) t -> . f n_multQuad DIV n_Operador t
    (87) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (88) f -> . n_tempTypeI CTE_I n_directPrint
    (89) f -> . n_tempTypeF CTE_F n_directPrint
    (90) f -> . n_tempTypeC CTE_C n_directPrint
    (91) f -> . variable
    (92) f -> . llamada
    (93) n_tempTypeI -> .
    (94) n_tempTypeF -> .
    (95) n_tempTypeC -> .
    (21) variable -> . ID LSQUARE mult_exp RSQUARE
    (22) variable -> . ID p_n_getVarVal
    (55) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 93
    CTE_I           reduce using rule 93 (n_tempTypeI -> .)
    CTE_F           reduce using rule 94 (n_tempTypeF -> .)
    CTE_C           reduce using rule 95 (n_tempTypeC -> .)
    ID              shift and go to state 99

    f                              shift and go to state 92
    t                              shift and go to state 209
    n_tempTypeI                    shift and go to state 94
    n_tempTypeF                    shift and go to state 95
    n_tempTypeC                    shift and go to state 96
    variable                       shift and go to state 97
    llamada                        shift and go to state 98

state 190

    (87) f -> LPAREN n_FF mult_exp RPAREN . n_FF
    (97) n_FF -> .

    MULT            reduce using rule 97 (n_FF -> .)
    DIV             reduce using rule 97 (n_FF -> .)
    PLUS            reduce using rule 97 (n_FF -> .)
    MINUS           reduce using rule 97 (n_FF -> .)
    LESSTHAN        reduce using rule 97 (n_FF -> .)
    LESSEQUAL       reduce using rule 97 (n_FF -> .)
    GREATERTHAN     reduce using rule 97 (n_FF -> .)
    GREATEREQUAL    reduce using rule 97 (n_FF -> .)
    SAME            reduce using rule 97 (n_FF -> .)
    NOEQUAL         reduce using rule 97 (n_FF -> .)
    AND             reduce using rule 97 (n_FF -> .)
    OR              reduce using rule 97 (n_FF -> .)
    COMMA           reduce using rule 97 (n_FF -> .)
    SEMICOLON       reduce using rule 97 (n_FF -> .)
    RPAREN          reduce using rule 97 (n_FF -> .)
    RSQUARE         reduce using rule 97 (n_FF -> .)
    HASTA           reduce using rule 97 (n_FF -> .)
    HACER           reduce using rule 97 (n_FF -> .)

    n_FF                           shift and go to state 210

state 191

    (107) ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp . n_evalExp_for HACER bloque n_endFor
    (108) n_evalExp_for -> .

    HACER           reduce using rule 108 (n_evalExp_for -> .)

    n_evalExp_for                  shift and go to state 211

state 192

    (37) param_aux1 -> ID save_param COMMA param .

    RPAREN          reduce using rule 37 (param_aux1 -> ID save_param COMMA param .)


state 193

    (28) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque .

    FUNCION         reduce using rule 28 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque .)
    PRINCIPAL       reduce using rule 28 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque .)


state 194

    (57) escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .

    ID              reduce using rule 57 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    LEE             reduce using rule 57 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 57 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    SI              reduce using rule 57 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 57 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    REGRESA         reduce using rule 57 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    DESDE           reduce using rule 57 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 57 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)


state 195

    (58) escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .

    ID              reduce using rule 58 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    LEE             reduce using rule 58 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 58 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    SI              reduce using rule 58 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 58 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    REGRESA         reduce using rule 58 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    DESDE           reduce using rule 58 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 58 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)


state 196

    (98) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES . bloque n_endIfQuad
    (99) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES . bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 45

    bloque                         shift and go to state 212

state 197

    (103) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp . HAZ bloque n_endWhile

    HAZ             shift and go to state 213


state 198

    (65) exp -> t_exp n_orQuad OR n_Operador exp .

    COMMA           reduce using rule 65 (exp -> t_exp n_orQuad OR n_Operador exp .)
    SEMICOLON       reduce using rule 65 (exp -> t_exp n_orQuad OR n_Operador exp .)
    RPAREN          reduce using rule 65 (exp -> t_exp n_orQuad OR n_Operador exp .)
    RSQUARE         reduce using rule 65 (exp -> t_exp n_orQuad OR n_Operador exp .)
    HASTA           reduce using rule 65 (exp -> t_exp n_orQuad OR n_Operador exp .)
    HACER           reduce using rule 65 (exp -> t_exp n_orQuad OR n_Operador exp .)


state 199

    (68) t_exp -> g_exp n_andQuad AND n_Operador t_exp .

    OR              reduce using rule 68 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    COMMA           reduce using rule 68 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    SEMICOLON       reduce using rule 68 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    RPAREN          reduce using rule 68 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    RSQUARE         reduce using rule 68 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    HASTA           reduce using rule 68 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    HACER           reduce using rule 68 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)


state 200

    (71) g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .

    AND             reduce using rule 71 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    OR              reduce using rule 71 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    COMMA           reduce using rule 71 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    SEMICOLON       reduce using rule 71 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    RPAREN          reduce using rule 71 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    RSQUARE         reduce using rule 71 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    HASTA           reduce using rule 71 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    HACER           reduce using rule 71 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)


state 201

    (72) g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .

    AND             reduce using rule 72 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    OR              reduce using rule 72 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    COMMA           reduce using rule 72 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    SEMICOLON       reduce using rule 72 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    RPAREN          reduce using rule 72 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    RSQUARE         reduce using rule 72 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    HASTA           reduce using rule 72 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    HACER           reduce using rule 72 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)


state 202

    (73) g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .

    AND             reduce using rule 73 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    OR              reduce using rule 73 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    COMMA           reduce using rule 73 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    SEMICOLON       reduce using rule 73 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    RPAREN          reduce using rule 73 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    RSQUARE         reduce using rule 73 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    HASTA           reduce using rule 73 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    HACER           reduce using rule 73 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)


state 203

    (74) g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .

    AND             reduce using rule 74 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    OR              reduce using rule 74 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    COMMA           reduce using rule 74 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    SEMICOLON       reduce using rule 74 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    RPAREN          reduce using rule 74 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    RSQUARE         reduce using rule 74 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    HASTA           reduce using rule 74 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    HACER           reduce using rule 74 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)


state 204

    (75) g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .

    AND             reduce using rule 75 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    OR              reduce using rule 75 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    COMMA           reduce using rule 75 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    SEMICOLON       reduce using rule 75 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    RPAREN          reduce using rule 75 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    RSQUARE         reduce using rule 75 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    HASTA           reduce using rule 75 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    HACER           reduce using rule 75 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)


state 205

    (76) g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .

    AND             reduce using rule 76 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    OR              reduce using rule 76 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    COMMA           reduce using rule 76 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    SEMICOLON       reduce using rule 76 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    RPAREN          reduce using rule 76 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    RSQUARE         reduce using rule 76 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    HASTA           reduce using rule 76 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    HACER           reduce using rule 76 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)


state 206

    (79) m_exp -> t n_sumQuad PLUS n_Operador m_exp .

    LESSTHAN        reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    LESSEQUAL       reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    GREATERTHAN     reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    GREATEREQUAL    reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    SAME            reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    NOEQUAL         reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    AND             reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    OR              reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    COMMA           reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    SEMICOLON       reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    RPAREN          reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    RSQUARE         reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    HASTA           reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    HACER           reduce using rule 79 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)


state 207

    (80) m_exp -> t n_sumQuad MINUS n_Operador m_exp .

    LESSTHAN        reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    LESSEQUAL       reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    GREATERTHAN     reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    GREATEREQUAL    reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    SAME            reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    NOEQUAL         reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    AND             reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    OR              reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    COMMA           reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    SEMICOLON       reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    RPAREN          reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    RSQUARE         reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    HASTA           reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    HACER           reduce using rule 80 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)


state 208

    (83) t -> f n_multQuad MULT n_Operador t .

    PLUS            reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    MINUS           reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    LESSTHAN        reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    LESSEQUAL       reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    GREATERTHAN     reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    GREATEREQUAL    reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    SAME            reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    NOEQUAL         reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    AND             reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    OR              reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    COMMA           reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    SEMICOLON       reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    RPAREN          reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    RSQUARE         reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    HASTA           reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)
    HACER           reduce using rule 83 (t -> f n_multQuad MULT n_Operador t .)


state 209

    (84) t -> f n_multQuad DIV n_Operador t .

    PLUS            reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    MINUS           reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    LESSTHAN        reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    LESSEQUAL       reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    GREATERTHAN     reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    GREATEREQUAL    reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    SAME            reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    NOEQUAL         reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    AND             reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    OR              reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    COMMA           reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    SEMICOLON       reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    RPAREN          reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    RSQUARE         reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    HASTA           reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)
    HACER           reduce using rule 84 (t -> f n_multQuad DIV n_Operador t .)


state 210

    (87) f -> LPAREN n_FF mult_exp RPAREN n_FF .

    MULT            reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    DIV             reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    PLUS            reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    MINUS           reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    LESSTHAN        reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    LESSEQUAL       reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    GREATERTHAN     reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    GREATEREQUAL    reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    SAME            reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    NOEQUAL         reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    AND             reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    OR              reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    COMMA           reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    SEMICOLON       reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    RPAREN          reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    RSQUARE         reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    HASTA           reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    HACER           reduce using rule 87 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)


state 211

    (107) ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for . HACER bloque n_endFor

    HACER           shift and go to state 214


state 212

    (98) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque . n_endIfQuad
    (99) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque . SINO p_n_sinoQuad bloque n_endIfQuad
    (101) n_endIfQuad -> .

    SINO            shift and go to state 216
    ID              reduce using rule 101 (n_endIfQuad -> .)
    LEE             reduce using rule 101 (n_endIfQuad -> .)
    ESCRIBE         reduce using rule 101 (n_endIfQuad -> .)
    SI              reduce using rule 101 (n_endIfQuad -> .)
    MIENTRAS        reduce using rule 101 (n_endIfQuad -> .)
    REGRESA         reduce using rule 101 (n_endIfQuad -> .)
    DESDE           reduce using rule 101 (n_endIfQuad -> .)
    RBRACKET        reduce using rule 101 (n_endIfQuad -> .)

    n_endIfQuad                    shift and go to state 215

state 213

    (103) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ . bloque n_endWhile
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 45

    bloque                         shift and go to state 217

state 214

    (107) ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER . bloque n_endFor
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 45

    bloque                         shift and go to state 218

state 215

    (98) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .

    ID              reduce using rule 98 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    LEE             reduce using rule 98 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    ESCRIBE         reduce using rule 98 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    SI              reduce using rule 98 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    MIENTRAS        reduce using rule 98 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    REGRESA         reduce using rule 98 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    DESDE           reduce using rule 98 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    RBRACKET        reduce using rule 98 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)


state 216

    (99) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO . p_n_sinoQuad bloque n_endIfQuad
    (102) p_n_sinoQuad -> .

    LBRACKET        reduce using rule 102 (p_n_sinoQuad -> .)

    p_n_sinoQuad                   shift and go to state 219

state 217

    (103) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque . n_endWhile
    (106) n_endWhile -> .

    ID              reduce using rule 106 (n_endWhile -> .)
    LEE             reduce using rule 106 (n_endWhile -> .)
    ESCRIBE         reduce using rule 106 (n_endWhile -> .)
    SI              reduce using rule 106 (n_endWhile -> .)
    MIENTRAS        reduce using rule 106 (n_endWhile -> .)
    REGRESA         reduce using rule 106 (n_endWhile -> .)
    DESDE           reduce using rule 106 (n_endWhile -> .)
    RBRACKET        reduce using rule 106 (n_endWhile -> .)

    n_endWhile                     shift and go to state 220

state 218

    (107) ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque . n_endFor
    (109) n_endFor -> .

    ID              reduce using rule 109 (n_endFor -> .)
    LEE             reduce using rule 109 (n_endFor -> .)
    ESCRIBE         reduce using rule 109 (n_endFor -> .)
    SI              reduce using rule 109 (n_endFor -> .)
    MIENTRAS        reduce using rule 109 (n_endFor -> .)
    REGRESA         reduce using rule 109 (n_endFor -> .)
    DESDE           reduce using rule 109 (n_endFor -> .)
    RBRACKET        reduce using rule 109 (n_endFor -> .)

    n_endFor                       shift and go to state 221

state 219

    (99) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad . bloque n_endIfQuad
    (39) bloque -> . LBRACKET mult_estatutos RBRACKET
    (40) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 45

    bloque                         shift and go to state 222

state 220

    (103) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .

    ID              reduce using rule 103 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    LEE             reduce using rule 103 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    ESCRIBE         reduce using rule 103 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    SI              reduce using rule 103 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    MIENTRAS        reduce using rule 103 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    REGRESA         reduce using rule 103 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    DESDE           reduce using rule 103 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    RBRACKET        reduce using rule 103 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)


state 221

    (107) ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .

    ID              reduce using rule 107 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    LEE             reduce using rule 107 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    ESCRIBE         reduce using rule 107 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    SI              reduce using rule 107 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    MIENTRAS        reduce using rule 107 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    REGRESA         reduce using rule 107 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    DESDE           reduce using rule 107 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    RBRACKET        reduce using rule 107 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)


state 222

    (99) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque . n_endIfQuad
    (101) n_endIfQuad -> .

    ID              reduce using rule 101 (n_endIfQuad -> .)
    LEE             reduce using rule 101 (n_endIfQuad -> .)
    ESCRIBE         reduce using rule 101 (n_endIfQuad -> .)
    SI              reduce using rule 101 (n_endIfQuad -> .)
    MIENTRAS        reduce using rule 101 (n_endIfQuad -> .)
    REGRESA         reduce using rule 101 (n_endIfQuad -> .)
    DESDE           reduce using rule 101 (n_endIfQuad -> .)
    RBRACKET        reduce using rule 101 (n_endIfQuad -> .)

    n_endIfQuad                    shift and go to state 223

state 223

    (99) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .

    ID              reduce using rule 99 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    LEE             reduce using rule 99 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    ESCRIBE         reduce using rule 99 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    SI              reduce using rule 99 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    MIENTRAS        reduce using rule 99 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    REGRESA         reduce using rule 99 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    DESDE           reduce using rule 99 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    RBRACKET        reduce using rule 99 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)

