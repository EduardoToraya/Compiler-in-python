Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON vars funcion principal
Rule 2     programa -> PROGRAMA ID SEMICOLON funcion principal
Rule 3     programa -> PROGRAMA ID SEMICOLON vars principal
Rule 4     programa -> PROGRAMA ID SEMICOLON principal
Rule 5     principal -> PRINCIPAL LPAREN RPAREN bloque
Rule 6     vars -> VAR vars_aux
Rule 7     vars_aux -> tipo_simple vars_aux1 SEMICOLON
Rule 8     vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux
Rule 9     vars_aux1 -> vars_aux2
Rule 10    vars_aux1 -> vars_aux2 COMMA vars_aux1
Rule 11    vars_aux2 -> ID n_save_var
Rule 12    vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE
Rule 13    n_save_array -> <empty>
Rule 14    n_save_var -> <empty>
Rule 15    tipo_simple -> INT n_save_type
Rule 16    tipo_simple -> FLOAT n_save_type
Rule 17    tipo_simple -> CHAR n_save_type
Rule 18    n_save_type -> <empty>
Rule 19    empty -> <empty>
Rule 20    variable -> ID LSQUARE exp RSQUARE
Rule 21    variable -> ID
Rule 22    funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
Rule 23    funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque
Rule 24    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
Rule 25    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
Rule 26    funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque
Rule 27    funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque
Rule 28    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
Rule 29    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque
Rule 30    n_register_func -> <empty>
Rule 31    param -> tipo_simple param_aux1
Rule 32    param -> tipo_simple param_aux1 param
Rule 33    param_aux1 -> ID save_param
Rule 34    param_aux1 -> ID save_param COMMA param
Rule 35    save_param -> <empty>
Rule 36    bloque -> LBRACKET mult_estatutos RBRACKET
Rule 37    bloque -> LBRACKET empty RBRACKET
Rule 38    mult_estatutos -> estatuto
Rule 39    mult_estatutos -> estatuto mult_estatutos
Rule 40    estatuto -> asigna
Rule 41    estatuto -> llamada
Rule 42    estatuto -> lee
Rule 43    estatuto -> escribe
Rule 44    estatuto -> condicion
Rule 45    estatuto -> ciclo_w
Rule 46    estatuto -> retorno
Rule 47    estatuto -> ciclo_f
Rule 48    asigna -> variable EQUAL exp SEMICOLON
Rule 49    llamada -> ID LPAREN mult_exp RPAREN
Rule 50    mult_exp -> exp
Rule 51    mult_exp -> exp COMMA mult_exp
Rule 52    mult_exp -> empty
Rule 53    lee -> LEE LPAREN variable RPAREN
Rule 54    escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON
Rule 55    escribe -> LPAREN mult_cte_s RPAREN SEMICOLON
Rule 56    mult_cte_s -> CTE_S
Rule 57    mult_cte_s -> CTE_S COMMA mult_cte_s
Rule 58    mult_cte_s -> empty
Rule 59    exp -> t_exp OR exp
Rule 60    exp -> t_exp
Rule 61    t_exp -> g_exp AND t_exp
Rule 62    t_exp -> g_exp
Rule 63    g_exp -> m_exp
Rule 64    g_exp -> LESSTHAN m_exp
Rule 65    g_exp -> LESSEQUAL m_exp
Rule 66    g_exp -> GREATERTHAN m_exp
Rule 67    g_exp -> GREATEREQUAL m_exp
Rule 68    g_exp -> SAME m_exp
Rule 69    g_exp -> NOEQUAL m_exp
Rule 70    m_exp -> t
Rule 71    m_exp -> t PLUS m_exp
Rule 72    m_exp -> t MINUS m_exp
Rule 73    t -> f
Rule 74    t -> f MULT t
Rule 75    t -> f DIV t
Rule 76    f -> LPAREN exp RPAREN
Rule 77    f -> CTE_I
Rule 78    f -> CTE_F
Rule 79    f -> CTE_C
Rule 80    f -> variable
Rule 81    f -> llamada
Rule 82    condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON
Rule 83    condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON
Rule 84    ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque
Rule 85    ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque
Rule 86    var_cte -> exp
Rule 87    var_cte -> CTE_I
Rule 88    var_cte -> CTE_F
Rule 89    retorno -> REGRESA exp SEMICOLON

Terminals, with rules where they appear

AND                  : 61
CHAR                 : 17
COMMA                : 10 34 51 57
COMMENT              : 
CTE_C                : 79
CTE_F                : 78 88
CTE_I                : 12 77 85 87
CTE_S                : 56 57
DESDE                : 85
DIV                  : 75
ENTONCES             : 82 83
EQUAL                : 48
ESCRIBE              : 54
FLOAT                : 16
FUNCION              : 22 23 24 25 26 27 28 29
GREATEREQUAL         : 67
GREATERTHAN          : 66
HACER                : 85
HASTA                : 85
HAZ                  : 84
ID                   : 1 2 3 4 11 12 20 21 22 23 24 25 26 27 28 29 33 34 49
INT                  : 15
LBRACKET             : 36 37
LEE                  : 53
LESSEQUAL            : 65
LESSTHAN             : 64
LPAREN               : 5 22 23 24 25 26 27 28 29 49 53 54 55 76 82 83 84
LSQUARE              : 12 20
MIENTRAS             : 84
MINUS                : 72
MULT                 : 74
NOEQUAL              : 69
OR                   : 59
PLUS                 : 71
PRINCIPAL            : 5
PROGRAMA             : 1 2 3 4
RBRACKET             : 36 37
REGRESA              : 89
RPAREN               : 5 22 23 24 25 26 27 28 29 49 53 54 55 76 82 83 84
RSQUARE              : 12 20
SAME                 : 68
SEMICOLON            : 1 2 3 4 7 8 48 54 55 82 83 89
SI                   : 82 83
SINO                 : 82
VAR                  : 6
VOID                 : 24 25 28 29
error                : 

Nonterminals, with rules where they appear

asigna               : 40 85
bloque               : 5 22 23 24 25 26 27 28 29 82 82 83 84 85
ciclo_f              : 47
ciclo_w              : 45
condicion            : 44
empty                : 37 52 58
escribe              : 43
estatuto             : 38 39
exp                  : 20 48 50 51 59 76 82 83 84 86 89
f                    : 73 74 75
funcion              : 1 2
g_exp                : 61 62
lee                  : 42
llamada              : 41 81
m_exp                : 63 64 65 66 67 68 69 71 72
mult_cte_s           : 55 57
mult_estatutos       : 36 39
mult_exp             : 49 51 54
n_register_func      : 22 23 24 25 26 27 28 29
n_save_array         : 12
n_save_type          : 15 16 17 24 25 28 29
n_save_var           : 11
param                : 22 23 24 25 32 34
param_aux1           : 31 32
principal            : 1 2 3 4
programa             : 0
retorno              : 46
save_param           : 33 34
t                    : 70 71 72 74 75
t_exp                : 59 60 61
tipo_simple          : 7 8 22 23 26 27 31 32
var_cte              : 
variable             : 48 53 80
vars                 : 1 3 22 24 26 28
vars_aux             : 6 8
vars_aux1            : 7 8 10
vars_aux2            : 9 10

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON vars funcion principal
    (2) programa -> . PROGRAMA ID SEMICOLON funcion principal
    (3) programa -> . PROGRAMA ID SEMICOLON vars principal
    (4) programa -> . PROGRAMA ID SEMICOLON principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON vars funcion principal
    (2) programa -> PROGRAMA . ID SEMICOLON funcion principal
    (3) programa -> PROGRAMA . ID SEMICOLON vars principal
    (4) programa -> PROGRAMA . ID SEMICOLON principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON vars funcion principal
    (2) programa -> PROGRAMA ID . SEMICOLON funcion principal
    (3) programa -> PROGRAMA ID . SEMICOLON vars principal
    (4) programa -> PROGRAMA ID . SEMICOLON principal

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . vars funcion principal
    (2) programa -> PROGRAMA ID SEMICOLON . funcion principal
    (3) programa -> PROGRAMA ID SEMICOLON . vars principal
    (4) programa -> PROGRAMA ID SEMICOLON . principal
    (6) vars -> . VAR vars_aux
    (22) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
    (23) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque
    (24) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (25) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
    (26) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque
    (27) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque
    (28) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (29) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    VAR             shift and go to state 8
    FUNCION         shift and go to state 9
    PRINCIPAL       shift and go to state 10

    vars                           shift and go to state 5
    funcion                        shift and go to state 6
    principal                      shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMICOLON vars . funcion principal
    (3) programa -> PROGRAMA ID SEMICOLON vars . principal
    (22) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
    (23) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque
    (24) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (25) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
    (26) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque
    (27) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque
    (28) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (29) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    FUNCION         shift and go to state 9
    PRINCIPAL       shift and go to state 10

    funcion                        shift and go to state 11
    principal                      shift and go to state 12

state 6

    (2) programa -> PROGRAMA ID SEMICOLON funcion . principal
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 10

    principal                      shift and go to state 13

state 7

    (4) programa -> PROGRAMA ID SEMICOLON principal .

    $end            reduce using rule 4 (programa -> PROGRAMA ID SEMICOLON principal .)


state 8

    (6) vars -> VAR . vars_aux
    (7) vars_aux -> . tipo_simple vars_aux1 SEMICOLON
    (8) vars_aux -> . tipo_simple vars_aux1 SEMICOLON vars_aux
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    vars_aux                       shift and go to state 14
    tipo_simple                    shift and go to state 15

state 9

    (22) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
    (23) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN param RPAREN bloque
    (24) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (25) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
    (26) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN RPAREN vars bloque
    (27) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN RPAREN bloque
    (28) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (29) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN RPAREN bloque
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    VOID            shift and go to state 20
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo_simple                    shift and go to state 19

state 10

    (5) principal -> PRINCIPAL . LPAREN RPAREN bloque

    LPAREN          shift and go to state 21


state 11

    (1) programa -> PROGRAMA ID SEMICOLON vars funcion . principal
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 10

    principal                      shift and go to state 22

state 12

    (3) programa -> PROGRAMA ID SEMICOLON vars principal .

    $end            reduce using rule 3 (programa -> PROGRAMA ID SEMICOLON vars principal .)


state 13

    (2) programa -> PROGRAMA ID SEMICOLON funcion principal .

    $end            reduce using rule 2 (programa -> PROGRAMA ID SEMICOLON funcion principal .)


state 14

    (6) vars -> VAR vars_aux .

    FUNCION         reduce using rule 6 (vars -> VAR vars_aux .)
    PRINCIPAL       reduce using rule 6 (vars -> VAR vars_aux .)
    LBRACKET        reduce using rule 6 (vars -> VAR vars_aux .)


state 15

    (7) vars_aux -> tipo_simple . vars_aux1 SEMICOLON
    (8) vars_aux -> tipo_simple . vars_aux1 SEMICOLON vars_aux
    (9) vars_aux1 -> . vars_aux2
    (10) vars_aux1 -> . vars_aux2 COMMA vars_aux1
    (11) vars_aux2 -> . ID n_save_var
    (12) vars_aux2 -> . ID LSQUARE CTE_I n_save_array RSQUARE

    ID              shift and go to state 25

    vars_aux1                      shift and go to state 23
    vars_aux2                      shift and go to state 24

state 16

    (15) tipo_simple -> INT . n_save_type
    (18) n_save_type -> .

    ID              reduce using rule 18 (n_save_type -> .)

    n_save_type                    shift and go to state 26

state 17

    (16) tipo_simple -> FLOAT . n_save_type
    (18) n_save_type -> .

    ID              reduce using rule 18 (n_save_type -> .)

    n_save_type                    shift and go to state 27

state 18

    (17) tipo_simple -> CHAR . n_save_type
    (18) n_save_type -> .

    ID              reduce using rule 18 (n_save_type -> .)

    n_save_type                    shift and go to state 28

state 19

    (22) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN param RPAREN vars bloque
    (23) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN param RPAREN bloque
    (26) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN RPAREN vars bloque
    (27) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN RPAREN bloque

    ID              shift and go to state 29


state 20

    (24) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (25) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN param RPAREN bloque
    (28) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (29) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN RPAREN bloque
    (18) n_save_type -> .

    ID              reduce using rule 18 (n_save_type -> .)

    n_save_type                    shift and go to state 30

state 21

    (5) principal -> PRINCIPAL LPAREN . RPAREN bloque

    RPAREN          shift and go to state 31


state 22

    (1) programa -> PROGRAMA ID SEMICOLON vars funcion principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON vars funcion principal .)


state 23

    (7) vars_aux -> tipo_simple vars_aux1 . SEMICOLON
    (8) vars_aux -> tipo_simple vars_aux1 . SEMICOLON vars_aux

    SEMICOLON       shift and go to state 32


state 24

    (9) vars_aux1 -> vars_aux2 .
    (10) vars_aux1 -> vars_aux2 . COMMA vars_aux1

    SEMICOLON       reduce using rule 9 (vars_aux1 -> vars_aux2 .)
    COMMA           shift and go to state 33


state 25

    (11) vars_aux2 -> ID . n_save_var
    (12) vars_aux2 -> ID . LSQUARE CTE_I n_save_array RSQUARE
    (14) n_save_var -> .

    LSQUARE         shift and go to state 35
    COMMA           reduce using rule 14 (n_save_var -> .)
    SEMICOLON       reduce using rule 14 (n_save_var -> .)

    n_save_var                     shift and go to state 34

state 26

    (15) tipo_simple -> INT n_save_type .

    ID              reduce using rule 15 (tipo_simple -> INT n_save_type .)


state 27

    (16) tipo_simple -> FLOAT n_save_type .

    ID              reduce using rule 16 (tipo_simple -> FLOAT n_save_type .)


state 28

    (17) tipo_simple -> CHAR n_save_type .

    ID              reduce using rule 17 (tipo_simple -> CHAR n_save_type .)


state 29

    (22) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN param RPAREN vars bloque
    (23) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN param RPAREN bloque
    (26) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN RPAREN vars bloque
    (27) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN RPAREN bloque
    (30) n_register_func -> .

    LPAREN          reduce using rule 30 (n_register_func -> .)

    n_register_func                shift and go to state 36

state 30

    (24) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN param RPAREN vars bloque
    (25) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN param RPAREN bloque
    (28) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN RPAREN vars bloque
    (29) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN RPAREN bloque

    ID              shift and go to state 37


state 31

    (5) principal -> PRINCIPAL LPAREN RPAREN . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 38

state 32

    (7) vars_aux -> tipo_simple vars_aux1 SEMICOLON .
    (8) vars_aux -> tipo_simple vars_aux1 SEMICOLON . vars_aux
    (7) vars_aux -> . tipo_simple vars_aux1 SEMICOLON
    (8) vars_aux -> . tipo_simple vars_aux1 SEMICOLON vars_aux
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    FUNCION         reduce using rule 7 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    PRINCIPAL       reduce using rule 7 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    LBRACKET        reduce using rule 7 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo_simple                    shift and go to state 15
    vars_aux                       shift and go to state 40

state 33

    (10) vars_aux1 -> vars_aux2 COMMA . vars_aux1
    (9) vars_aux1 -> . vars_aux2
    (10) vars_aux1 -> . vars_aux2 COMMA vars_aux1
    (11) vars_aux2 -> . ID n_save_var
    (12) vars_aux2 -> . ID LSQUARE CTE_I n_save_array RSQUARE

    ID              shift and go to state 25

    vars_aux2                      shift and go to state 24
    vars_aux1                      shift and go to state 41

state 34

    (11) vars_aux2 -> ID n_save_var .

    COMMA           reduce using rule 11 (vars_aux2 -> ID n_save_var .)
    SEMICOLON       reduce using rule 11 (vars_aux2 -> ID n_save_var .)


state 35

    (12) vars_aux2 -> ID LSQUARE . CTE_I n_save_array RSQUARE

    CTE_I           shift and go to state 42


state 36

    (22) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN param RPAREN vars bloque
    (23) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN param RPAREN bloque
    (26) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN RPAREN vars bloque
    (27) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN RPAREN bloque

    LPAREN          shift and go to state 43


state 37

    (24) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN param RPAREN vars bloque
    (25) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN param RPAREN bloque
    (28) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN RPAREN vars bloque
    (29) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN RPAREN bloque
    (30) n_register_func -> .

    LPAREN          reduce using rule 30 (n_register_func -> .)

    n_register_func                shift and go to state 44

state 38

    (5) principal -> PRINCIPAL LPAREN RPAREN bloque .

    $end            reduce using rule 5 (principal -> PRINCIPAL LPAREN RPAREN bloque .)


state 39

    (36) bloque -> LBRACKET . mult_estatutos RBRACKET
    (37) bloque -> LBRACKET . empty RBRACKET
    (38) mult_estatutos -> . estatuto
    (39) mult_estatutos -> . estatuto mult_estatutos
    (19) empty -> .
    (40) estatuto -> . asigna
    (41) estatuto -> . llamada
    (42) estatuto -> . lee
    (43) estatuto -> . escribe
    (44) estatuto -> . condicion
    (45) estatuto -> . ciclo_w
    (46) estatuto -> . retorno
    (47) estatuto -> . ciclo_f
    (48) asigna -> . variable EQUAL exp SEMICOLON
    (49) llamada -> . ID LPAREN mult_exp RPAREN
    (53) lee -> . LEE LPAREN variable RPAREN
    (54) escribe -> . ESCRIBE LPAREN mult_exp RPAREN SEMICOLON
    (55) escribe -> . LPAREN mult_cte_s RPAREN SEMICOLON
    (82) condicion -> . SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON
    (83) condicion -> . SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON
    (84) ciclo_w -> . MIENTRAS LPAREN exp RPAREN HAZ bloque
    (89) retorno -> . REGRESA exp SEMICOLON
    (85) ciclo_f -> . DESDE asigna HASTA CTE_I HACER bloque
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID

    RBRACKET        reduce using rule 19 (empty -> .)
    ID              shift and go to state 57
    LEE             shift and go to state 59
    ESCRIBE         shift and go to state 60
    LPAREN          shift and go to state 58
    SI              shift and go to state 61
    MIENTRAS        shift and go to state 62
    REGRESA         shift and go to state 63
    DESDE           shift and go to state 64

    mult_estatutos                 shift and go to state 45
    empty                          shift and go to state 46
    estatuto                       shift and go to state 47
    asigna                         shift and go to state 48
    llamada                        shift and go to state 49
    lee                            shift and go to state 50
    escribe                        shift and go to state 51
    condicion                      shift and go to state 52
    ciclo_w                        shift and go to state 53
    retorno                        shift and go to state 54
    ciclo_f                        shift and go to state 55
    variable                       shift and go to state 56

state 40

    (8) vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .

    FUNCION         reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)
    PRINCIPAL       reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)
    LBRACKET        reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)


state 41

    (10) vars_aux1 -> vars_aux2 COMMA vars_aux1 .

    SEMICOLON       reduce using rule 10 (vars_aux1 -> vars_aux2 COMMA vars_aux1 .)


state 42

    (12) vars_aux2 -> ID LSQUARE CTE_I . n_save_array RSQUARE
    (13) n_save_array -> .

    RSQUARE         reduce using rule 13 (n_save_array -> .)

    n_save_array                   shift and go to state 65

state 43

    (22) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . param RPAREN vars bloque
    (23) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . param RPAREN bloque
    (26) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . RPAREN vars bloque
    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . RPAREN bloque
    (31) param -> . tipo_simple param_aux1
    (32) param -> . tipo_simple param_aux1 param
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    RPAREN          shift and go to state 68
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo_simple                    shift and go to state 66
    param                          shift and go to state 67

state 44

    (24) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN param RPAREN vars bloque
    (25) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN param RPAREN bloque
    (28) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN RPAREN vars bloque
    (29) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN RPAREN bloque

    LPAREN          shift and go to state 69


state 45

    (36) bloque -> LBRACKET mult_estatutos . RBRACKET

    RBRACKET        shift and go to state 70


state 46

    (37) bloque -> LBRACKET empty . RBRACKET

    RBRACKET        shift and go to state 71


state 47

    (38) mult_estatutos -> estatuto .
    (39) mult_estatutos -> estatuto . mult_estatutos
    (38) mult_estatutos -> . estatuto
    (39) mult_estatutos -> . estatuto mult_estatutos
    (40) estatuto -> . asigna
    (41) estatuto -> . llamada
    (42) estatuto -> . lee
    (43) estatuto -> . escribe
    (44) estatuto -> . condicion
    (45) estatuto -> . ciclo_w
    (46) estatuto -> . retorno
    (47) estatuto -> . ciclo_f
    (48) asigna -> . variable EQUAL exp SEMICOLON
    (49) llamada -> . ID LPAREN mult_exp RPAREN
    (53) lee -> . LEE LPAREN variable RPAREN
    (54) escribe -> . ESCRIBE LPAREN mult_exp RPAREN SEMICOLON
    (55) escribe -> . LPAREN mult_cte_s RPAREN SEMICOLON
    (82) condicion -> . SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON
    (83) condicion -> . SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON
    (84) ciclo_w -> . MIENTRAS LPAREN exp RPAREN HAZ bloque
    (89) retorno -> . REGRESA exp SEMICOLON
    (85) ciclo_f -> . DESDE asigna HASTA CTE_I HACER bloque
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID

    RBRACKET        reduce using rule 38 (mult_estatutos -> estatuto .)
    ID              shift and go to state 57
    LEE             shift and go to state 59
    ESCRIBE         shift and go to state 60
    LPAREN          shift and go to state 58
    SI              shift and go to state 61
    MIENTRAS        shift and go to state 62
    REGRESA         shift and go to state 63
    DESDE           shift and go to state 64

    estatuto                       shift and go to state 47
    mult_estatutos                 shift and go to state 72
    asigna                         shift and go to state 48
    llamada                        shift and go to state 49
    lee                            shift and go to state 50
    escribe                        shift and go to state 51
    condicion                      shift and go to state 52
    ciclo_w                        shift and go to state 53
    retorno                        shift and go to state 54
    ciclo_f                        shift and go to state 55
    variable                       shift and go to state 56

state 48

    (40) estatuto -> asigna .

    ID              reduce using rule 40 (estatuto -> asigna .)
    LEE             reduce using rule 40 (estatuto -> asigna .)
    ESCRIBE         reduce using rule 40 (estatuto -> asigna .)
    LPAREN          reduce using rule 40 (estatuto -> asigna .)
    SI              reduce using rule 40 (estatuto -> asigna .)
    MIENTRAS        reduce using rule 40 (estatuto -> asigna .)
    REGRESA         reduce using rule 40 (estatuto -> asigna .)
    DESDE           reduce using rule 40 (estatuto -> asigna .)
    RBRACKET        reduce using rule 40 (estatuto -> asigna .)


state 49

    (41) estatuto -> llamada .

    ID              reduce using rule 41 (estatuto -> llamada .)
    LEE             reduce using rule 41 (estatuto -> llamada .)
    ESCRIBE         reduce using rule 41 (estatuto -> llamada .)
    LPAREN          reduce using rule 41 (estatuto -> llamada .)
    SI              reduce using rule 41 (estatuto -> llamada .)
    MIENTRAS        reduce using rule 41 (estatuto -> llamada .)
    REGRESA         reduce using rule 41 (estatuto -> llamada .)
    DESDE           reduce using rule 41 (estatuto -> llamada .)
    RBRACKET        reduce using rule 41 (estatuto -> llamada .)


state 50

    (42) estatuto -> lee .

    ID              reduce using rule 42 (estatuto -> lee .)
    LEE             reduce using rule 42 (estatuto -> lee .)
    ESCRIBE         reduce using rule 42 (estatuto -> lee .)
    LPAREN          reduce using rule 42 (estatuto -> lee .)
    SI              reduce using rule 42 (estatuto -> lee .)
    MIENTRAS        reduce using rule 42 (estatuto -> lee .)
    REGRESA         reduce using rule 42 (estatuto -> lee .)
    DESDE           reduce using rule 42 (estatuto -> lee .)
    RBRACKET        reduce using rule 42 (estatuto -> lee .)


state 51

    (43) estatuto -> escribe .

    ID              reduce using rule 43 (estatuto -> escribe .)
    LEE             reduce using rule 43 (estatuto -> escribe .)
    ESCRIBE         reduce using rule 43 (estatuto -> escribe .)
    LPAREN          reduce using rule 43 (estatuto -> escribe .)
    SI              reduce using rule 43 (estatuto -> escribe .)
    MIENTRAS        reduce using rule 43 (estatuto -> escribe .)
    REGRESA         reduce using rule 43 (estatuto -> escribe .)
    DESDE           reduce using rule 43 (estatuto -> escribe .)
    RBRACKET        reduce using rule 43 (estatuto -> escribe .)


state 52

    (44) estatuto -> condicion .

    ID              reduce using rule 44 (estatuto -> condicion .)
    LEE             reduce using rule 44 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 44 (estatuto -> condicion .)
    LPAREN          reduce using rule 44 (estatuto -> condicion .)
    SI              reduce using rule 44 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 44 (estatuto -> condicion .)
    REGRESA         reduce using rule 44 (estatuto -> condicion .)
    DESDE           reduce using rule 44 (estatuto -> condicion .)
    RBRACKET        reduce using rule 44 (estatuto -> condicion .)


state 53

    (45) estatuto -> ciclo_w .

    ID              reduce using rule 45 (estatuto -> ciclo_w .)
    LEE             reduce using rule 45 (estatuto -> ciclo_w .)
    ESCRIBE         reduce using rule 45 (estatuto -> ciclo_w .)
    LPAREN          reduce using rule 45 (estatuto -> ciclo_w .)
    SI              reduce using rule 45 (estatuto -> ciclo_w .)
    MIENTRAS        reduce using rule 45 (estatuto -> ciclo_w .)
    REGRESA         reduce using rule 45 (estatuto -> ciclo_w .)
    DESDE           reduce using rule 45 (estatuto -> ciclo_w .)
    RBRACKET        reduce using rule 45 (estatuto -> ciclo_w .)


state 54

    (46) estatuto -> retorno .

    ID              reduce using rule 46 (estatuto -> retorno .)
    LEE             reduce using rule 46 (estatuto -> retorno .)
    ESCRIBE         reduce using rule 46 (estatuto -> retorno .)
    LPAREN          reduce using rule 46 (estatuto -> retorno .)
    SI              reduce using rule 46 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 46 (estatuto -> retorno .)
    REGRESA         reduce using rule 46 (estatuto -> retorno .)
    DESDE           reduce using rule 46 (estatuto -> retorno .)
    RBRACKET        reduce using rule 46 (estatuto -> retorno .)


state 55

    (47) estatuto -> ciclo_f .

    ID              reduce using rule 47 (estatuto -> ciclo_f .)
    LEE             reduce using rule 47 (estatuto -> ciclo_f .)
    ESCRIBE         reduce using rule 47 (estatuto -> ciclo_f .)
    LPAREN          reduce using rule 47 (estatuto -> ciclo_f .)
    SI              reduce using rule 47 (estatuto -> ciclo_f .)
    MIENTRAS        reduce using rule 47 (estatuto -> ciclo_f .)
    REGRESA         reduce using rule 47 (estatuto -> ciclo_f .)
    DESDE           reduce using rule 47 (estatuto -> ciclo_f .)
    RBRACKET        reduce using rule 47 (estatuto -> ciclo_f .)


state 56

    (48) asigna -> variable . EQUAL exp SEMICOLON

    EQUAL           shift and go to state 73


state 57

    (49) llamada -> ID . LPAREN mult_exp RPAREN
    (20) variable -> ID . LSQUARE exp RSQUARE
    (21) variable -> ID .

    LPAREN          shift and go to state 74
    LSQUARE         shift and go to state 75
    EQUAL           reduce using rule 21 (variable -> ID .)


state 58

    (55) escribe -> LPAREN . mult_cte_s RPAREN SEMICOLON
    (56) mult_cte_s -> . CTE_S
    (57) mult_cte_s -> . CTE_S COMMA mult_cte_s
    (58) mult_cte_s -> . empty
    (19) empty -> .

    CTE_S           shift and go to state 77
    RPAREN          reduce using rule 19 (empty -> .)

    mult_cte_s                     shift and go to state 76
    empty                          shift and go to state 78

state 59

    (53) lee -> LEE . LPAREN variable RPAREN

    LPAREN          shift and go to state 79


state 60

    (54) escribe -> ESCRIBE . LPAREN mult_exp RPAREN SEMICOLON

    LPAREN          shift and go to state 80


state 61

    (82) condicion -> SI . LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON
    (83) condicion -> SI . LPAREN exp RPAREN ENTONCES bloque SEMICOLON

    LPAREN          shift and go to state 81


state 62

    (84) ciclo_w -> MIENTRAS . LPAREN exp RPAREN HAZ bloque

    LPAREN          shift and go to state 82


state 63

    (89) retorno -> REGRESA . exp SEMICOLON
    (59) exp -> . t_exp OR exp
    (60) exp -> . t_exp
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    exp                            shift and go to state 83
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 64

    (85) ciclo_f -> DESDE . asigna HASTA CTE_I HACER bloque
    (48) asigna -> . variable EQUAL exp SEMICOLON
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID

    ID              shift and go to state 103

    asigna                         shift and go to state 102
    variable                       shift and go to state 56

state 65

    (12) vars_aux2 -> ID LSQUARE CTE_I n_save_array . RSQUARE

    RSQUARE         shift and go to state 104


state 66

    (31) param -> tipo_simple . param_aux1
    (32) param -> tipo_simple . param_aux1 param
    (33) param_aux1 -> . ID save_param
    (34) param_aux1 -> . ID save_param COMMA param

    ID              shift and go to state 106

    param_aux1                     shift and go to state 105

state 67

    (22) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param . RPAREN vars bloque
    (23) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 107


state 68

    (26) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN . vars bloque
    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN . bloque
    (6) vars -> . VAR vars_aux
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 39

    vars                           shift and go to state 108
    bloque                         shift and go to state 109

state 69

    (24) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . param RPAREN vars bloque
    (25) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . param RPAREN bloque
    (28) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . RPAREN vars bloque
    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . RPAREN bloque
    (31) param -> . tipo_simple param_aux1
    (32) param -> . tipo_simple param_aux1 param
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    RPAREN          shift and go to state 111
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    param                          shift and go to state 110
    tipo_simple                    shift and go to state 66

state 70

    (36) bloque -> LBRACKET mult_estatutos RBRACKET .

    $end            reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    PRINCIPAL       reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SINO            reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SEMICOLON       reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    ID              reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    LEE             reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    ESCRIBE         reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    LPAREN          reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SI              reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    MIENTRAS        reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    REGRESA         reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    DESDE           reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    RBRACKET        reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)


state 71

    (37) bloque -> LBRACKET empty RBRACKET .

    $end            reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    PRINCIPAL       reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    SINO            reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    SEMICOLON       reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    ID              reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    LEE             reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    ESCRIBE         reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    LPAREN          reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    SI              reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    MIENTRAS        reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    REGRESA         reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    DESDE           reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    RBRACKET        reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)


state 72

    (39) mult_estatutos -> estatuto mult_estatutos .

    RBRACKET        reduce using rule 39 (mult_estatutos -> estatuto mult_estatutos .)


state 73

    (48) asigna -> variable EQUAL . exp SEMICOLON
    (59) exp -> . t_exp OR exp
    (60) exp -> . t_exp
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    variable                       shift and go to state 99
    exp                            shift and go to state 112
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    llamada                        shift and go to state 100

state 74

    (49) llamada -> ID LPAREN . mult_exp RPAREN
    (50) mult_exp -> . exp
    (51) mult_exp -> . exp COMMA mult_exp
    (52) mult_exp -> . empty
    (59) exp -> . t_exp OR exp
    (60) exp -> . t_exp
    (19) empty -> .
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    RPAREN          reduce using rule 19 (empty -> .)
    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    mult_exp                       shift and go to state 113
    exp                            shift and go to state 114
    empty                          shift and go to state 115
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 75

    (20) variable -> ID LSQUARE . exp RSQUARE
    (59) exp -> . t_exp OR exp
    (60) exp -> . t_exp
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    exp                            shift and go to state 116
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 76

    (55) escribe -> LPAREN mult_cte_s . RPAREN SEMICOLON

    RPAREN          shift and go to state 117


state 77

    (56) mult_cte_s -> CTE_S .
    (57) mult_cte_s -> CTE_S . COMMA mult_cte_s

    RPAREN          reduce using rule 56 (mult_cte_s -> CTE_S .)
    COMMA           shift and go to state 118


state 78

    (58) mult_cte_s -> empty .

    RPAREN          reduce using rule 58 (mult_cte_s -> empty .)


state 79

    (53) lee -> LEE LPAREN . variable RPAREN
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID

    ID              shift and go to state 103

    variable                       shift and go to state 119

state 80

    (54) escribe -> ESCRIBE LPAREN . mult_exp RPAREN SEMICOLON
    (50) mult_exp -> . exp
    (51) mult_exp -> . exp COMMA mult_exp
    (52) mult_exp -> . empty
    (59) exp -> . t_exp OR exp
    (60) exp -> . t_exp
    (19) empty -> .
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    RPAREN          reduce using rule 19 (empty -> .)
    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    mult_exp                       shift and go to state 120
    exp                            shift and go to state 114
    empty                          shift and go to state 115
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 81

    (82) condicion -> SI LPAREN . exp RPAREN ENTONCES bloque SINO bloque SEMICOLON
    (83) condicion -> SI LPAREN . exp RPAREN ENTONCES bloque SEMICOLON
    (59) exp -> . t_exp OR exp
    (60) exp -> . t_exp
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    exp                            shift and go to state 121
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 82

    (84) ciclo_w -> MIENTRAS LPAREN . exp RPAREN HAZ bloque
    (59) exp -> . t_exp OR exp
    (60) exp -> . t_exp
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    exp                            shift and go to state 122
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 83

    (89) retorno -> REGRESA exp . SEMICOLON

    SEMICOLON       shift and go to state 123


state 84

    (59) exp -> t_exp . OR exp
    (60) exp -> t_exp .

    OR              shift and go to state 124
    SEMICOLON       reduce using rule 60 (exp -> t_exp .)
    COMMA           reduce using rule 60 (exp -> t_exp .)
    RPAREN          reduce using rule 60 (exp -> t_exp .)
    RSQUARE         reduce using rule 60 (exp -> t_exp .)


state 85

    (61) t_exp -> g_exp . AND t_exp
    (62) t_exp -> g_exp .

    AND             shift and go to state 125
    OR              reduce using rule 62 (t_exp -> g_exp .)
    SEMICOLON       reduce using rule 62 (t_exp -> g_exp .)
    COMMA           reduce using rule 62 (t_exp -> g_exp .)
    RPAREN          reduce using rule 62 (t_exp -> g_exp .)
    RSQUARE         reduce using rule 62 (t_exp -> g_exp .)


state 86

    (63) g_exp -> m_exp .

    AND             reduce using rule 63 (g_exp -> m_exp .)
    OR              reduce using rule 63 (g_exp -> m_exp .)
    SEMICOLON       reduce using rule 63 (g_exp -> m_exp .)
    COMMA           reduce using rule 63 (g_exp -> m_exp .)
    RPAREN          reduce using rule 63 (g_exp -> m_exp .)
    RSQUARE         reduce using rule 63 (g_exp -> m_exp .)


state 87

    (64) g_exp -> LESSTHAN . m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    m_exp                          shift and go to state 126
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 88

    (65) g_exp -> LESSEQUAL . m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    m_exp                          shift and go to state 127
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 89

    (66) g_exp -> GREATERTHAN . m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    m_exp                          shift and go to state 128
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 90

    (67) g_exp -> GREATEREQUAL . m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    m_exp                          shift and go to state 129
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 91

    (68) g_exp -> SAME . m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    m_exp                          shift and go to state 130
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 92

    (69) g_exp -> NOEQUAL . m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    m_exp                          shift and go to state 131
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 93

    (70) m_exp -> t .
    (71) m_exp -> t . PLUS m_exp
    (72) m_exp -> t . MINUS m_exp

    AND             reduce using rule 70 (m_exp -> t .)
    OR              reduce using rule 70 (m_exp -> t .)
    SEMICOLON       reduce using rule 70 (m_exp -> t .)
    COMMA           reduce using rule 70 (m_exp -> t .)
    RPAREN          reduce using rule 70 (m_exp -> t .)
    RSQUARE         reduce using rule 70 (m_exp -> t .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133


state 94

    (73) t -> f .
    (74) t -> f . MULT t
    (75) t -> f . DIV t

    PLUS            reduce using rule 73 (t -> f .)
    MINUS           reduce using rule 73 (t -> f .)
    AND             reduce using rule 73 (t -> f .)
    OR              reduce using rule 73 (t -> f .)
    SEMICOLON       reduce using rule 73 (t -> f .)
    COMMA           reduce using rule 73 (t -> f .)
    RPAREN          reduce using rule 73 (t -> f .)
    RSQUARE         reduce using rule 73 (t -> f .)
    MULT            shift and go to state 134
    DIV             shift and go to state 135


state 95

    (76) f -> LPAREN . exp RPAREN
    (59) exp -> . t_exp OR exp
    (60) exp -> . t_exp
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    exp                            shift and go to state 136
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 96

    (77) f -> CTE_I .

    MULT            reduce using rule 77 (f -> CTE_I .)
    DIV             reduce using rule 77 (f -> CTE_I .)
    PLUS            reduce using rule 77 (f -> CTE_I .)
    MINUS           reduce using rule 77 (f -> CTE_I .)
    AND             reduce using rule 77 (f -> CTE_I .)
    OR              reduce using rule 77 (f -> CTE_I .)
    SEMICOLON       reduce using rule 77 (f -> CTE_I .)
    COMMA           reduce using rule 77 (f -> CTE_I .)
    RPAREN          reduce using rule 77 (f -> CTE_I .)
    RSQUARE         reduce using rule 77 (f -> CTE_I .)


state 97

    (78) f -> CTE_F .

    MULT            reduce using rule 78 (f -> CTE_F .)
    DIV             reduce using rule 78 (f -> CTE_F .)
    PLUS            reduce using rule 78 (f -> CTE_F .)
    MINUS           reduce using rule 78 (f -> CTE_F .)
    AND             reduce using rule 78 (f -> CTE_F .)
    OR              reduce using rule 78 (f -> CTE_F .)
    SEMICOLON       reduce using rule 78 (f -> CTE_F .)
    COMMA           reduce using rule 78 (f -> CTE_F .)
    RPAREN          reduce using rule 78 (f -> CTE_F .)
    RSQUARE         reduce using rule 78 (f -> CTE_F .)


state 98

    (79) f -> CTE_C .

    MULT            reduce using rule 79 (f -> CTE_C .)
    DIV             reduce using rule 79 (f -> CTE_C .)
    PLUS            reduce using rule 79 (f -> CTE_C .)
    MINUS           reduce using rule 79 (f -> CTE_C .)
    AND             reduce using rule 79 (f -> CTE_C .)
    OR              reduce using rule 79 (f -> CTE_C .)
    SEMICOLON       reduce using rule 79 (f -> CTE_C .)
    COMMA           reduce using rule 79 (f -> CTE_C .)
    RPAREN          reduce using rule 79 (f -> CTE_C .)
    RSQUARE         reduce using rule 79 (f -> CTE_C .)


state 99

    (80) f -> variable .

    MULT            reduce using rule 80 (f -> variable .)
    DIV             reduce using rule 80 (f -> variable .)
    PLUS            reduce using rule 80 (f -> variable .)
    MINUS           reduce using rule 80 (f -> variable .)
    AND             reduce using rule 80 (f -> variable .)
    OR              reduce using rule 80 (f -> variable .)
    SEMICOLON       reduce using rule 80 (f -> variable .)
    COMMA           reduce using rule 80 (f -> variable .)
    RPAREN          reduce using rule 80 (f -> variable .)
    RSQUARE         reduce using rule 80 (f -> variable .)


state 100

    (81) f -> llamada .

    MULT            reduce using rule 81 (f -> llamada .)
    DIV             reduce using rule 81 (f -> llamada .)
    PLUS            reduce using rule 81 (f -> llamada .)
    MINUS           reduce using rule 81 (f -> llamada .)
    AND             reduce using rule 81 (f -> llamada .)
    OR              reduce using rule 81 (f -> llamada .)
    SEMICOLON       reduce using rule 81 (f -> llamada .)
    COMMA           reduce using rule 81 (f -> llamada .)
    RPAREN          reduce using rule 81 (f -> llamada .)
    RSQUARE         reduce using rule 81 (f -> llamada .)


state 101

    (20) variable -> ID . LSQUARE exp RSQUARE
    (21) variable -> ID .
    (49) llamada -> ID . LPAREN mult_exp RPAREN

    LSQUARE         shift and go to state 75
    MULT            reduce using rule 21 (variable -> ID .)
    DIV             reduce using rule 21 (variable -> ID .)
    PLUS            reduce using rule 21 (variable -> ID .)
    MINUS           reduce using rule 21 (variable -> ID .)
    AND             reduce using rule 21 (variable -> ID .)
    OR              reduce using rule 21 (variable -> ID .)
    SEMICOLON       reduce using rule 21 (variable -> ID .)
    COMMA           reduce using rule 21 (variable -> ID .)
    RPAREN          reduce using rule 21 (variable -> ID .)
    RSQUARE         reduce using rule 21 (variable -> ID .)
    LPAREN          shift and go to state 74


state 102

    (85) ciclo_f -> DESDE asigna . HASTA CTE_I HACER bloque

    HASTA           shift and go to state 137


state 103

    (20) variable -> ID . LSQUARE exp RSQUARE
    (21) variable -> ID .

    LSQUARE         shift and go to state 75
    EQUAL           reduce using rule 21 (variable -> ID .)
    RPAREN          reduce using rule 21 (variable -> ID .)


state 104

    (12) vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .

    COMMA           reduce using rule 12 (vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .)
    SEMICOLON       reduce using rule 12 (vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .)


state 105

    (31) param -> tipo_simple param_aux1 .
    (32) param -> tipo_simple param_aux1 . param
    (31) param -> . tipo_simple param_aux1
    (32) param -> . tipo_simple param_aux1 param
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    RPAREN          reduce using rule 31 (param -> tipo_simple param_aux1 .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

  ! INT             [ reduce using rule 31 (param -> tipo_simple param_aux1 .) ]
  ! FLOAT           [ reduce using rule 31 (param -> tipo_simple param_aux1 .) ]
  ! CHAR            [ reduce using rule 31 (param -> tipo_simple param_aux1 .) ]

    tipo_simple                    shift and go to state 66
    param                          shift and go to state 138

state 106

    (33) param_aux1 -> ID . save_param
    (34) param_aux1 -> ID . save_param COMMA param
    (35) save_param -> .

    COMMA           reduce using rule 35 (save_param -> .)
    INT             reduce using rule 35 (save_param -> .)
    FLOAT           reduce using rule 35 (save_param -> .)
    CHAR            reduce using rule 35 (save_param -> .)
    RPAREN          reduce using rule 35 (save_param -> .)

    save_param                     shift and go to state 139

state 107

    (22) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN . vars bloque
    (23) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN . bloque
    (6) vars -> . VAR vars_aux
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 39

    vars                           shift and go to state 140
    bloque                         shift and go to state 141

state 108

    (26) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 142

state 109

    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque .

    PRINCIPAL       reduce using rule 27 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque .)


state 110

    (24) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param . RPAREN vars bloque
    (25) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 143


state 111

    (28) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN . vars bloque
    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN . bloque
    (6) vars -> . VAR vars_aux
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 39

    vars                           shift and go to state 144
    bloque                         shift and go to state 145

state 112

    (48) asigna -> variable EQUAL exp . SEMICOLON

    SEMICOLON       shift and go to state 146


state 113

    (49) llamada -> ID LPAREN mult_exp . RPAREN

    RPAREN          shift and go to state 147


state 114

    (50) mult_exp -> exp .
    (51) mult_exp -> exp . COMMA mult_exp

    RPAREN          reduce using rule 50 (mult_exp -> exp .)
    COMMA           shift and go to state 148


state 115

    (52) mult_exp -> empty .

    RPAREN          reduce using rule 52 (mult_exp -> empty .)


state 116

    (20) variable -> ID LSQUARE exp . RSQUARE

    RSQUARE         shift and go to state 149


state 117

    (55) escribe -> LPAREN mult_cte_s RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 150


state 118

    (57) mult_cte_s -> CTE_S COMMA . mult_cte_s
    (56) mult_cte_s -> . CTE_S
    (57) mult_cte_s -> . CTE_S COMMA mult_cte_s
    (58) mult_cte_s -> . empty
    (19) empty -> .

    CTE_S           shift and go to state 77
    RPAREN          reduce using rule 19 (empty -> .)

    mult_cte_s                     shift and go to state 151
    empty                          shift and go to state 78

state 119

    (53) lee -> LEE LPAREN variable . RPAREN

    RPAREN          shift and go to state 152


state 120

    (54) escribe -> ESCRIBE LPAREN mult_exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 153


state 121

    (82) condicion -> SI LPAREN exp . RPAREN ENTONCES bloque SINO bloque SEMICOLON
    (83) condicion -> SI LPAREN exp . RPAREN ENTONCES bloque SEMICOLON

    RPAREN          shift and go to state 154


state 122

    (84) ciclo_w -> MIENTRAS LPAREN exp . RPAREN HAZ bloque

    RPAREN          shift and go to state 155


state 123

    (89) retorno -> REGRESA exp SEMICOLON .

    ID              reduce using rule 89 (retorno -> REGRESA exp SEMICOLON .)
    LEE             reduce using rule 89 (retorno -> REGRESA exp SEMICOLON .)
    ESCRIBE         reduce using rule 89 (retorno -> REGRESA exp SEMICOLON .)
    LPAREN          reduce using rule 89 (retorno -> REGRESA exp SEMICOLON .)
    SI              reduce using rule 89 (retorno -> REGRESA exp SEMICOLON .)
    MIENTRAS        reduce using rule 89 (retorno -> REGRESA exp SEMICOLON .)
    REGRESA         reduce using rule 89 (retorno -> REGRESA exp SEMICOLON .)
    DESDE           reduce using rule 89 (retorno -> REGRESA exp SEMICOLON .)
    RBRACKET        reduce using rule 89 (retorno -> REGRESA exp SEMICOLON .)


state 124

    (59) exp -> t_exp OR . exp
    (59) exp -> . t_exp OR exp
    (60) exp -> . t_exp
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    t_exp                          shift and go to state 84
    exp                            shift and go to state 156
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 125

    (61) t_exp -> g_exp AND . t_exp
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    g_exp                          shift and go to state 85
    t_exp                          shift and go to state 157
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 126

    (64) g_exp -> LESSTHAN m_exp .

    AND             reduce using rule 64 (g_exp -> LESSTHAN m_exp .)
    OR              reduce using rule 64 (g_exp -> LESSTHAN m_exp .)
    SEMICOLON       reduce using rule 64 (g_exp -> LESSTHAN m_exp .)
    COMMA           reduce using rule 64 (g_exp -> LESSTHAN m_exp .)
    RPAREN          reduce using rule 64 (g_exp -> LESSTHAN m_exp .)
    RSQUARE         reduce using rule 64 (g_exp -> LESSTHAN m_exp .)


state 127

    (65) g_exp -> LESSEQUAL m_exp .

    AND             reduce using rule 65 (g_exp -> LESSEQUAL m_exp .)
    OR              reduce using rule 65 (g_exp -> LESSEQUAL m_exp .)
    SEMICOLON       reduce using rule 65 (g_exp -> LESSEQUAL m_exp .)
    COMMA           reduce using rule 65 (g_exp -> LESSEQUAL m_exp .)
    RPAREN          reduce using rule 65 (g_exp -> LESSEQUAL m_exp .)
    RSQUARE         reduce using rule 65 (g_exp -> LESSEQUAL m_exp .)


state 128

    (66) g_exp -> GREATERTHAN m_exp .

    AND             reduce using rule 66 (g_exp -> GREATERTHAN m_exp .)
    OR              reduce using rule 66 (g_exp -> GREATERTHAN m_exp .)
    SEMICOLON       reduce using rule 66 (g_exp -> GREATERTHAN m_exp .)
    COMMA           reduce using rule 66 (g_exp -> GREATERTHAN m_exp .)
    RPAREN          reduce using rule 66 (g_exp -> GREATERTHAN m_exp .)
    RSQUARE         reduce using rule 66 (g_exp -> GREATERTHAN m_exp .)


state 129

    (67) g_exp -> GREATEREQUAL m_exp .

    AND             reduce using rule 67 (g_exp -> GREATEREQUAL m_exp .)
    OR              reduce using rule 67 (g_exp -> GREATEREQUAL m_exp .)
    SEMICOLON       reduce using rule 67 (g_exp -> GREATEREQUAL m_exp .)
    COMMA           reduce using rule 67 (g_exp -> GREATEREQUAL m_exp .)
    RPAREN          reduce using rule 67 (g_exp -> GREATEREQUAL m_exp .)
    RSQUARE         reduce using rule 67 (g_exp -> GREATEREQUAL m_exp .)


state 130

    (68) g_exp -> SAME m_exp .

    AND             reduce using rule 68 (g_exp -> SAME m_exp .)
    OR              reduce using rule 68 (g_exp -> SAME m_exp .)
    SEMICOLON       reduce using rule 68 (g_exp -> SAME m_exp .)
    COMMA           reduce using rule 68 (g_exp -> SAME m_exp .)
    RPAREN          reduce using rule 68 (g_exp -> SAME m_exp .)
    RSQUARE         reduce using rule 68 (g_exp -> SAME m_exp .)


state 131

    (69) g_exp -> NOEQUAL m_exp .

    AND             reduce using rule 69 (g_exp -> NOEQUAL m_exp .)
    OR              reduce using rule 69 (g_exp -> NOEQUAL m_exp .)
    SEMICOLON       reduce using rule 69 (g_exp -> NOEQUAL m_exp .)
    COMMA           reduce using rule 69 (g_exp -> NOEQUAL m_exp .)
    RPAREN          reduce using rule 69 (g_exp -> NOEQUAL m_exp .)
    RSQUARE         reduce using rule 69 (g_exp -> NOEQUAL m_exp .)


state 132

    (71) m_exp -> t PLUS . m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    t                              shift and go to state 93
    m_exp                          shift and go to state 158
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 133

    (72) m_exp -> t MINUS . m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    t                              shift and go to state 93
    m_exp                          shift and go to state 159
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 134

    (74) t -> f MULT . t
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    f                              shift and go to state 94
    t                              shift and go to state 160
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 135

    (75) t -> f DIV . t
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    f                              shift and go to state 94
    t                              shift and go to state 161
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 136

    (76) f -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 162


state 137

    (85) ciclo_f -> DESDE asigna HASTA . CTE_I HACER bloque

    CTE_I           shift and go to state 163


state 138

    (32) param -> tipo_simple param_aux1 param .

    RPAREN          reduce using rule 32 (param -> tipo_simple param_aux1 param .)
    INT             reduce using rule 32 (param -> tipo_simple param_aux1 param .)
    FLOAT           reduce using rule 32 (param -> tipo_simple param_aux1 param .)
    CHAR            reduce using rule 32 (param -> tipo_simple param_aux1 param .)


state 139

    (33) param_aux1 -> ID save_param .
    (34) param_aux1 -> ID save_param . COMMA param

    INT             reduce using rule 33 (param_aux1 -> ID save_param .)
    FLOAT           reduce using rule 33 (param_aux1 -> ID save_param .)
    CHAR            reduce using rule 33 (param_aux1 -> ID save_param .)
    RPAREN          reduce using rule 33 (param_aux1 -> ID save_param .)
    COMMA           shift and go to state 164


state 140

    (22) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 165

state 141

    (23) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque .

    PRINCIPAL       reduce using rule 23 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque .)


state 142

    (26) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque .

    PRINCIPAL       reduce using rule 26 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque .)


state 143

    (24) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN . vars bloque
    (25) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN . bloque
    (6) vars -> . VAR vars_aux
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 39

    vars                           shift and go to state 166
    bloque                         shift and go to state 167

state 144

    (28) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 168

state 145

    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque .

    PRINCIPAL       reduce using rule 29 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque .)


state 146

    (48) asigna -> variable EQUAL exp SEMICOLON .

    ID              reduce using rule 48 (asigna -> variable EQUAL exp SEMICOLON .)
    LEE             reduce using rule 48 (asigna -> variable EQUAL exp SEMICOLON .)
    ESCRIBE         reduce using rule 48 (asigna -> variable EQUAL exp SEMICOLON .)
    LPAREN          reduce using rule 48 (asigna -> variable EQUAL exp SEMICOLON .)
    SI              reduce using rule 48 (asigna -> variable EQUAL exp SEMICOLON .)
    MIENTRAS        reduce using rule 48 (asigna -> variable EQUAL exp SEMICOLON .)
    REGRESA         reduce using rule 48 (asigna -> variable EQUAL exp SEMICOLON .)
    DESDE           reduce using rule 48 (asigna -> variable EQUAL exp SEMICOLON .)
    RBRACKET        reduce using rule 48 (asigna -> variable EQUAL exp SEMICOLON .)
    HASTA           reduce using rule 48 (asigna -> variable EQUAL exp SEMICOLON .)


state 147

    (49) llamada -> ID LPAREN mult_exp RPAREN .

    ID              reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    LEE             reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    ESCRIBE         reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    LPAREN          reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    SI              reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    MIENTRAS        reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    REGRESA         reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    DESDE           reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    RBRACKET        reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    MULT            reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    DIV             reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    PLUS            reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    MINUS           reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    AND             reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    OR              reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    SEMICOLON       reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    COMMA           reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    RPAREN          reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)
    RSQUARE         reduce using rule 49 (llamada -> ID LPAREN mult_exp RPAREN .)


state 148

    (51) mult_exp -> exp COMMA . mult_exp
    (50) mult_exp -> . exp
    (51) mult_exp -> . exp COMMA mult_exp
    (52) mult_exp -> . empty
    (59) exp -> . t_exp OR exp
    (60) exp -> . t_exp
    (19) empty -> .
    (61) t_exp -> . g_exp AND t_exp
    (62) t_exp -> . g_exp
    (63) g_exp -> . m_exp
    (64) g_exp -> . LESSTHAN m_exp
    (65) g_exp -> . LESSEQUAL m_exp
    (66) g_exp -> . GREATERTHAN m_exp
    (67) g_exp -> . GREATEREQUAL m_exp
    (68) g_exp -> . SAME m_exp
    (69) g_exp -> . NOEQUAL m_exp
    (70) m_exp -> . t
    (71) m_exp -> . t PLUS m_exp
    (72) m_exp -> . t MINUS m_exp
    (73) t -> . f
    (74) t -> . f MULT t
    (75) t -> . f DIV t
    (76) f -> . LPAREN exp RPAREN
    (77) f -> . CTE_I
    (78) f -> . CTE_F
    (79) f -> . CTE_C
    (80) f -> . variable
    (81) f -> . llamada
    (20) variable -> . ID LSQUARE exp RSQUARE
    (21) variable -> . ID
    (49) llamada -> . ID LPAREN mult_exp RPAREN

    RPAREN          reduce using rule 19 (empty -> .)
    LESSTHAN        shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATERTHAN     shift and go to state 89
    GREATEREQUAL    shift and go to state 90
    SAME            shift and go to state 91
    NOEQUAL         shift and go to state 92
    LPAREN          shift and go to state 95
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 97
    CTE_C           shift and go to state 98
    ID              shift and go to state 101

    exp                            shift and go to state 114
    mult_exp                       shift and go to state 169
    empty                          shift and go to state 115
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 93
    f                              shift and go to state 94
    variable                       shift and go to state 99
    llamada                        shift and go to state 100

state 149

    (20) variable -> ID LSQUARE exp RSQUARE .

    EQUAL           reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)
    MULT            reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)
    DIV             reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)
    PLUS            reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)
    MINUS           reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)
    AND             reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)
    OR              reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)
    SEMICOLON       reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)
    COMMA           reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)
    RPAREN          reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)
    RSQUARE         reduce using rule 20 (variable -> ID LSQUARE exp RSQUARE .)


state 150

    (55) escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .

    ID              reduce using rule 55 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    LEE             reduce using rule 55 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 55 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    LPAREN          reduce using rule 55 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    SI              reduce using rule 55 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 55 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    REGRESA         reduce using rule 55 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    DESDE           reduce using rule 55 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 55 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)


state 151

    (57) mult_cte_s -> CTE_S COMMA mult_cte_s .

    RPAREN          reduce using rule 57 (mult_cte_s -> CTE_S COMMA mult_cte_s .)


state 152

    (53) lee -> LEE LPAREN variable RPAREN .

    ID              reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    LEE             reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    ESCRIBE         reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    LPAREN          reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    SI              reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    MIENTRAS        reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    REGRESA         reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    DESDE           reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    RBRACKET        reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)


state 153

    (54) escribe -> ESCRIBE LPAREN mult_exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 170


state 154

    (82) condicion -> SI LPAREN exp RPAREN . ENTONCES bloque SINO bloque SEMICOLON
    (83) condicion -> SI LPAREN exp RPAREN . ENTONCES bloque SEMICOLON

    ENTONCES        shift and go to state 171


state 155

    (84) ciclo_w -> MIENTRAS LPAREN exp RPAREN . HAZ bloque

    HAZ             shift and go to state 172


state 156

    (59) exp -> t_exp OR exp .

    SEMICOLON       reduce using rule 59 (exp -> t_exp OR exp .)
    COMMA           reduce using rule 59 (exp -> t_exp OR exp .)
    RPAREN          reduce using rule 59 (exp -> t_exp OR exp .)
    RSQUARE         reduce using rule 59 (exp -> t_exp OR exp .)


state 157

    (61) t_exp -> g_exp AND t_exp .

    OR              reduce using rule 61 (t_exp -> g_exp AND t_exp .)
    SEMICOLON       reduce using rule 61 (t_exp -> g_exp AND t_exp .)
    COMMA           reduce using rule 61 (t_exp -> g_exp AND t_exp .)
    RPAREN          reduce using rule 61 (t_exp -> g_exp AND t_exp .)
    RSQUARE         reduce using rule 61 (t_exp -> g_exp AND t_exp .)


state 158

    (71) m_exp -> t PLUS m_exp .

    AND             reduce using rule 71 (m_exp -> t PLUS m_exp .)
    OR              reduce using rule 71 (m_exp -> t PLUS m_exp .)
    SEMICOLON       reduce using rule 71 (m_exp -> t PLUS m_exp .)
    COMMA           reduce using rule 71 (m_exp -> t PLUS m_exp .)
    RPAREN          reduce using rule 71 (m_exp -> t PLUS m_exp .)
    RSQUARE         reduce using rule 71 (m_exp -> t PLUS m_exp .)


state 159

    (72) m_exp -> t MINUS m_exp .

    AND             reduce using rule 72 (m_exp -> t MINUS m_exp .)
    OR              reduce using rule 72 (m_exp -> t MINUS m_exp .)
    SEMICOLON       reduce using rule 72 (m_exp -> t MINUS m_exp .)
    COMMA           reduce using rule 72 (m_exp -> t MINUS m_exp .)
    RPAREN          reduce using rule 72 (m_exp -> t MINUS m_exp .)
    RSQUARE         reduce using rule 72 (m_exp -> t MINUS m_exp .)


state 160

    (74) t -> f MULT t .

    PLUS            reduce using rule 74 (t -> f MULT t .)
    MINUS           reduce using rule 74 (t -> f MULT t .)
    AND             reduce using rule 74 (t -> f MULT t .)
    OR              reduce using rule 74 (t -> f MULT t .)
    SEMICOLON       reduce using rule 74 (t -> f MULT t .)
    COMMA           reduce using rule 74 (t -> f MULT t .)
    RPAREN          reduce using rule 74 (t -> f MULT t .)
    RSQUARE         reduce using rule 74 (t -> f MULT t .)


state 161

    (75) t -> f DIV t .

    PLUS            reduce using rule 75 (t -> f DIV t .)
    MINUS           reduce using rule 75 (t -> f DIV t .)
    AND             reduce using rule 75 (t -> f DIV t .)
    OR              reduce using rule 75 (t -> f DIV t .)
    SEMICOLON       reduce using rule 75 (t -> f DIV t .)
    COMMA           reduce using rule 75 (t -> f DIV t .)
    RPAREN          reduce using rule 75 (t -> f DIV t .)
    RSQUARE         reduce using rule 75 (t -> f DIV t .)


state 162

    (76) f -> LPAREN exp RPAREN .

    MULT            reduce using rule 76 (f -> LPAREN exp RPAREN .)
    DIV             reduce using rule 76 (f -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 76 (f -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 76 (f -> LPAREN exp RPAREN .)
    AND             reduce using rule 76 (f -> LPAREN exp RPAREN .)
    OR              reduce using rule 76 (f -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 76 (f -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 76 (f -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 76 (f -> LPAREN exp RPAREN .)
    RSQUARE         reduce using rule 76 (f -> LPAREN exp RPAREN .)


state 163

    (85) ciclo_f -> DESDE asigna HASTA CTE_I . HACER bloque

    HACER           shift and go to state 173


state 164

    (34) param_aux1 -> ID save_param COMMA . param
    (31) param -> . tipo_simple param_aux1
    (32) param -> . tipo_simple param_aux1 param
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    param                          shift and go to state 174
    tipo_simple                    shift and go to state 66

state 165

    (22) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque .

    PRINCIPAL       reduce using rule 22 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque .)


state 166

    (24) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 175

state 167

    (25) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque .

    PRINCIPAL       reduce using rule 25 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque .)


state 168

    (28) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque .

    PRINCIPAL       reduce using rule 28 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque .)


state 169

    (51) mult_exp -> exp COMMA mult_exp .

    RPAREN          reduce using rule 51 (mult_exp -> exp COMMA mult_exp .)


state 170

    (54) escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .

    ID              reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    LEE             reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    SI              reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    REGRESA         reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    DESDE           reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)


state 171

    (82) condicion -> SI LPAREN exp RPAREN ENTONCES . bloque SINO bloque SEMICOLON
    (83) condicion -> SI LPAREN exp RPAREN ENTONCES . bloque SEMICOLON
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 176

state 172

    (84) ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 177

state 173

    (85) ciclo_f -> DESDE asigna HASTA CTE_I HACER . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 178

state 174

    (34) param_aux1 -> ID save_param COMMA param .

    INT             reduce using rule 34 (param_aux1 -> ID save_param COMMA param .)
    FLOAT           reduce using rule 34 (param_aux1 -> ID save_param COMMA param .)
    CHAR            reduce using rule 34 (param_aux1 -> ID save_param COMMA param .)
    RPAREN          reduce using rule 34 (param_aux1 -> ID save_param COMMA param .)


state 175

    (24) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque .

    PRINCIPAL       reduce using rule 24 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque .)


state 176

    (82) condicion -> SI LPAREN exp RPAREN ENTONCES bloque . SINO bloque SEMICOLON
    (83) condicion -> SI LPAREN exp RPAREN ENTONCES bloque . SEMICOLON

    SINO            shift and go to state 179
    SEMICOLON       shift and go to state 180


state 177

    (84) ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .

    ID              reduce using rule 84 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    LEE             reduce using rule 84 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    ESCRIBE         reduce using rule 84 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    LPAREN          reduce using rule 84 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    SI              reduce using rule 84 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    MIENTRAS        reduce using rule 84 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    REGRESA         reduce using rule 84 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    DESDE           reduce using rule 84 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    RBRACKET        reduce using rule 84 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)


state 178

    (85) ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .

    ID              reduce using rule 85 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    LEE             reduce using rule 85 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    ESCRIBE         reduce using rule 85 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    LPAREN          reduce using rule 85 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    SI              reduce using rule 85 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    MIENTRAS        reduce using rule 85 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    REGRESA         reduce using rule 85 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    DESDE           reduce using rule 85 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    RBRACKET        reduce using rule 85 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)


state 179

    (82) condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO . bloque SEMICOLON
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 181

state 180

    (83) condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .

    ID              reduce using rule 83 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    LEE             reduce using rule 83 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    ESCRIBE         reduce using rule 83 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    LPAREN          reduce using rule 83 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    SI              reduce using rule 83 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    MIENTRAS        reduce using rule 83 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    REGRESA         reduce using rule 83 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    DESDE           reduce using rule 83 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    RBRACKET        reduce using rule 83 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)


state 181

    (82) condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque . SEMICOLON

    SEMICOLON       shift and go to state 182


state 182

    (82) condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .

    ID              reduce using rule 82 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    LEE             reduce using rule 82 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    ESCRIBE         reduce using rule 82 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    LPAREN          reduce using rule 82 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    SI              reduce using rule 82 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    MIENTRAS        reduce using rule 82 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    REGRESA         reduce using rule 82 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    DESDE           reduce using rule 82 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    RBRACKET        reduce using rule 82 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 105 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 105 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 105 resolved as shift
