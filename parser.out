Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars mult_funcion principal
Rule 2     programa -> PROGRAMA p_n_mainJump ID SEMICOLON mult_funcion principal
Rule 3     programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars principal
Rule 4     programa -> PROGRAMA p_n_mainJump ID SEMICOLON principal
Rule 5     p_n_mainJump -> <empty>
Rule 6     principal -> PRINCIPAL n_register_glob LPAREN RPAREN bloque
Rule 7     n_register_glob -> <empty>
Rule 8     vars -> VAR vars_aux
Rule 9     vars_aux -> tipo_simple vars_aux1 SEMICOLON
Rule 10    vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux
Rule 11    vars_aux1 -> vars_aux2
Rule 12    vars_aux1 -> vars_aux2 COMMA vars_aux1
Rule 13    vars_aux2 -> ID n_save_var
Rule 14    vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE
Rule 15    n_save_array -> <empty>
Rule 16    n_save_var -> <empty>
Rule 17    tipo_simple -> INT n_save_type
Rule 18    tipo_simple -> FLOAT n_save_type
Rule 19    tipo_simple -> CHAR n_save_type
Rule 20    n_save_type -> <empty>
Rule 21    variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
Rule 22    variable -> ID n_getVarVal
Rule 23    n_arr_quad -> <empty>
Rule 24    n_hasDim -> <empty>
Rule 25    n_getVarVal -> <empty>
Rule 26    mult_funcion -> funcion
Rule 27    mult_funcion -> funcion mult_funcion
Rule 28    funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
Rule 29    funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func
Rule 30    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
Rule 31    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func
Rule 32    funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func
Rule 33    funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func
Rule 34    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func
Rule 35    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func
Rule 36    n_register_func -> <empty>
Rule 37    param -> tipo_simple param_aux1
Rule 38    param_aux1 -> ID save_param
Rule 39    param_aux1 -> ID save_param COMMA param
Rule 40    save_param -> <empty>
Rule 41    n_endof_func -> <empty>
Rule 42    bloque -> LBRACKET mult_estatutos RBRACKET
Rule 43    bloque -> LBRACKET empty RBRACKET
Rule 44    mult_estatutos -> estatuto
Rule 45    mult_estatutos -> estatuto mult_estatutos
Rule 46    estatuto -> asigna SEMICOLON
Rule 47    estatuto -> llamada SEMICOLON
Rule 48    estatuto -> lee
Rule 49    estatuto -> escribe
Rule 50    estatuto -> condicion
Rule 51    estatuto -> ciclo_w
Rule 52    estatuto -> retorno
Rule 53    estatuto -> ciclo_f
Rule 54    asigna -> mult_asigna
Rule 55    mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad
Rule 56    mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad
Rule 57    n_asignQuad -> <empty>
Rule 58    param_exp -> mult_exp n_parameter_action
Rule 59    param_exp -> mult_exp n_parameter_action COMMA param_exp
Rule 60    n_parameter_action -> <empty>
Rule 61    llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
Rule 62    llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action
Rule 63    n_last_param_action -> <empty>
Rule 64    n_start_pcounter -> <empty>
Rule 65    n_verify_func -> <empty>
Rule 66    lee -> LEE LPAREN variable RPAREN SEMICOLON
Rule 67    escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
Rule 68    escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON
Rule 69    n_escribeExp -> <empty>
Rule 70    mult_cte_s -> CTE_S
Rule 71    mult_cte_s -> CTE_S COMMA mult_cte_s
Rule 72    mult_exp -> exp
Rule 73    mult_exp -> exp COMMA mult_exp
Rule 74    exp -> t_exp n_orQuad
Rule 75    exp -> t_exp n_orQuad OR n_Operador exp
Rule 76    n_orQuad -> <empty>
Rule 77    t_exp -> g_exp n_andQuad
Rule 78    t_exp -> g_exp n_andQuad AND n_Operador t_exp
Rule 79    n_andQuad -> <empty>
Rule 80    g_exp -> m_exp n_compareQuad
Rule 81    g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp
Rule 82    g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp
Rule 83    g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp
Rule 84    g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
Rule 85    g_exp -> m_exp n_compareQuad SAME n_Operador g_exp
Rule 86    g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp
Rule 87    n_compareQuad -> <empty>
Rule 88    m_exp -> t n_sumQuad
Rule 89    m_exp -> t n_sumQuad PLUS n_Operador m_exp
Rule 90    m_exp -> t n_sumQuad MINUS n_Operador m_exp
Rule 91    n_sumQuad -> <empty>
Rule 92    t -> f n_multQuad
Rule 93    t -> f n_multQuad MULT n_Operador t
Rule 94    t -> f n_multQuad DIV n_Operador t
Rule 95    n_multQuad -> <empty>
Rule 96    n_Operador -> <empty>
Rule 97    f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF
Rule 98    f -> n_tempTypeI MINUS CTE_I n_directPrint_neg
Rule 99    f -> n_tempTypeF MINUS CTE_F n_directPrint_neg
Rule 100   f -> n_tempTypeI CTE_I n_directPrint
Rule 101   f -> n_tempTypeF CTE_F n_directPrint
Rule 102   f -> n_tempTypeC CTE_C n_directPrint
Rule 103   f -> variable
Rule 104   f -> llamada
Rule 105   n_tempTypeI -> <empty>
Rule 106   n_tempTypeF -> <empty>
Rule 107   n_tempTypeC -> <empty>
Rule 108   n_directPrint_neg -> <empty>
Rule 109   n_directPrint -> <empty>
Rule 110   n_start_FF -> <empty>
Rule 111   n_end_FF -> <empty>
Rule 112   condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
Rule 113   condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
Rule 114   n_ifQuad -> <empty>
Rule 115   n_endIfQuad -> <empty>
Rule 116   p_n_sinoQuad -> <empty>
Rule 117   ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
Rule 118   n_startCicle -> <empty>
Rule 119   n_evalExp -> <empty>
Rule 120   n_endWhile -> <empty>
Rule 121   ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
Rule 122   n_evalExp_for -> <empty>
Rule 123   n_endFor -> <empty>
Rule 124   retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON
Rule 125   n_regresaExp -> <empty>

Terminals, with rules where they appear

AND                  : 78
CHAR                 : 19
COMMA                : 12 39 59 71 73
COMMENT              : 
CTE_C                : 102
CTE_F                : 99 101
CTE_I                : 14 98 100
CTE_S                : 70 71
DESDE                : 121
DIV                  : 94
ENTONCES             : 112 113
EQUAL                : 55 56
ESCRIBE              : 67 68
FLOAT                : 18
FUNCION              : 28 29 30 31 32 33 34 35
GREATEREQUAL         : 84
GREATERTHAN          : 83
HACER                : 121
HASTA                : 121
HAZ                  : 117
ID                   : 1 2 3 4 13 14 21 22 28 29 30 31 32 33 34 35 38 39 61 62
INT                  : 17
LBRACKET             : 42 43
LEE                  : 66
LESSEQUAL            : 82
LESSTHAN             : 81
LPAREN               : 6 28 29 30 31 32 33 34 35 61 62 66 67 68 97 112 113 117 124
LSQUARE              : 14 21
MIENTRAS             : 117
MINUS                : 90 98 99
MULT                 : 93
NOEQUAL              : 86
OR                   : 75
PLUS                 : 89
PRINCIPAL            : 6
PROGRAMA             : 1 2 3 4
RBRACKET             : 42 43
REGRESA              : 124
RPAREN               : 6 28 29 30 31 32 33 34 35 61 62 66 67 68 97 112 113 117 124
RSQUARE              : 14 21
SAME                 : 85
SEMICOLON            : 1 2 3 4 9 10 46 47 66 67 68 124
SI                   : 112 113
SINO                 : 113
VAR                  : 8
VOID                 : 30 31 34 35
error                : 

Nonterminals, with rules where they appear

asigna               : 46 121
bloque               : 6 28 29 30 31 32 33 34 35 112 113 113 117 121
ciclo_f              : 53
ciclo_w              : 51
condicion            : 50
empty                : 43
escribe              : 49
estatuto             : 44 45
exp                  : 72 73 75
f                    : 92 93 94
funcion              : 26 27
g_exp                : 77 78 81 82 83 84 85 86
lee                  : 48
llamada              : 47 104
m_exp                : 80 81 82 83 84 85 86 89 90
mult_asigna          : 54 56
mult_cte_s           : 68 71
mult_estatutos       : 42 45
mult_exp             : 21 55 58 59 67 73 97 112 113 117 121 124
mult_funcion         : 1 2 27
n_Operador           : 55 56 75 78 81 82 83 84 85 86 89 90 93 94
n_andQuad            : 77 78
n_arr_quad           : 21
n_asignQuad          : 55 56
n_compareQuad        : 80 81 82 83 84 85 86
n_directPrint        : 100 101 102
n_directPrint_neg    : 98 99
n_endFor             : 121
n_endIfQuad          : 112 113
n_endWhile           : 117
n_end_FF             : 21 61 62 97
n_endof_func         : 28 29 30 31 32 33 34 35
n_escribeExp         : 67 68
n_evalExp            : 117
n_evalExp_for        : 121
n_getVarVal          : 21 22
n_hasDim             : 21
n_ifQuad             : 112 113
n_last_param_action  : 61 62
n_multQuad           : 92 93 94
n_orQuad             : 74 75
n_parameter_action   : 58 59
n_register_func      : 28 29 30 31 32 33 34 35
n_register_glob      : 6
n_regresaExp         : 124
n_save_array         : 14
n_save_type          : 17 18 19 30 31 34 35
n_save_var           : 13
n_startCicle         : 117 121
n_start_FF           : 21 61 62 97
n_start_pcounter     : 61 62
n_sumQuad            : 88 89 90
n_tempTypeC          : 102
n_tempTypeF          : 99 101
n_tempTypeI          : 98 100
n_verify_func        : 61 62
p_n_mainJump         : 1 2 3 4
p_n_sinoQuad         : 113
param                : 28 29 30 31 39
param_aux1           : 37
param_exp            : 59 61
principal            : 1 2 3 4
programa             : 0
retorno              : 52
save_param           : 38 39
t                    : 88 89 90 93 94
t_exp                : 74 75 78
tipo_simple          : 9 10 28 29 32 33 37
variable             : 55 56 66 103
vars                 : 1 3 28 30 32 34
vars_aux             : 8 10
vars_aux1            : 9 10 12
vars_aux2            : 11 12

