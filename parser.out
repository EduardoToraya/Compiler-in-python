Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON vars funcion principal
Rule 2     programa -> PROGRAMA ID SEMICOLON funcion principal
Rule 3     programa -> PROGRAMA ID SEMICOLON vars principal
Rule 4     programa -> PROGRAMA ID SEMICOLON principal
Rule 5     principal -> PRINCIPAL LPAREN RPAREN bloque
Rule 6     vars -> VAR vars_aux
Rule 7     vars_aux -> tipo_simple vars_aux1 SEMICOLON
Rule 8     vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux
Rule 9     vars_aux1 -> vars_aux2
Rule 10    vars_aux1 -> vars_aux2 COMMA vars_aux1
Rule 11    vars_aux2 -> ID n_save_var
Rule 12    vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE
Rule 13    n_save_array -> <empty>
Rule 14    n_save_var -> <empty>
Rule 15    tipo_simple -> INT n_save_type
Rule 16    tipo_simple -> FLOAT n_save_type
Rule 17    tipo_simple -> CHAR n_save_type
Rule 18    n_save_type -> <empty>
Rule 19    empty -> <empty>
Rule 20    variable -> ID LSQUARE mult_exp RSQUARE
Rule 21    variable -> ID p_n_getVarVal
Rule 22    p_n_getVarVal -> <empty>
Rule 23    funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
Rule 24    funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque
Rule 25    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
Rule 26    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
Rule 27    funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque
Rule 28    funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque
Rule 29    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
Rule 30    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque
Rule 31    n_register_func -> <empty>
Rule 32    param -> tipo_simple param_aux1
Rule 33    param_aux1 -> ID save_param
Rule 34    param_aux1 -> ID save_param COMMA param
Rule 35    save_param -> <empty>
Rule 36    bloque -> LBRACKET mult_estatutos RBRACKET
Rule 37    bloque -> LBRACKET empty RBRACKET
Rule 38    mult_estatutos -> estatuto
Rule 39    mult_estatutos -> estatuto mult_estatutos
Rule 40    estatuto -> asigna SEMICOLON
Rule 41    estatuto -> llamada
Rule 42    estatuto -> lee
Rule 43    estatuto -> escribe
Rule 44    estatuto -> condicion
Rule 45    estatuto -> ciclo_w
Rule 46    estatuto -> retorno
Rule 47    estatuto -> ciclo_f
Rule 48    asigna -> mult_asigna
Rule 49    mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad
Rule 50    mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad
Rule 51    n_asignQuad -> <empty>
Rule 52    llamada -> ID LPAREN mult_exp RPAREN
Rule 53    lee -> LEE LPAREN variable RPAREN
Rule 54    escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
Rule 55    escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON
Rule 56    n_escribeExp -> <empty>
Rule 57    mult_cte_s -> CTE_S
Rule 58    mult_cte_s -> CTE_S COMMA mult_cte_s
Rule 59    mult_exp -> exp
Rule 60    mult_exp -> exp COMMA mult_exp
Rule 61    exp -> t_exp n_orQuad
Rule 62    exp -> t_exp n_orQuad OR n_Operador exp
Rule 63    n_orQuad -> <empty>
Rule 64    t_exp -> g_exp n_andQuad
Rule 65    t_exp -> g_exp n_andQuad AND n_Operador t_exp
Rule 66    n_andQuad -> <empty>
Rule 67    g_exp -> m_exp n_compareQuad
Rule 68    g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp
Rule 69    g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp
Rule 70    g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp
Rule 71    g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
Rule 72    g_exp -> m_exp n_compareQuad SAME n_Operador g_exp
Rule 73    g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp
Rule 74    n_compareQuad -> <empty>
Rule 75    m_exp -> t n_sumQuad
Rule 76    m_exp -> t n_sumQuad PLUS n_Operador m_exp
Rule 77    m_exp -> t n_sumQuad MINUS n_Operador m_exp
Rule 78    n_sumQuad -> <empty>
Rule 79    t -> f n_multQuad
Rule 80    t -> f n_multQuad MULT n_Operador t
Rule 81    t -> f n_multQuad DIV n_Operador t
Rule 82    n_multQuad -> <empty>
Rule 83    n_Operador -> <empty>
Rule 84    f -> LPAREN n_FF mult_exp RPAREN n_FF
Rule 85    f -> n_tempTypeI CTE_I n_directPrint
Rule 86    f -> n_tempTypeF CTE_F n_directPrint
Rule 87    f -> n_tempTypeC CTE_C n_directPrint
Rule 88    f -> variable
Rule 89    f -> llamada
Rule 90    n_tempTypeI -> <empty>
Rule 91    n_tempTypeF -> <empty>
Rule 92    n_tempTypeC -> <empty>
Rule 93    n_directPrint -> <empty>
Rule 94    n_FF -> <empty>
Rule 95    condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
Rule 96    condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
Rule 97    n_ifQuad -> <empty>
Rule 98    n_endIfQuad -> <empty>
Rule 99    p_n_sinoQuad -> <empty>
Rule 100   ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
Rule 101   n_startCicle -> <empty>
Rule 102   n_evalExp -> <empty>
Rule 103   n_endWhile -> <empty>
Rule 104   ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor
Rule 105   n_evalExp_for -> <empty>
Rule 106   n_endFor -> <empty>
Rule 107   retorno -> REGRESA mult_exp SEMICOLON

Terminals, with rules where they appear

AND                  : 65
CHAR                 : 17
COMMA                : 10 34 58 60
COMMENT              : 
CTE_C                : 87
CTE_F                : 86
CTE_I                : 12 85
CTE_S                : 57 58
DESDE                : 104
DIV                  : 81
ENTONCES             : 95 96
EQUAL                : 49 50
ESCRIBE              : 54 55
FLOAT                : 16
FUNCION              : 23 24 25 26 27 28 29 30
GREATEREQUAL         : 71
GREATERTHAN          : 70
HACER                : 104
HASTA                : 104
HAZ                  : 100
ID                   : 1 2 3 4 11 12 20 21 23 24 25 26 27 28 29 30 33 34 52
INT                  : 15
LBRACKET             : 36 37
LEE                  : 53
LESSEQUAL            : 69
LESSTHAN             : 68
LPAREN               : 5 23 24 25 26 27 28 29 30 52 53 54 55 84 95 96 100
LSQUARE              : 12 20
MIENTRAS             : 100
MINUS                : 77
MULT                 : 80
NOEQUAL              : 73
OR                   : 62
PLUS                 : 76
PRINCIPAL            : 5
PROGRAMA             : 1 2 3 4
RBRACKET             : 36 37
REGRESA              : 107
RPAREN               : 5 23 24 25 26 27 28 29 30 52 53 54 55 84 95 96 100
RSQUARE              : 12 20
SAME                 : 72
SEMICOLON            : 1 2 3 4 7 8 40 54 55 107
SI                   : 95 96
SINO                 : 96
VAR                  : 6
VOID                 : 25 26 29 30
error                : 

Nonterminals, with rules where they appear

asigna               : 40 104
bloque               : 5 23 24 25 26 27 28 29 30 95 96 96 100 104
ciclo_f              : 47
ciclo_w              : 45
condicion            : 44
empty                : 37
escribe              : 43
estatuto             : 38 39
exp                  : 59 60 62
f                    : 79 80 81
funcion              : 1 2
g_exp                : 64 65 68 69 70 71 72 73
lee                  : 42
llamada              : 41 89
m_exp                : 67 68 69 70 71 72 73 76 77
mult_asigna          : 48 50
mult_cte_s           : 55 58
mult_estatutos       : 36 39
mult_exp             : 20 49 52 54 60 84 95 96 100 104 107
n_FF                 : 84 84
n_Operador           : 49 50 62 65 68 69 70 71 72 73 76 77 80 81
n_andQuad            : 64 65
n_asignQuad          : 49 50
n_compareQuad        : 67 68 69 70 71 72 73
n_directPrint        : 85 86 87
n_endFor             : 104
n_endIfQuad          : 95 96
n_endWhile           : 100
n_escribeExp         : 54 55
n_evalExp            : 100
n_evalExp_for        : 104
n_ifQuad             : 95 96
n_multQuad           : 79 80 81
n_orQuad             : 61 62
n_register_func      : 23 24 25 26 27 28 29 30
n_save_array         : 12
n_save_type          : 15 16 17 25 26 29 30
n_save_var           : 11
n_startCicle         : 100 104
n_sumQuad            : 75 76 77
n_tempTypeC          : 87
n_tempTypeF          : 86
n_tempTypeI          : 85
p_n_getVarVal        : 21
p_n_sinoQuad         : 96
param                : 23 24 25 26 34
param_aux1           : 32
principal            : 1 2 3 4
programa             : 0
retorno              : 46
save_param           : 33 34
t                    : 75 76 77 80 81
t_exp                : 61 62 65
tipo_simple          : 7 8 23 24 27 28 32
variable             : 49 50 53 88
vars                 : 1 3 23 25 27 29
vars_aux             : 6 8
vars_aux1            : 7 8 10
vars_aux2            : 9 10

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON vars funcion principal
    (2) programa -> . PROGRAMA ID SEMICOLON funcion principal
    (3) programa -> . PROGRAMA ID SEMICOLON vars principal
    (4) programa -> . PROGRAMA ID SEMICOLON principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON vars funcion principal
    (2) programa -> PROGRAMA . ID SEMICOLON funcion principal
    (3) programa -> PROGRAMA . ID SEMICOLON vars principal
    (4) programa -> PROGRAMA . ID SEMICOLON principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON vars funcion principal
    (2) programa -> PROGRAMA ID . SEMICOLON funcion principal
    (3) programa -> PROGRAMA ID . SEMICOLON vars principal
    (4) programa -> PROGRAMA ID . SEMICOLON principal

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . vars funcion principal
    (2) programa -> PROGRAMA ID SEMICOLON . funcion principal
    (3) programa -> PROGRAMA ID SEMICOLON . vars principal
    (4) programa -> PROGRAMA ID SEMICOLON . principal
    (6) vars -> . VAR vars_aux
    (23) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
    (24) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque
    (25) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (26) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
    (27) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque
    (28) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque
    (29) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (30) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    VAR             shift and go to state 8
    FUNCION         shift and go to state 9
    PRINCIPAL       shift and go to state 10

    vars                           shift and go to state 5
    funcion                        shift and go to state 6
    principal                      shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMICOLON vars . funcion principal
    (3) programa -> PROGRAMA ID SEMICOLON vars . principal
    (23) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
    (24) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque
    (25) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (26) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
    (27) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque
    (28) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque
    (29) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (30) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    FUNCION         shift and go to state 9
    PRINCIPAL       shift and go to state 10

    funcion                        shift and go to state 11
    principal                      shift and go to state 12

state 6

    (2) programa -> PROGRAMA ID SEMICOLON funcion . principal
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 10

    principal                      shift and go to state 13

state 7

    (4) programa -> PROGRAMA ID SEMICOLON principal .

    $end            reduce using rule 4 (programa -> PROGRAMA ID SEMICOLON principal .)


state 8

    (6) vars -> VAR . vars_aux
    (7) vars_aux -> . tipo_simple vars_aux1 SEMICOLON
    (8) vars_aux -> . tipo_simple vars_aux1 SEMICOLON vars_aux
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    vars_aux                       shift and go to state 14
    tipo_simple                    shift and go to state 15

state 9

    (23) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN param RPAREN vars bloque
    (24) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN param RPAREN bloque
    (25) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (26) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN param RPAREN bloque
    (27) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN RPAREN vars bloque
    (28) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN RPAREN bloque
    (29) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (30) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN RPAREN bloque
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    VOID            shift and go to state 20
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo_simple                    shift and go to state 19

state 10

    (5) principal -> PRINCIPAL . LPAREN RPAREN bloque

    LPAREN          shift and go to state 21


state 11

    (1) programa -> PROGRAMA ID SEMICOLON vars funcion . principal
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 10

    principal                      shift and go to state 22

state 12

    (3) programa -> PROGRAMA ID SEMICOLON vars principal .

    $end            reduce using rule 3 (programa -> PROGRAMA ID SEMICOLON vars principal .)


state 13

    (2) programa -> PROGRAMA ID SEMICOLON funcion principal .

    $end            reduce using rule 2 (programa -> PROGRAMA ID SEMICOLON funcion principal .)


state 14

    (6) vars -> VAR vars_aux .

    FUNCION         reduce using rule 6 (vars -> VAR vars_aux .)
    PRINCIPAL       reduce using rule 6 (vars -> VAR vars_aux .)
    LBRACKET        reduce using rule 6 (vars -> VAR vars_aux .)


state 15

    (7) vars_aux -> tipo_simple . vars_aux1 SEMICOLON
    (8) vars_aux -> tipo_simple . vars_aux1 SEMICOLON vars_aux
    (9) vars_aux1 -> . vars_aux2
    (10) vars_aux1 -> . vars_aux2 COMMA vars_aux1
    (11) vars_aux2 -> . ID n_save_var
    (12) vars_aux2 -> . ID LSQUARE CTE_I n_save_array RSQUARE

    ID              shift and go to state 25

    vars_aux1                      shift and go to state 23
    vars_aux2                      shift and go to state 24

state 16

    (15) tipo_simple -> INT . n_save_type
    (18) n_save_type -> .

    ID              reduce using rule 18 (n_save_type -> .)

    n_save_type                    shift and go to state 26

state 17

    (16) tipo_simple -> FLOAT . n_save_type
    (18) n_save_type -> .

    ID              reduce using rule 18 (n_save_type -> .)

    n_save_type                    shift and go to state 27

state 18

    (17) tipo_simple -> CHAR . n_save_type
    (18) n_save_type -> .

    ID              reduce using rule 18 (n_save_type -> .)

    n_save_type                    shift and go to state 28

state 19

    (23) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN param RPAREN vars bloque
    (24) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN param RPAREN bloque
    (27) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN RPAREN vars bloque
    (28) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN RPAREN bloque

    ID              shift and go to state 29


state 20

    (25) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN param RPAREN vars bloque
    (26) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN param RPAREN bloque
    (29) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN RPAREN vars bloque
    (30) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN RPAREN bloque
    (18) n_save_type -> .

    ID              reduce using rule 18 (n_save_type -> .)

    n_save_type                    shift and go to state 30

state 21

    (5) principal -> PRINCIPAL LPAREN . RPAREN bloque

    RPAREN          shift and go to state 31


state 22

    (1) programa -> PROGRAMA ID SEMICOLON vars funcion principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON vars funcion principal .)


state 23

    (7) vars_aux -> tipo_simple vars_aux1 . SEMICOLON
    (8) vars_aux -> tipo_simple vars_aux1 . SEMICOLON vars_aux

    SEMICOLON       shift and go to state 32


state 24

    (9) vars_aux1 -> vars_aux2 .
    (10) vars_aux1 -> vars_aux2 . COMMA vars_aux1

    SEMICOLON       reduce using rule 9 (vars_aux1 -> vars_aux2 .)
    COMMA           shift and go to state 33


state 25

    (11) vars_aux2 -> ID . n_save_var
    (12) vars_aux2 -> ID . LSQUARE CTE_I n_save_array RSQUARE
    (14) n_save_var -> .

    LSQUARE         shift and go to state 35
    COMMA           reduce using rule 14 (n_save_var -> .)
    SEMICOLON       reduce using rule 14 (n_save_var -> .)

    n_save_var                     shift and go to state 34

state 26

    (15) tipo_simple -> INT n_save_type .

    ID              reduce using rule 15 (tipo_simple -> INT n_save_type .)


state 27

    (16) tipo_simple -> FLOAT n_save_type .

    ID              reduce using rule 16 (tipo_simple -> FLOAT n_save_type .)


state 28

    (17) tipo_simple -> CHAR n_save_type .

    ID              reduce using rule 17 (tipo_simple -> CHAR n_save_type .)


state 29

    (23) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN param RPAREN vars bloque
    (24) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN param RPAREN bloque
    (27) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN RPAREN vars bloque
    (28) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN RPAREN bloque
    (31) n_register_func -> .

    LPAREN          reduce using rule 31 (n_register_func -> .)

    n_register_func                shift and go to state 36

state 30

    (25) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN param RPAREN vars bloque
    (26) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN param RPAREN bloque
    (29) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN RPAREN vars bloque
    (30) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN RPAREN bloque

    ID              shift and go to state 37


state 31

    (5) principal -> PRINCIPAL LPAREN RPAREN . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 38

state 32

    (7) vars_aux -> tipo_simple vars_aux1 SEMICOLON .
    (8) vars_aux -> tipo_simple vars_aux1 SEMICOLON . vars_aux
    (7) vars_aux -> . tipo_simple vars_aux1 SEMICOLON
    (8) vars_aux -> . tipo_simple vars_aux1 SEMICOLON vars_aux
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    FUNCION         reduce using rule 7 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    PRINCIPAL       reduce using rule 7 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    LBRACKET        reduce using rule 7 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo_simple                    shift and go to state 15
    vars_aux                       shift and go to state 40

state 33

    (10) vars_aux1 -> vars_aux2 COMMA . vars_aux1
    (9) vars_aux1 -> . vars_aux2
    (10) vars_aux1 -> . vars_aux2 COMMA vars_aux1
    (11) vars_aux2 -> . ID n_save_var
    (12) vars_aux2 -> . ID LSQUARE CTE_I n_save_array RSQUARE

    ID              shift and go to state 25

    vars_aux2                      shift and go to state 24
    vars_aux1                      shift and go to state 41

state 34

    (11) vars_aux2 -> ID n_save_var .

    COMMA           reduce using rule 11 (vars_aux2 -> ID n_save_var .)
    SEMICOLON       reduce using rule 11 (vars_aux2 -> ID n_save_var .)


state 35

    (12) vars_aux2 -> ID LSQUARE . CTE_I n_save_array RSQUARE

    CTE_I           shift and go to state 42


state 36

    (23) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN param RPAREN vars bloque
    (24) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN param RPAREN bloque
    (27) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN RPAREN vars bloque
    (28) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN RPAREN bloque

    LPAREN          shift and go to state 43


state 37

    (25) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN param RPAREN vars bloque
    (26) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN param RPAREN bloque
    (29) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN RPAREN vars bloque
    (30) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN RPAREN bloque
    (31) n_register_func -> .

    LPAREN          reduce using rule 31 (n_register_func -> .)

    n_register_func                shift and go to state 44

state 38

    (5) principal -> PRINCIPAL LPAREN RPAREN bloque .

    $end            reduce using rule 5 (principal -> PRINCIPAL LPAREN RPAREN bloque .)


state 39

    (36) bloque -> LBRACKET . mult_estatutos RBRACKET
    (37) bloque -> LBRACKET . empty RBRACKET
    (38) mult_estatutos -> . estatuto
    (39) mult_estatutos -> . estatuto mult_estatutos
    (19) empty -> .
    (40) estatuto -> . asigna SEMICOLON
    (41) estatuto -> . llamada
    (42) estatuto -> . lee
    (43) estatuto -> . escribe
    (44) estatuto -> . condicion
    (45) estatuto -> . ciclo_w
    (46) estatuto -> . retorno
    (47) estatuto -> . ciclo_f
    (48) asigna -> . mult_asigna
    (52) llamada -> . ID LPAREN mult_exp RPAREN
    (53) lee -> . LEE LPAREN variable RPAREN
    (54) escribe -> . ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
    (55) escribe -> . ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON
    (95) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (96) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (100) ciclo_w -> . MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (107) retorno -> . REGRESA mult_exp SEMICOLON
    (104) ciclo_f -> . DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (49) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (50) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal

    RBRACKET        reduce using rule 19 (empty -> .)
    ID              shift and go to state 57
    LEE             shift and go to state 58
    ESCRIBE         shift and go to state 60
    SI              shift and go to state 61
    MIENTRAS        shift and go to state 62
    REGRESA         shift and go to state 63
    DESDE           shift and go to state 64

    mult_estatutos                 shift and go to state 45
    empty                          shift and go to state 46
    estatuto                       shift and go to state 47
    asigna                         shift and go to state 48
    llamada                        shift and go to state 49
    lee                            shift and go to state 50
    escribe                        shift and go to state 51
    condicion                      shift and go to state 52
    ciclo_w                        shift and go to state 53
    retorno                        shift and go to state 54
    ciclo_f                        shift and go to state 55
    mult_asigna                    shift and go to state 56
    variable                       shift and go to state 59

state 40

    (8) vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .

    FUNCION         reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)
    PRINCIPAL       reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)
    LBRACKET        reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)


state 41

    (10) vars_aux1 -> vars_aux2 COMMA vars_aux1 .

    SEMICOLON       reduce using rule 10 (vars_aux1 -> vars_aux2 COMMA vars_aux1 .)


state 42

    (12) vars_aux2 -> ID LSQUARE CTE_I . n_save_array RSQUARE
    (13) n_save_array -> .

    RSQUARE         reduce using rule 13 (n_save_array -> .)

    n_save_array                   shift and go to state 65

state 43

    (23) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . param RPAREN vars bloque
    (24) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . param RPAREN bloque
    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . RPAREN vars bloque
    (28) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . RPAREN bloque
    (32) param -> . tipo_simple param_aux1
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    RPAREN          shift and go to state 68
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo_simple                    shift and go to state 66
    param                          shift and go to state 67

state 44

    (25) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN param RPAREN vars bloque
    (26) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN param RPAREN bloque
    (29) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN RPAREN vars bloque
    (30) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN RPAREN bloque

    LPAREN          shift and go to state 69


state 45

    (36) bloque -> LBRACKET mult_estatutos . RBRACKET

    RBRACKET        shift and go to state 70


state 46

    (37) bloque -> LBRACKET empty . RBRACKET

    RBRACKET        shift and go to state 71


state 47

    (38) mult_estatutos -> estatuto .
    (39) mult_estatutos -> estatuto . mult_estatutos
    (38) mult_estatutos -> . estatuto
    (39) mult_estatutos -> . estatuto mult_estatutos
    (40) estatuto -> . asigna SEMICOLON
    (41) estatuto -> . llamada
    (42) estatuto -> . lee
    (43) estatuto -> . escribe
    (44) estatuto -> . condicion
    (45) estatuto -> . ciclo_w
    (46) estatuto -> . retorno
    (47) estatuto -> . ciclo_f
    (48) asigna -> . mult_asigna
    (52) llamada -> . ID LPAREN mult_exp RPAREN
    (53) lee -> . LEE LPAREN variable RPAREN
    (54) escribe -> . ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
    (55) escribe -> . ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON
    (95) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (96) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (100) ciclo_w -> . MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (107) retorno -> . REGRESA mult_exp SEMICOLON
    (104) ciclo_f -> . DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (49) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (50) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal

    RBRACKET        reduce using rule 38 (mult_estatutos -> estatuto .)
    ID              shift and go to state 57
    LEE             shift and go to state 58
    ESCRIBE         shift and go to state 60
    SI              shift and go to state 61
    MIENTRAS        shift and go to state 62
    REGRESA         shift and go to state 63
    DESDE           shift and go to state 64

    estatuto                       shift and go to state 47
    mult_estatutos                 shift and go to state 72
    asigna                         shift and go to state 48
    llamada                        shift and go to state 49
    lee                            shift and go to state 50
    escribe                        shift and go to state 51
    condicion                      shift and go to state 52
    ciclo_w                        shift and go to state 53
    retorno                        shift and go to state 54
    ciclo_f                        shift and go to state 55
    mult_asigna                    shift and go to state 56
    variable                       shift and go to state 59

state 48

    (40) estatuto -> asigna . SEMICOLON

    SEMICOLON       shift and go to state 73


state 49

    (41) estatuto -> llamada .

    ID              reduce using rule 41 (estatuto -> llamada .)
    LEE             reduce using rule 41 (estatuto -> llamada .)
    ESCRIBE         reduce using rule 41 (estatuto -> llamada .)
    SI              reduce using rule 41 (estatuto -> llamada .)
    MIENTRAS        reduce using rule 41 (estatuto -> llamada .)
    REGRESA         reduce using rule 41 (estatuto -> llamada .)
    DESDE           reduce using rule 41 (estatuto -> llamada .)
    RBRACKET        reduce using rule 41 (estatuto -> llamada .)


state 50

    (42) estatuto -> lee .

    ID              reduce using rule 42 (estatuto -> lee .)
    LEE             reduce using rule 42 (estatuto -> lee .)
    ESCRIBE         reduce using rule 42 (estatuto -> lee .)
    SI              reduce using rule 42 (estatuto -> lee .)
    MIENTRAS        reduce using rule 42 (estatuto -> lee .)
    REGRESA         reduce using rule 42 (estatuto -> lee .)
    DESDE           reduce using rule 42 (estatuto -> lee .)
    RBRACKET        reduce using rule 42 (estatuto -> lee .)


state 51

    (43) estatuto -> escribe .

    ID              reduce using rule 43 (estatuto -> escribe .)
    LEE             reduce using rule 43 (estatuto -> escribe .)
    ESCRIBE         reduce using rule 43 (estatuto -> escribe .)
    SI              reduce using rule 43 (estatuto -> escribe .)
    MIENTRAS        reduce using rule 43 (estatuto -> escribe .)
    REGRESA         reduce using rule 43 (estatuto -> escribe .)
    DESDE           reduce using rule 43 (estatuto -> escribe .)
    RBRACKET        reduce using rule 43 (estatuto -> escribe .)


state 52

    (44) estatuto -> condicion .

    ID              reduce using rule 44 (estatuto -> condicion .)
    LEE             reduce using rule 44 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 44 (estatuto -> condicion .)
    SI              reduce using rule 44 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 44 (estatuto -> condicion .)
    REGRESA         reduce using rule 44 (estatuto -> condicion .)
    DESDE           reduce using rule 44 (estatuto -> condicion .)
    RBRACKET        reduce using rule 44 (estatuto -> condicion .)


state 53

    (45) estatuto -> ciclo_w .

    ID              reduce using rule 45 (estatuto -> ciclo_w .)
    LEE             reduce using rule 45 (estatuto -> ciclo_w .)
    ESCRIBE         reduce using rule 45 (estatuto -> ciclo_w .)
    SI              reduce using rule 45 (estatuto -> ciclo_w .)
    MIENTRAS        reduce using rule 45 (estatuto -> ciclo_w .)
    REGRESA         reduce using rule 45 (estatuto -> ciclo_w .)
    DESDE           reduce using rule 45 (estatuto -> ciclo_w .)
    RBRACKET        reduce using rule 45 (estatuto -> ciclo_w .)


state 54

    (46) estatuto -> retorno .

    ID              reduce using rule 46 (estatuto -> retorno .)
    LEE             reduce using rule 46 (estatuto -> retorno .)
    ESCRIBE         reduce using rule 46 (estatuto -> retorno .)
    SI              reduce using rule 46 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 46 (estatuto -> retorno .)
    REGRESA         reduce using rule 46 (estatuto -> retorno .)
    DESDE           reduce using rule 46 (estatuto -> retorno .)
    RBRACKET        reduce using rule 46 (estatuto -> retorno .)


state 55

    (47) estatuto -> ciclo_f .

    ID              reduce using rule 47 (estatuto -> ciclo_f .)
    LEE             reduce using rule 47 (estatuto -> ciclo_f .)
    ESCRIBE         reduce using rule 47 (estatuto -> ciclo_f .)
    SI              reduce using rule 47 (estatuto -> ciclo_f .)
    MIENTRAS        reduce using rule 47 (estatuto -> ciclo_f .)
    REGRESA         reduce using rule 47 (estatuto -> ciclo_f .)
    DESDE           reduce using rule 47 (estatuto -> ciclo_f .)
    RBRACKET        reduce using rule 47 (estatuto -> ciclo_f .)


state 56

    (48) asigna -> mult_asigna .

    SEMICOLON       reduce using rule 48 (asigna -> mult_asigna .)
    HASTA           reduce using rule 48 (asigna -> mult_asigna .)


state 57

    (52) llamada -> ID . LPAREN mult_exp RPAREN
    (20) variable -> ID . LSQUARE mult_exp RSQUARE
    (21) variable -> ID . p_n_getVarVal
    (22) p_n_getVarVal -> .

    LPAREN          shift and go to state 74
    LSQUARE         shift and go to state 75
    EQUAL           reduce using rule 22 (p_n_getVarVal -> .)

    p_n_getVarVal                  shift and go to state 76

state 58

    (53) lee -> LEE . LPAREN variable RPAREN

    LPAREN          shift and go to state 77


state 59

    (49) mult_asigna -> variable . EQUAL n_Operador mult_exp n_asignQuad
    (50) mult_asigna -> variable . EQUAL n_Operador mult_asigna n_asignQuad

    EQUAL           shift and go to state 78


state 60

    (54) escribe -> ESCRIBE . LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
    (55) escribe -> ESCRIBE . LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON

    LPAREN          shift and go to state 79


state 61

    (95) condicion -> SI . LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (96) condicion -> SI . LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad

    LPAREN          shift and go to state 80


state 62

    (100) ciclo_w -> MIENTRAS . n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (101) n_startCicle -> .

    LPAREN          reduce using rule 101 (n_startCicle -> .)

    n_startCicle                   shift and go to state 81

state 63

    (107) retorno -> REGRESA . mult_exp SEMICOLON
    (59) mult_exp -> . exp
    (60) mult_exp -> . exp COMMA mult_exp
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    mult_exp                       shift and go to state 82
    exp                            shift and go to state 83
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 64

    (104) ciclo_f -> DESDE . n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (101) n_startCicle -> .

    ID              reduce using rule 101 (n_startCicle -> .)

    n_startCicle                   shift and go to state 96

state 65

    (12) vars_aux2 -> ID LSQUARE CTE_I n_save_array . RSQUARE

    RSQUARE         shift and go to state 97


state 66

    (32) param -> tipo_simple . param_aux1
    (33) param_aux1 -> . ID save_param
    (34) param_aux1 -> . ID save_param COMMA param

    ID              shift and go to state 99

    param_aux1                     shift and go to state 98

state 67

    (23) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param . RPAREN vars bloque
    (24) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 100


state 68

    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN . vars bloque
    (28) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN . bloque
    (6) vars -> . VAR vars_aux
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 39

    vars                           shift and go to state 101
    bloque                         shift and go to state 102

state 69

    (25) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . param RPAREN vars bloque
    (26) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . param RPAREN bloque
    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . RPAREN vars bloque
    (30) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . RPAREN bloque
    (32) param -> . tipo_simple param_aux1
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    RPAREN          shift and go to state 104
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    param                          shift and go to state 103
    tipo_simple                    shift and go to state 66

state 70

    (36) bloque -> LBRACKET mult_estatutos RBRACKET .

    $end            reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    PRINCIPAL       reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SINO            reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    ID              reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    LEE             reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    ESCRIBE         reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SI              reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    MIENTRAS        reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    REGRESA         reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    DESDE           reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    RBRACKET        reduce using rule 36 (bloque -> LBRACKET mult_estatutos RBRACKET .)


state 71

    (37) bloque -> LBRACKET empty RBRACKET .

    $end            reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    PRINCIPAL       reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    SINO            reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    ID              reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    LEE             reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    ESCRIBE         reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    SI              reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    MIENTRAS        reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    REGRESA         reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    DESDE           reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)
    RBRACKET        reduce using rule 37 (bloque -> LBRACKET empty RBRACKET .)


state 72

    (39) mult_estatutos -> estatuto mult_estatutos .

    RBRACKET        reduce using rule 39 (mult_estatutos -> estatuto mult_estatutos .)


state 73

    (40) estatuto -> asigna SEMICOLON .

    ID              reduce using rule 40 (estatuto -> asigna SEMICOLON .)
    LEE             reduce using rule 40 (estatuto -> asigna SEMICOLON .)
    ESCRIBE         reduce using rule 40 (estatuto -> asigna SEMICOLON .)
    SI              reduce using rule 40 (estatuto -> asigna SEMICOLON .)
    MIENTRAS        reduce using rule 40 (estatuto -> asigna SEMICOLON .)
    REGRESA         reduce using rule 40 (estatuto -> asigna SEMICOLON .)
    DESDE           reduce using rule 40 (estatuto -> asigna SEMICOLON .)
    RBRACKET        reduce using rule 40 (estatuto -> asigna SEMICOLON .)


state 74

    (52) llamada -> ID LPAREN . mult_exp RPAREN
    (59) mult_exp -> . exp
    (60) mult_exp -> . exp COMMA mult_exp
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    mult_exp                       shift and go to state 105
    exp                            shift and go to state 83
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 75

    (20) variable -> ID LSQUARE . mult_exp RSQUARE
    (59) mult_exp -> . exp
    (60) mult_exp -> . exp COMMA mult_exp
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    mult_exp                       shift and go to state 106
    exp                            shift and go to state 83
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 76

    (21) variable -> ID p_n_getVarVal .

    EQUAL           reduce using rule 21 (variable -> ID p_n_getVarVal .)
    MULT            reduce using rule 21 (variable -> ID p_n_getVarVal .)
    DIV             reduce using rule 21 (variable -> ID p_n_getVarVal .)
    PLUS            reduce using rule 21 (variable -> ID p_n_getVarVal .)
    MINUS           reduce using rule 21 (variable -> ID p_n_getVarVal .)
    LESSTHAN        reduce using rule 21 (variable -> ID p_n_getVarVal .)
    LESSEQUAL       reduce using rule 21 (variable -> ID p_n_getVarVal .)
    GREATERTHAN     reduce using rule 21 (variable -> ID p_n_getVarVal .)
    GREATEREQUAL    reduce using rule 21 (variable -> ID p_n_getVarVal .)
    SAME            reduce using rule 21 (variable -> ID p_n_getVarVal .)
    NOEQUAL         reduce using rule 21 (variable -> ID p_n_getVarVal .)
    AND             reduce using rule 21 (variable -> ID p_n_getVarVal .)
    OR              reduce using rule 21 (variable -> ID p_n_getVarVal .)
    COMMA           reduce using rule 21 (variable -> ID p_n_getVarVal .)
    SEMICOLON       reduce using rule 21 (variable -> ID p_n_getVarVal .)
    RPAREN          reduce using rule 21 (variable -> ID p_n_getVarVal .)
    RSQUARE         reduce using rule 21 (variable -> ID p_n_getVarVal .)
    HASTA           reduce using rule 21 (variable -> ID p_n_getVarVal .)
    HACER           reduce using rule 21 (variable -> ID p_n_getVarVal .)


state 77

    (53) lee -> LEE LPAREN . variable RPAREN
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal

    ID              shift and go to state 108

    variable                       shift and go to state 107

state 78

    (49) mult_asigna -> variable EQUAL . n_Operador mult_exp n_asignQuad
    (50) mult_asigna -> variable EQUAL . n_Operador mult_asigna n_asignQuad
    (83) n_Operador -> .

    ID              reduce using rule 83 (n_Operador -> .)
    LPAREN          reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 109

state 79

    (54) escribe -> ESCRIBE LPAREN . mult_exp n_escribeExp RPAREN SEMICOLON
    (55) escribe -> ESCRIBE LPAREN . mult_cte_s n_escribeExp RPAREN SEMICOLON
    (59) mult_exp -> . exp
    (60) mult_exp -> . exp COMMA mult_exp
    (57) mult_cte_s -> . CTE_S
    (58) mult_cte_s -> . CTE_S COMMA mult_cte_s
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    CTE_S           shift and go to state 112
    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    mult_exp                       shift and go to state 110
    mult_cte_s                     shift and go to state 111
    exp                            shift and go to state 83
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 80

    (95) condicion -> SI LPAREN . mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (96) condicion -> SI LPAREN . mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (59) mult_exp -> . exp
    (60) mult_exp -> . exp COMMA mult_exp
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    mult_exp                       shift and go to state 113
    exp                            shift and go to state 83
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 81

    (100) ciclo_w -> MIENTRAS n_startCicle . LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile

    LPAREN          shift and go to state 114


state 82

    (107) retorno -> REGRESA mult_exp . SEMICOLON

    SEMICOLON       shift and go to state 115


state 83

    (59) mult_exp -> exp .
    (60) mult_exp -> exp . COMMA mult_exp

    SEMICOLON       reduce using rule 59 (mult_exp -> exp .)
    RPAREN          reduce using rule 59 (mult_exp -> exp .)
    RSQUARE         reduce using rule 59 (mult_exp -> exp .)
    HASTA           reduce using rule 59 (mult_exp -> exp .)
    HACER           reduce using rule 59 (mult_exp -> exp .)
    COMMA           shift and go to state 116


state 84

    (61) exp -> t_exp . n_orQuad
    (62) exp -> t_exp . n_orQuad OR n_Operador exp
    (63) n_orQuad -> .

    OR              reduce using rule 63 (n_orQuad -> .)
    COMMA           reduce using rule 63 (n_orQuad -> .)
    SEMICOLON       reduce using rule 63 (n_orQuad -> .)
    RPAREN          reduce using rule 63 (n_orQuad -> .)
    RSQUARE         reduce using rule 63 (n_orQuad -> .)
    HASTA           reduce using rule 63 (n_orQuad -> .)
    HACER           reduce using rule 63 (n_orQuad -> .)

    n_orQuad                       shift and go to state 117

state 85

    (64) t_exp -> g_exp . n_andQuad
    (65) t_exp -> g_exp . n_andQuad AND n_Operador t_exp
    (66) n_andQuad -> .

    AND             reduce using rule 66 (n_andQuad -> .)
    OR              reduce using rule 66 (n_andQuad -> .)
    COMMA           reduce using rule 66 (n_andQuad -> .)
    SEMICOLON       reduce using rule 66 (n_andQuad -> .)
    RPAREN          reduce using rule 66 (n_andQuad -> .)
    RSQUARE         reduce using rule 66 (n_andQuad -> .)
    HASTA           reduce using rule 66 (n_andQuad -> .)
    HACER           reduce using rule 66 (n_andQuad -> .)

    n_andQuad                      shift and go to state 118

state 86

    (67) g_exp -> m_exp . n_compareQuad
    (68) g_exp -> m_exp . n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> m_exp . n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> m_exp . n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> m_exp . n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> m_exp . n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> m_exp . n_compareQuad NOEQUAL n_Operador g_exp
    (74) n_compareQuad -> .

    LESSTHAN        reduce using rule 74 (n_compareQuad -> .)
    LESSEQUAL       reduce using rule 74 (n_compareQuad -> .)
    GREATERTHAN     reduce using rule 74 (n_compareQuad -> .)
    GREATEREQUAL    reduce using rule 74 (n_compareQuad -> .)
    SAME            reduce using rule 74 (n_compareQuad -> .)
    NOEQUAL         reduce using rule 74 (n_compareQuad -> .)
    AND             reduce using rule 74 (n_compareQuad -> .)
    OR              reduce using rule 74 (n_compareQuad -> .)
    COMMA           reduce using rule 74 (n_compareQuad -> .)
    SEMICOLON       reduce using rule 74 (n_compareQuad -> .)
    RPAREN          reduce using rule 74 (n_compareQuad -> .)
    RSQUARE         reduce using rule 74 (n_compareQuad -> .)
    HASTA           reduce using rule 74 (n_compareQuad -> .)
    HACER           reduce using rule 74 (n_compareQuad -> .)

    n_compareQuad                  shift and go to state 119

state 87

    (75) m_exp -> t . n_sumQuad
    (76) m_exp -> t . n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> t . n_sumQuad MINUS n_Operador m_exp
    (78) n_sumQuad -> .

    PLUS            reduce using rule 78 (n_sumQuad -> .)
    MINUS           reduce using rule 78 (n_sumQuad -> .)
    LESSTHAN        reduce using rule 78 (n_sumQuad -> .)
    LESSEQUAL       reduce using rule 78 (n_sumQuad -> .)
    GREATERTHAN     reduce using rule 78 (n_sumQuad -> .)
    GREATEREQUAL    reduce using rule 78 (n_sumQuad -> .)
    SAME            reduce using rule 78 (n_sumQuad -> .)
    NOEQUAL         reduce using rule 78 (n_sumQuad -> .)
    AND             reduce using rule 78 (n_sumQuad -> .)
    OR              reduce using rule 78 (n_sumQuad -> .)
    COMMA           reduce using rule 78 (n_sumQuad -> .)
    SEMICOLON       reduce using rule 78 (n_sumQuad -> .)
    RPAREN          reduce using rule 78 (n_sumQuad -> .)
    RSQUARE         reduce using rule 78 (n_sumQuad -> .)
    HASTA           reduce using rule 78 (n_sumQuad -> .)
    HACER           reduce using rule 78 (n_sumQuad -> .)

    n_sumQuad                      shift and go to state 120

state 88

    (79) t -> f . n_multQuad
    (80) t -> f . n_multQuad MULT n_Operador t
    (81) t -> f . n_multQuad DIV n_Operador t
    (82) n_multQuad -> .

    MULT            reduce using rule 82 (n_multQuad -> .)
    DIV             reduce using rule 82 (n_multQuad -> .)
    PLUS            reduce using rule 82 (n_multQuad -> .)
    MINUS           reduce using rule 82 (n_multQuad -> .)
    LESSTHAN        reduce using rule 82 (n_multQuad -> .)
    LESSEQUAL       reduce using rule 82 (n_multQuad -> .)
    GREATERTHAN     reduce using rule 82 (n_multQuad -> .)
    GREATEREQUAL    reduce using rule 82 (n_multQuad -> .)
    SAME            reduce using rule 82 (n_multQuad -> .)
    NOEQUAL         reduce using rule 82 (n_multQuad -> .)
    AND             reduce using rule 82 (n_multQuad -> .)
    OR              reduce using rule 82 (n_multQuad -> .)
    COMMA           reduce using rule 82 (n_multQuad -> .)
    SEMICOLON       reduce using rule 82 (n_multQuad -> .)
    RPAREN          reduce using rule 82 (n_multQuad -> .)
    RSQUARE         reduce using rule 82 (n_multQuad -> .)
    HASTA           reduce using rule 82 (n_multQuad -> .)
    HACER           reduce using rule 82 (n_multQuad -> .)

    n_multQuad                     shift and go to state 121

state 89

    (84) f -> LPAREN . n_FF mult_exp RPAREN n_FF
    (94) n_FF -> .

    LPAREN          reduce using rule 94 (n_FF -> .)
    ID              reduce using rule 94 (n_FF -> .)
    CTE_I           reduce using rule 94 (n_FF -> .)
    CTE_F           reduce using rule 94 (n_FF -> .)
    CTE_C           reduce using rule 94 (n_FF -> .)

    n_FF                           shift and go to state 122

state 90

    (85) f -> n_tempTypeI . CTE_I n_directPrint

    CTE_I           shift and go to state 123


state 91

    (86) f -> n_tempTypeF . CTE_F n_directPrint

    CTE_F           shift and go to state 124


state 92

    (87) f -> n_tempTypeC . CTE_C n_directPrint

    CTE_C           shift and go to state 125


state 93

    (88) f -> variable .

    MULT            reduce using rule 88 (f -> variable .)
    DIV             reduce using rule 88 (f -> variable .)
    PLUS            reduce using rule 88 (f -> variable .)
    MINUS           reduce using rule 88 (f -> variable .)
    LESSTHAN        reduce using rule 88 (f -> variable .)
    LESSEQUAL       reduce using rule 88 (f -> variable .)
    GREATERTHAN     reduce using rule 88 (f -> variable .)
    GREATEREQUAL    reduce using rule 88 (f -> variable .)
    SAME            reduce using rule 88 (f -> variable .)
    NOEQUAL         reduce using rule 88 (f -> variable .)
    AND             reduce using rule 88 (f -> variable .)
    OR              reduce using rule 88 (f -> variable .)
    COMMA           reduce using rule 88 (f -> variable .)
    SEMICOLON       reduce using rule 88 (f -> variable .)
    RPAREN          reduce using rule 88 (f -> variable .)
    RSQUARE         reduce using rule 88 (f -> variable .)
    HASTA           reduce using rule 88 (f -> variable .)
    HACER           reduce using rule 88 (f -> variable .)


state 94

    (89) f -> llamada .

    MULT            reduce using rule 89 (f -> llamada .)
    DIV             reduce using rule 89 (f -> llamada .)
    PLUS            reduce using rule 89 (f -> llamada .)
    MINUS           reduce using rule 89 (f -> llamada .)
    LESSTHAN        reduce using rule 89 (f -> llamada .)
    LESSEQUAL       reduce using rule 89 (f -> llamada .)
    GREATERTHAN     reduce using rule 89 (f -> llamada .)
    GREATEREQUAL    reduce using rule 89 (f -> llamada .)
    SAME            reduce using rule 89 (f -> llamada .)
    NOEQUAL         reduce using rule 89 (f -> llamada .)
    AND             reduce using rule 89 (f -> llamada .)
    OR              reduce using rule 89 (f -> llamada .)
    COMMA           reduce using rule 89 (f -> llamada .)
    SEMICOLON       reduce using rule 89 (f -> llamada .)
    RPAREN          reduce using rule 89 (f -> llamada .)
    RSQUARE         reduce using rule 89 (f -> llamada .)
    HASTA           reduce using rule 89 (f -> llamada .)
    HACER           reduce using rule 89 (f -> llamada .)


state 95

    (20) variable -> ID . LSQUARE mult_exp RSQUARE
    (21) variable -> ID . p_n_getVarVal
    (52) llamada -> ID . LPAREN mult_exp RPAREN
    (22) p_n_getVarVal -> .

    LSQUARE         shift and go to state 75
    LPAREN          shift and go to state 74
    MULT            reduce using rule 22 (p_n_getVarVal -> .)
    DIV             reduce using rule 22 (p_n_getVarVal -> .)
    PLUS            reduce using rule 22 (p_n_getVarVal -> .)
    MINUS           reduce using rule 22 (p_n_getVarVal -> .)
    LESSTHAN        reduce using rule 22 (p_n_getVarVal -> .)
    LESSEQUAL       reduce using rule 22 (p_n_getVarVal -> .)
    GREATERTHAN     reduce using rule 22 (p_n_getVarVal -> .)
    GREATEREQUAL    reduce using rule 22 (p_n_getVarVal -> .)
    SAME            reduce using rule 22 (p_n_getVarVal -> .)
    NOEQUAL         reduce using rule 22 (p_n_getVarVal -> .)
    AND             reduce using rule 22 (p_n_getVarVal -> .)
    OR              reduce using rule 22 (p_n_getVarVal -> .)
    COMMA           reduce using rule 22 (p_n_getVarVal -> .)
    SEMICOLON       reduce using rule 22 (p_n_getVarVal -> .)
    RPAREN          reduce using rule 22 (p_n_getVarVal -> .)
    RSQUARE         reduce using rule 22 (p_n_getVarVal -> .)
    EQUAL           reduce using rule 22 (p_n_getVarVal -> .)
    HASTA           reduce using rule 22 (p_n_getVarVal -> .)
    HACER           reduce using rule 22 (p_n_getVarVal -> .)

    p_n_getVarVal                  shift and go to state 76

state 96

    (104) ciclo_f -> DESDE n_startCicle . asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (48) asigna -> . mult_asigna
    (49) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (50) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal

    ID              shift and go to state 108

    asigna                         shift and go to state 126
    mult_asigna                    shift and go to state 56
    variable                       shift and go to state 59

state 97

    (12) vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .

    COMMA           reduce using rule 12 (vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .)
    SEMICOLON       reduce using rule 12 (vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .)


state 98

    (32) param -> tipo_simple param_aux1 .

    RPAREN          reduce using rule 32 (param -> tipo_simple param_aux1 .)


state 99

    (33) param_aux1 -> ID . save_param
    (34) param_aux1 -> ID . save_param COMMA param
    (35) save_param -> .

    COMMA           reduce using rule 35 (save_param -> .)
    RPAREN          reduce using rule 35 (save_param -> .)

    save_param                     shift and go to state 127

state 100

    (23) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN . vars bloque
    (24) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN . bloque
    (6) vars -> . VAR vars_aux
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 39

    vars                           shift and go to state 128
    bloque                         shift and go to state 129

state 101

    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 130

state 102

    (28) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque .

    PRINCIPAL       reduce using rule 28 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque .)


state 103

    (25) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param . RPAREN vars bloque
    (26) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 131


state 104

    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN . vars bloque
    (30) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN . bloque
    (6) vars -> . VAR vars_aux
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 39

    vars                           shift and go to state 132
    bloque                         shift and go to state 133

state 105

    (52) llamada -> ID LPAREN mult_exp . RPAREN

    RPAREN          shift and go to state 134


state 106

    (20) variable -> ID LSQUARE mult_exp . RSQUARE

    RSQUARE         shift and go to state 135


state 107

    (53) lee -> LEE LPAREN variable . RPAREN

    RPAREN          shift and go to state 136


state 108

    (20) variable -> ID . LSQUARE mult_exp RSQUARE
    (21) variable -> ID . p_n_getVarVal
    (22) p_n_getVarVal -> .

    LSQUARE         shift and go to state 75
    RPAREN          reduce using rule 22 (p_n_getVarVal -> .)
    EQUAL           reduce using rule 22 (p_n_getVarVal -> .)

    p_n_getVarVal                  shift and go to state 76

state 109

    (49) mult_asigna -> variable EQUAL n_Operador . mult_exp n_asignQuad
    (50) mult_asigna -> variable EQUAL n_Operador . mult_asigna n_asignQuad
    (59) mult_exp -> . exp
    (60) mult_exp -> . exp COMMA mult_exp
    (49) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (50) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    ID              shift and go to state 95
    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)

    variable                       shift and go to state 137
    mult_exp                       shift and go to state 138
    mult_asigna                    shift and go to state 139
    exp                            shift and go to state 83
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    llamada                        shift and go to state 94

state 110

    (54) escribe -> ESCRIBE LPAREN mult_exp . n_escribeExp RPAREN SEMICOLON
    (56) n_escribeExp -> .

    RPAREN          reduce using rule 56 (n_escribeExp -> .)

    n_escribeExp                   shift and go to state 140

state 111

    (55) escribe -> ESCRIBE LPAREN mult_cte_s . n_escribeExp RPAREN SEMICOLON
    (56) n_escribeExp -> .

    RPAREN          reduce using rule 56 (n_escribeExp -> .)

    n_escribeExp                   shift and go to state 141

state 112

    (57) mult_cte_s -> CTE_S .
    (58) mult_cte_s -> CTE_S . COMMA mult_cte_s

    RPAREN          reduce using rule 57 (mult_cte_s -> CTE_S .)
    COMMA           shift and go to state 142


state 113

    (95) condicion -> SI LPAREN mult_exp . RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (96) condicion -> SI LPAREN mult_exp . RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad

    RPAREN          shift and go to state 143


state 114

    (100) ciclo_w -> MIENTRAS n_startCicle LPAREN . mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (59) mult_exp -> . exp
    (60) mult_exp -> . exp COMMA mult_exp
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    mult_exp                       shift and go to state 144
    exp                            shift and go to state 83
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 115

    (107) retorno -> REGRESA mult_exp SEMICOLON .

    ID              reduce using rule 107 (retorno -> REGRESA mult_exp SEMICOLON .)
    LEE             reduce using rule 107 (retorno -> REGRESA mult_exp SEMICOLON .)
    ESCRIBE         reduce using rule 107 (retorno -> REGRESA mult_exp SEMICOLON .)
    SI              reduce using rule 107 (retorno -> REGRESA mult_exp SEMICOLON .)
    MIENTRAS        reduce using rule 107 (retorno -> REGRESA mult_exp SEMICOLON .)
    REGRESA         reduce using rule 107 (retorno -> REGRESA mult_exp SEMICOLON .)
    DESDE           reduce using rule 107 (retorno -> REGRESA mult_exp SEMICOLON .)
    RBRACKET        reduce using rule 107 (retorno -> REGRESA mult_exp SEMICOLON .)


state 116

    (60) mult_exp -> exp COMMA . mult_exp
    (59) mult_exp -> . exp
    (60) mult_exp -> . exp COMMA mult_exp
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    exp                            shift and go to state 83
    mult_exp                       shift and go to state 145
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 117

    (61) exp -> t_exp n_orQuad .
    (62) exp -> t_exp n_orQuad . OR n_Operador exp

    COMMA           reduce using rule 61 (exp -> t_exp n_orQuad .)
    SEMICOLON       reduce using rule 61 (exp -> t_exp n_orQuad .)
    RPAREN          reduce using rule 61 (exp -> t_exp n_orQuad .)
    RSQUARE         reduce using rule 61 (exp -> t_exp n_orQuad .)
    HASTA           reduce using rule 61 (exp -> t_exp n_orQuad .)
    HACER           reduce using rule 61 (exp -> t_exp n_orQuad .)
    OR              shift and go to state 146


state 118

    (64) t_exp -> g_exp n_andQuad .
    (65) t_exp -> g_exp n_andQuad . AND n_Operador t_exp

    OR              reduce using rule 64 (t_exp -> g_exp n_andQuad .)
    COMMA           reduce using rule 64 (t_exp -> g_exp n_andQuad .)
    SEMICOLON       reduce using rule 64 (t_exp -> g_exp n_andQuad .)
    RPAREN          reduce using rule 64 (t_exp -> g_exp n_andQuad .)
    RSQUARE         reduce using rule 64 (t_exp -> g_exp n_andQuad .)
    HASTA           reduce using rule 64 (t_exp -> g_exp n_andQuad .)
    HACER           reduce using rule 64 (t_exp -> g_exp n_andQuad .)
    AND             shift and go to state 147


state 119

    (67) g_exp -> m_exp n_compareQuad .
    (68) g_exp -> m_exp n_compareQuad . LESSTHAN n_Operador g_exp
    (69) g_exp -> m_exp n_compareQuad . LESSEQUAL n_Operador g_exp
    (70) g_exp -> m_exp n_compareQuad . GREATERTHAN n_Operador g_exp
    (71) g_exp -> m_exp n_compareQuad . GREATEREQUAL n_Operador g_exp
    (72) g_exp -> m_exp n_compareQuad . SAME n_Operador g_exp
    (73) g_exp -> m_exp n_compareQuad . NOEQUAL n_Operador g_exp

    AND             reduce using rule 67 (g_exp -> m_exp n_compareQuad .)
    OR              reduce using rule 67 (g_exp -> m_exp n_compareQuad .)
    COMMA           reduce using rule 67 (g_exp -> m_exp n_compareQuad .)
    SEMICOLON       reduce using rule 67 (g_exp -> m_exp n_compareQuad .)
    RPAREN          reduce using rule 67 (g_exp -> m_exp n_compareQuad .)
    RSQUARE         reduce using rule 67 (g_exp -> m_exp n_compareQuad .)
    HASTA           reduce using rule 67 (g_exp -> m_exp n_compareQuad .)
    HACER           reduce using rule 67 (g_exp -> m_exp n_compareQuad .)
    LESSTHAN        shift and go to state 148
    LESSEQUAL       shift and go to state 149
    GREATERTHAN     shift and go to state 150
    GREATEREQUAL    shift and go to state 151
    SAME            shift and go to state 152
    NOEQUAL         shift and go to state 153


state 120

    (75) m_exp -> t n_sumQuad .
    (76) m_exp -> t n_sumQuad . PLUS n_Operador m_exp
    (77) m_exp -> t n_sumQuad . MINUS n_Operador m_exp

    LESSTHAN        reduce using rule 75 (m_exp -> t n_sumQuad .)
    LESSEQUAL       reduce using rule 75 (m_exp -> t n_sumQuad .)
    GREATERTHAN     reduce using rule 75 (m_exp -> t n_sumQuad .)
    GREATEREQUAL    reduce using rule 75 (m_exp -> t n_sumQuad .)
    SAME            reduce using rule 75 (m_exp -> t n_sumQuad .)
    NOEQUAL         reduce using rule 75 (m_exp -> t n_sumQuad .)
    AND             reduce using rule 75 (m_exp -> t n_sumQuad .)
    OR              reduce using rule 75 (m_exp -> t n_sumQuad .)
    COMMA           reduce using rule 75 (m_exp -> t n_sumQuad .)
    SEMICOLON       reduce using rule 75 (m_exp -> t n_sumQuad .)
    RPAREN          reduce using rule 75 (m_exp -> t n_sumQuad .)
    RSQUARE         reduce using rule 75 (m_exp -> t n_sumQuad .)
    HASTA           reduce using rule 75 (m_exp -> t n_sumQuad .)
    HACER           reduce using rule 75 (m_exp -> t n_sumQuad .)
    PLUS            shift and go to state 154
    MINUS           shift and go to state 155


state 121

    (79) t -> f n_multQuad .
    (80) t -> f n_multQuad . MULT n_Operador t
    (81) t -> f n_multQuad . DIV n_Operador t

    PLUS            reduce using rule 79 (t -> f n_multQuad .)
    MINUS           reduce using rule 79 (t -> f n_multQuad .)
    LESSTHAN        reduce using rule 79 (t -> f n_multQuad .)
    LESSEQUAL       reduce using rule 79 (t -> f n_multQuad .)
    GREATERTHAN     reduce using rule 79 (t -> f n_multQuad .)
    GREATEREQUAL    reduce using rule 79 (t -> f n_multQuad .)
    SAME            reduce using rule 79 (t -> f n_multQuad .)
    NOEQUAL         reduce using rule 79 (t -> f n_multQuad .)
    AND             reduce using rule 79 (t -> f n_multQuad .)
    OR              reduce using rule 79 (t -> f n_multQuad .)
    COMMA           reduce using rule 79 (t -> f n_multQuad .)
    SEMICOLON       reduce using rule 79 (t -> f n_multQuad .)
    RPAREN          reduce using rule 79 (t -> f n_multQuad .)
    RSQUARE         reduce using rule 79 (t -> f n_multQuad .)
    HASTA           reduce using rule 79 (t -> f n_multQuad .)
    HACER           reduce using rule 79 (t -> f n_multQuad .)
    MULT            shift and go to state 156
    DIV             shift and go to state 157


state 122

    (84) f -> LPAREN n_FF . mult_exp RPAREN n_FF
    (59) mult_exp -> . exp
    (60) mult_exp -> . exp COMMA mult_exp
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    mult_exp                       shift and go to state 158
    exp                            shift and go to state 83
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 123

    (85) f -> n_tempTypeI CTE_I . n_directPrint
    (93) n_directPrint -> .

    MULT            reduce using rule 93 (n_directPrint -> .)
    DIV             reduce using rule 93 (n_directPrint -> .)
    PLUS            reduce using rule 93 (n_directPrint -> .)
    MINUS           reduce using rule 93 (n_directPrint -> .)
    LESSTHAN        reduce using rule 93 (n_directPrint -> .)
    LESSEQUAL       reduce using rule 93 (n_directPrint -> .)
    GREATERTHAN     reduce using rule 93 (n_directPrint -> .)
    GREATEREQUAL    reduce using rule 93 (n_directPrint -> .)
    SAME            reduce using rule 93 (n_directPrint -> .)
    NOEQUAL         reduce using rule 93 (n_directPrint -> .)
    AND             reduce using rule 93 (n_directPrint -> .)
    OR              reduce using rule 93 (n_directPrint -> .)
    COMMA           reduce using rule 93 (n_directPrint -> .)
    SEMICOLON       reduce using rule 93 (n_directPrint -> .)
    RPAREN          reduce using rule 93 (n_directPrint -> .)
    RSQUARE         reduce using rule 93 (n_directPrint -> .)
    HASTA           reduce using rule 93 (n_directPrint -> .)
    HACER           reduce using rule 93 (n_directPrint -> .)

    n_directPrint                  shift and go to state 159

state 124

    (86) f -> n_tempTypeF CTE_F . n_directPrint
    (93) n_directPrint -> .

    MULT            reduce using rule 93 (n_directPrint -> .)
    DIV             reduce using rule 93 (n_directPrint -> .)
    PLUS            reduce using rule 93 (n_directPrint -> .)
    MINUS           reduce using rule 93 (n_directPrint -> .)
    LESSTHAN        reduce using rule 93 (n_directPrint -> .)
    LESSEQUAL       reduce using rule 93 (n_directPrint -> .)
    GREATERTHAN     reduce using rule 93 (n_directPrint -> .)
    GREATEREQUAL    reduce using rule 93 (n_directPrint -> .)
    SAME            reduce using rule 93 (n_directPrint -> .)
    NOEQUAL         reduce using rule 93 (n_directPrint -> .)
    AND             reduce using rule 93 (n_directPrint -> .)
    OR              reduce using rule 93 (n_directPrint -> .)
    COMMA           reduce using rule 93 (n_directPrint -> .)
    SEMICOLON       reduce using rule 93 (n_directPrint -> .)
    RPAREN          reduce using rule 93 (n_directPrint -> .)
    RSQUARE         reduce using rule 93 (n_directPrint -> .)
    HASTA           reduce using rule 93 (n_directPrint -> .)
    HACER           reduce using rule 93 (n_directPrint -> .)

    n_directPrint                  shift and go to state 160

state 125

    (87) f -> n_tempTypeC CTE_C . n_directPrint
    (93) n_directPrint -> .

    MULT            reduce using rule 93 (n_directPrint -> .)
    DIV             reduce using rule 93 (n_directPrint -> .)
    PLUS            reduce using rule 93 (n_directPrint -> .)
    MINUS           reduce using rule 93 (n_directPrint -> .)
    LESSTHAN        reduce using rule 93 (n_directPrint -> .)
    LESSEQUAL       reduce using rule 93 (n_directPrint -> .)
    GREATERTHAN     reduce using rule 93 (n_directPrint -> .)
    GREATEREQUAL    reduce using rule 93 (n_directPrint -> .)
    SAME            reduce using rule 93 (n_directPrint -> .)
    NOEQUAL         reduce using rule 93 (n_directPrint -> .)
    AND             reduce using rule 93 (n_directPrint -> .)
    OR              reduce using rule 93 (n_directPrint -> .)
    COMMA           reduce using rule 93 (n_directPrint -> .)
    SEMICOLON       reduce using rule 93 (n_directPrint -> .)
    RPAREN          reduce using rule 93 (n_directPrint -> .)
    RSQUARE         reduce using rule 93 (n_directPrint -> .)
    HASTA           reduce using rule 93 (n_directPrint -> .)
    HACER           reduce using rule 93 (n_directPrint -> .)

    n_directPrint                  shift and go to state 161

state 126

    (104) ciclo_f -> DESDE n_startCicle asigna . HASTA mult_exp n_evalExp_for HACER bloque n_endFor

    HASTA           shift and go to state 162


state 127

    (33) param_aux1 -> ID save_param .
    (34) param_aux1 -> ID save_param . COMMA param

    RPAREN          reduce using rule 33 (param_aux1 -> ID save_param .)
    COMMA           shift and go to state 163


state 128

    (23) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 164

state 129

    (24) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque .

    PRINCIPAL       reduce using rule 24 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque .)


state 130

    (27) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque .

    PRINCIPAL       reduce using rule 27 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque .)


state 131

    (25) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN . vars bloque
    (26) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN . bloque
    (6) vars -> . VAR vars_aux
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 39

    vars                           shift and go to state 165
    bloque                         shift and go to state 166

state 132

    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 167

state 133

    (30) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque .

    PRINCIPAL       reduce using rule 30 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque .)


state 134

    (52) llamada -> ID LPAREN mult_exp RPAREN .

    ID              reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    LEE             reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    ESCRIBE         reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    SI              reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    MIENTRAS        reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    REGRESA         reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    DESDE           reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    RBRACKET        reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    MULT            reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    DIV             reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    PLUS            reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    MINUS           reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    LESSTHAN        reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    LESSEQUAL       reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    GREATERTHAN     reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    GREATEREQUAL    reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    SAME            reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    NOEQUAL         reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    AND             reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    OR              reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    COMMA           reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    SEMICOLON       reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    RPAREN          reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    RSQUARE         reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    HASTA           reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)
    HACER           reduce using rule 52 (llamada -> ID LPAREN mult_exp RPAREN .)


state 135

    (20) variable -> ID LSQUARE mult_exp RSQUARE .

    EQUAL           reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    MULT            reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    DIV             reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    PLUS            reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    MINUS           reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    LESSTHAN        reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    LESSEQUAL       reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    GREATERTHAN     reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    GREATEREQUAL    reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    SAME            reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    NOEQUAL         reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    AND             reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    OR              reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    COMMA           reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    SEMICOLON       reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    RPAREN          reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    RSQUARE         reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    HASTA           reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)
    HACER           reduce using rule 20 (variable -> ID LSQUARE mult_exp RSQUARE .)


state 136

    (53) lee -> LEE LPAREN variable RPAREN .

    ID              reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    LEE             reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    ESCRIBE         reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    SI              reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    MIENTRAS        reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    REGRESA         reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    DESDE           reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)
    RBRACKET        reduce using rule 53 (lee -> LEE LPAREN variable RPAREN .)


state 137

    (49) mult_asigna -> variable . EQUAL n_Operador mult_exp n_asignQuad
    (50) mult_asigna -> variable . EQUAL n_Operador mult_asigna n_asignQuad
    (88) f -> variable .

    EQUAL           shift and go to state 78
    MULT            reduce using rule 88 (f -> variable .)
    DIV             reduce using rule 88 (f -> variable .)
    PLUS            reduce using rule 88 (f -> variable .)
    MINUS           reduce using rule 88 (f -> variable .)
    LESSTHAN        reduce using rule 88 (f -> variable .)
    LESSEQUAL       reduce using rule 88 (f -> variable .)
    GREATERTHAN     reduce using rule 88 (f -> variable .)
    GREATEREQUAL    reduce using rule 88 (f -> variable .)
    SAME            reduce using rule 88 (f -> variable .)
    NOEQUAL         reduce using rule 88 (f -> variable .)
    AND             reduce using rule 88 (f -> variable .)
    OR              reduce using rule 88 (f -> variable .)
    COMMA           reduce using rule 88 (f -> variable .)
    SEMICOLON       reduce using rule 88 (f -> variable .)
    HASTA           reduce using rule 88 (f -> variable .)


state 138

    (49) mult_asigna -> variable EQUAL n_Operador mult_exp . n_asignQuad
    (51) n_asignQuad -> .

    SEMICOLON       reduce using rule 51 (n_asignQuad -> .)
    HASTA           reduce using rule 51 (n_asignQuad -> .)

    n_asignQuad                    shift and go to state 168

state 139

    (50) mult_asigna -> variable EQUAL n_Operador mult_asigna . n_asignQuad
    (51) n_asignQuad -> .

    SEMICOLON       reduce using rule 51 (n_asignQuad -> .)
    HASTA           reduce using rule 51 (n_asignQuad -> .)

    n_asignQuad                    shift and go to state 169

state 140

    (54) escribe -> ESCRIBE LPAREN mult_exp n_escribeExp . RPAREN SEMICOLON

    RPAREN          shift and go to state 170


state 141

    (55) escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp . RPAREN SEMICOLON

    RPAREN          shift and go to state 171


state 142

    (58) mult_cte_s -> CTE_S COMMA . mult_cte_s
    (57) mult_cte_s -> . CTE_S
    (58) mult_cte_s -> . CTE_S COMMA mult_cte_s

    CTE_S           shift and go to state 112

    mult_cte_s                     shift and go to state 172

state 143

    (95) condicion -> SI LPAREN mult_exp RPAREN . n_ifQuad ENTONCES bloque n_endIfQuad
    (96) condicion -> SI LPAREN mult_exp RPAREN . n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (97) n_ifQuad -> .

    ENTONCES        reduce using rule 97 (n_ifQuad -> .)

    n_ifQuad                       shift and go to state 173

state 144

    (100) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp . RPAREN n_evalExp HAZ bloque n_endWhile

    RPAREN          shift and go to state 174


state 145

    (60) mult_exp -> exp COMMA mult_exp .

    SEMICOLON       reduce using rule 60 (mult_exp -> exp COMMA mult_exp .)
    RPAREN          reduce using rule 60 (mult_exp -> exp COMMA mult_exp .)
    RSQUARE         reduce using rule 60 (mult_exp -> exp COMMA mult_exp .)
    HASTA           reduce using rule 60 (mult_exp -> exp COMMA mult_exp .)
    HACER           reduce using rule 60 (mult_exp -> exp COMMA mult_exp .)


state 146

    (62) exp -> t_exp n_orQuad OR . n_Operador exp
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 175

state 147

    (65) t_exp -> g_exp n_andQuad AND . n_Operador t_exp
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 176

state 148

    (68) g_exp -> m_exp n_compareQuad LESSTHAN . n_Operador g_exp
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 177

state 149

    (69) g_exp -> m_exp n_compareQuad LESSEQUAL . n_Operador g_exp
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 178

state 150

    (70) g_exp -> m_exp n_compareQuad GREATERTHAN . n_Operador g_exp
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 179

state 151

    (71) g_exp -> m_exp n_compareQuad GREATEREQUAL . n_Operador g_exp
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 180

state 152

    (72) g_exp -> m_exp n_compareQuad SAME . n_Operador g_exp
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 181

state 153

    (73) g_exp -> m_exp n_compareQuad NOEQUAL . n_Operador g_exp
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 182

state 154

    (76) m_exp -> t n_sumQuad PLUS . n_Operador m_exp
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 183

state 155

    (77) m_exp -> t n_sumQuad MINUS . n_Operador m_exp
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 184

state 156

    (80) t -> f n_multQuad MULT . n_Operador t
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 185

state 157

    (81) t -> f n_multQuad DIV . n_Operador t
    (83) n_Operador -> .

    LPAREN          reduce using rule 83 (n_Operador -> .)
    ID              reduce using rule 83 (n_Operador -> .)
    CTE_I           reduce using rule 83 (n_Operador -> .)
    CTE_F           reduce using rule 83 (n_Operador -> .)
    CTE_C           reduce using rule 83 (n_Operador -> .)

    n_Operador                     shift and go to state 186

state 158

    (84) f -> LPAREN n_FF mult_exp . RPAREN n_FF

    RPAREN          shift and go to state 187


state 159

    (85) f -> n_tempTypeI CTE_I n_directPrint .

    MULT            reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    DIV             reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    PLUS            reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    MINUS           reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    LESSTHAN        reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    LESSEQUAL       reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    GREATERTHAN     reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    GREATEREQUAL    reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    SAME            reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    NOEQUAL         reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    AND             reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    OR              reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    COMMA           reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    SEMICOLON       reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    RPAREN          reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    RSQUARE         reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    HASTA           reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)
    HACER           reduce using rule 85 (f -> n_tempTypeI CTE_I n_directPrint .)


state 160

    (86) f -> n_tempTypeF CTE_F n_directPrint .

    MULT            reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    DIV             reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    PLUS            reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    MINUS           reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    LESSTHAN        reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    LESSEQUAL       reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    GREATERTHAN     reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    GREATEREQUAL    reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    SAME            reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    NOEQUAL         reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    AND             reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    OR              reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    COMMA           reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    SEMICOLON       reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    RPAREN          reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    RSQUARE         reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    HASTA           reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)
    HACER           reduce using rule 86 (f -> n_tempTypeF CTE_F n_directPrint .)


state 161

    (87) f -> n_tempTypeC CTE_C n_directPrint .

    MULT            reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    DIV             reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    PLUS            reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    MINUS           reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    LESSTHAN        reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    LESSEQUAL       reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    GREATERTHAN     reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    GREATEREQUAL    reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    SAME            reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    NOEQUAL         reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    AND             reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    OR              reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    COMMA           reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    SEMICOLON       reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    RPAREN          reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    RSQUARE         reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    HASTA           reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)
    HACER           reduce using rule 87 (f -> n_tempTypeC CTE_C n_directPrint .)


state 162

    (104) ciclo_f -> DESDE n_startCicle asigna HASTA . mult_exp n_evalExp_for HACER bloque n_endFor
    (59) mult_exp -> . exp
    (60) mult_exp -> . exp COMMA mult_exp
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    mult_exp                       shift and go to state 188
    exp                            shift and go to state 83
    t_exp                          shift and go to state 84
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 163

    (34) param_aux1 -> ID save_param COMMA . param
    (32) param -> . tipo_simple param_aux1
    (15) tipo_simple -> . INT n_save_type
    (16) tipo_simple -> . FLOAT n_save_type
    (17) tipo_simple -> . CHAR n_save_type

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    param                          shift and go to state 189
    tipo_simple                    shift and go to state 66

state 164

    (23) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque .

    PRINCIPAL       reduce using rule 23 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque .)


state 165

    (25) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars . bloque
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 190

state 166

    (26) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque .

    PRINCIPAL       reduce using rule 26 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque .)


state 167

    (29) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque .

    PRINCIPAL       reduce using rule 29 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque .)


state 168

    (49) mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad .

    SEMICOLON       reduce using rule 49 (mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad .)
    HASTA           reduce using rule 49 (mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad .)


state 169

    (50) mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad .

    SEMICOLON       reduce using rule 50 (mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad .)
    HASTA           reduce using rule 50 (mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad .)


state 170

    (54) escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 191


state 171

    (55) escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 192


state 172

    (58) mult_cte_s -> CTE_S COMMA mult_cte_s .

    RPAREN          reduce using rule 58 (mult_cte_s -> CTE_S COMMA mult_cte_s .)


state 173

    (95) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad . ENTONCES bloque n_endIfQuad
    (96) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad . ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad

    ENTONCES        shift and go to state 193


state 174

    (100) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN . n_evalExp HAZ bloque n_endWhile
    (102) n_evalExp -> .

    HAZ             reduce using rule 102 (n_evalExp -> .)

    n_evalExp                      shift and go to state 194

state 175

    (62) exp -> t_exp n_orQuad OR n_Operador . exp
    (61) exp -> . t_exp n_orQuad
    (62) exp -> . t_exp n_orQuad OR n_Operador exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    t_exp                          shift and go to state 84
    exp                            shift and go to state 195
    g_exp                          shift and go to state 85
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 176

    (65) t_exp -> g_exp n_andQuad AND n_Operador . t_exp
    (64) t_exp -> . g_exp n_andQuad
    (65) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    g_exp                          shift and go to state 85
    t_exp                          shift and go to state 196
    m_exp                          shift and go to state 86
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 177

    (68) g_exp -> m_exp n_compareQuad LESSTHAN n_Operador . g_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    m_exp                          shift and go to state 86
    g_exp                          shift and go to state 197
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 178

    (69) g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador . g_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    m_exp                          shift and go to state 86
    g_exp                          shift and go to state 198
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 179

    (70) g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador . g_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    m_exp                          shift and go to state 86
    g_exp                          shift and go to state 199
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 180

    (71) g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador . g_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    m_exp                          shift and go to state 86
    g_exp                          shift and go to state 200
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 181

    (72) g_exp -> m_exp n_compareQuad SAME n_Operador . g_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    m_exp                          shift and go to state 86
    g_exp                          shift and go to state 201
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 182

    (73) g_exp -> m_exp n_compareQuad NOEQUAL n_Operador . g_exp
    (67) g_exp -> . m_exp n_compareQuad
    (68) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (69) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (70) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (71) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (72) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (73) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    m_exp                          shift and go to state 86
    g_exp                          shift and go to state 202
    t                              shift and go to state 87
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 183

    (76) m_exp -> t n_sumQuad PLUS n_Operador . m_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    t                              shift and go to state 87
    m_exp                          shift and go to state 203
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 184

    (77) m_exp -> t n_sumQuad MINUS n_Operador . m_exp
    (75) m_exp -> . t n_sumQuad
    (76) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (77) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    t                              shift and go to state 87
    m_exp                          shift and go to state 204
    f                              shift and go to state 88
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 185

    (80) t -> f n_multQuad MULT n_Operador . t
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    f                              shift and go to state 88
    t                              shift and go to state 205
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 186

    (81) t -> f n_multQuad DIV n_Operador . t
    (79) t -> . f n_multQuad
    (80) t -> . f n_multQuad MULT n_Operador t
    (81) t -> . f n_multQuad DIV n_Operador t
    (84) f -> . LPAREN n_FF mult_exp RPAREN n_FF
    (85) f -> . n_tempTypeI CTE_I n_directPrint
    (86) f -> . n_tempTypeF CTE_F n_directPrint
    (87) f -> . n_tempTypeC CTE_C n_directPrint
    (88) f -> . variable
    (89) f -> . llamada
    (90) n_tempTypeI -> .
    (91) n_tempTypeF -> .
    (92) n_tempTypeC -> .
    (20) variable -> . ID LSQUARE mult_exp RSQUARE
    (21) variable -> . ID p_n_getVarVal
    (52) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 89
    CTE_I           reduce using rule 90 (n_tempTypeI -> .)
    CTE_F           reduce using rule 91 (n_tempTypeF -> .)
    CTE_C           reduce using rule 92 (n_tempTypeC -> .)
    ID              shift and go to state 95

    f                              shift and go to state 88
    t                              shift and go to state 206
    n_tempTypeI                    shift and go to state 90
    n_tempTypeF                    shift and go to state 91
    n_tempTypeC                    shift and go to state 92
    variable                       shift and go to state 93
    llamada                        shift and go to state 94

state 187

    (84) f -> LPAREN n_FF mult_exp RPAREN . n_FF
    (94) n_FF -> .

    MULT            reduce using rule 94 (n_FF -> .)
    DIV             reduce using rule 94 (n_FF -> .)
    PLUS            reduce using rule 94 (n_FF -> .)
    MINUS           reduce using rule 94 (n_FF -> .)
    LESSTHAN        reduce using rule 94 (n_FF -> .)
    LESSEQUAL       reduce using rule 94 (n_FF -> .)
    GREATERTHAN     reduce using rule 94 (n_FF -> .)
    GREATEREQUAL    reduce using rule 94 (n_FF -> .)
    SAME            reduce using rule 94 (n_FF -> .)
    NOEQUAL         reduce using rule 94 (n_FF -> .)
    AND             reduce using rule 94 (n_FF -> .)
    OR              reduce using rule 94 (n_FF -> .)
    COMMA           reduce using rule 94 (n_FF -> .)
    SEMICOLON       reduce using rule 94 (n_FF -> .)
    RPAREN          reduce using rule 94 (n_FF -> .)
    RSQUARE         reduce using rule 94 (n_FF -> .)
    HASTA           reduce using rule 94 (n_FF -> .)
    HACER           reduce using rule 94 (n_FF -> .)

    n_FF                           shift and go to state 207

state 188

    (104) ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp . n_evalExp_for HACER bloque n_endFor
    (105) n_evalExp_for -> .

    HACER           reduce using rule 105 (n_evalExp_for -> .)

    n_evalExp_for                  shift and go to state 208

state 189

    (34) param_aux1 -> ID save_param COMMA param .

    RPAREN          reduce using rule 34 (param_aux1 -> ID save_param COMMA param .)


state 190

    (25) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque .

    PRINCIPAL       reduce using rule 25 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque .)


state 191

    (54) escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .

    ID              reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    LEE             reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    SI              reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    REGRESA         reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    DESDE           reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 54 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)


state 192

    (55) escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .

    ID              reduce using rule 55 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    LEE             reduce using rule 55 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 55 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    SI              reduce using rule 55 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 55 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    REGRESA         reduce using rule 55 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    DESDE           reduce using rule 55 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 55 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)


state 193

    (95) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES . bloque n_endIfQuad
    (96) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES . bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 209

state 194

    (100) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp . HAZ bloque n_endWhile

    HAZ             shift and go to state 210


state 195

    (62) exp -> t_exp n_orQuad OR n_Operador exp .

    COMMA           reduce using rule 62 (exp -> t_exp n_orQuad OR n_Operador exp .)
    SEMICOLON       reduce using rule 62 (exp -> t_exp n_orQuad OR n_Operador exp .)
    RPAREN          reduce using rule 62 (exp -> t_exp n_orQuad OR n_Operador exp .)
    RSQUARE         reduce using rule 62 (exp -> t_exp n_orQuad OR n_Operador exp .)
    HASTA           reduce using rule 62 (exp -> t_exp n_orQuad OR n_Operador exp .)
    HACER           reduce using rule 62 (exp -> t_exp n_orQuad OR n_Operador exp .)


state 196

    (65) t_exp -> g_exp n_andQuad AND n_Operador t_exp .

    OR              reduce using rule 65 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    COMMA           reduce using rule 65 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    SEMICOLON       reduce using rule 65 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    RPAREN          reduce using rule 65 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    RSQUARE         reduce using rule 65 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    HASTA           reduce using rule 65 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    HACER           reduce using rule 65 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)


state 197

    (68) g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .

    AND             reduce using rule 68 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    OR              reduce using rule 68 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    COMMA           reduce using rule 68 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    SEMICOLON       reduce using rule 68 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    RPAREN          reduce using rule 68 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    RSQUARE         reduce using rule 68 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    HASTA           reduce using rule 68 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    HACER           reduce using rule 68 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)


state 198

    (69) g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .

    AND             reduce using rule 69 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    OR              reduce using rule 69 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    COMMA           reduce using rule 69 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    SEMICOLON       reduce using rule 69 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    RPAREN          reduce using rule 69 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    RSQUARE         reduce using rule 69 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    HASTA           reduce using rule 69 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    HACER           reduce using rule 69 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)


state 199

    (70) g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .

    AND             reduce using rule 70 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    OR              reduce using rule 70 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    COMMA           reduce using rule 70 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    SEMICOLON       reduce using rule 70 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    RPAREN          reduce using rule 70 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    RSQUARE         reduce using rule 70 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    HASTA           reduce using rule 70 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    HACER           reduce using rule 70 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)


state 200

    (71) g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .

    AND             reduce using rule 71 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    OR              reduce using rule 71 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    COMMA           reduce using rule 71 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    SEMICOLON       reduce using rule 71 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    RPAREN          reduce using rule 71 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    RSQUARE         reduce using rule 71 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    HASTA           reduce using rule 71 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    HACER           reduce using rule 71 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)


state 201

    (72) g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .

    AND             reduce using rule 72 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    OR              reduce using rule 72 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    COMMA           reduce using rule 72 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    SEMICOLON       reduce using rule 72 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    RPAREN          reduce using rule 72 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    RSQUARE         reduce using rule 72 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    HASTA           reduce using rule 72 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    HACER           reduce using rule 72 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)


state 202

    (73) g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .

    AND             reduce using rule 73 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    OR              reduce using rule 73 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    COMMA           reduce using rule 73 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    SEMICOLON       reduce using rule 73 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    RPAREN          reduce using rule 73 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    RSQUARE         reduce using rule 73 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    HASTA           reduce using rule 73 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    HACER           reduce using rule 73 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)


state 203

    (76) m_exp -> t n_sumQuad PLUS n_Operador m_exp .

    LESSTHAN        reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    LESSEQUAL       reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    GREATERTHAN     reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    GREATEREQUAL    reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    SAME            reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    NOEQUAL         reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    AND             reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    OR              reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    COMMA           reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    SEMICOLON       reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    RPAREN          reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    RSQUARE         reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    HASTA           reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    HACER           reduce using rule 76 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)


state 204

    (77) m_exp -> t n_sumQuad MINUS n_Operador m_exp .

    LESSTHAN        reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    LESSEQUAL       reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    GREATERTHAN     reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    GREATEREQUAL    reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    SAME            reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    NOEQUAL         reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    AND             reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    OR              reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    COMMA           reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    SEMICOLON       reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    RPAREN          reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    RSQUARE         reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    HASTA           reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    HACER           reduce using rule 77 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)


state 205

    (80) t -> f n_multQuad MULT n_Operador t .

    PLUS            reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    MINUS           reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    LESSTHAN        reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    LESSEQUAL       reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    GREATERTHAN     reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    GREATEREQUAL    reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    SAME            reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    NOEQUAL         reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    AND             reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    OR              reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    COMMA           reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    SEMICOLON       reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    RPAREN          reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    RSQUARE         reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    HASTA           reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)
    HACER           reduce using rule 80 (t -> f n_multQuad MULT n_Operador t .)


state 206

    (81) t -> f n_multQuad DIV n_Operador t .

    PLUS            reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    MINUS           reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    LESSTHAN        reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    LESSEQUAL       reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    GREATERTHAN     reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    GREATEREQUAL    reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    SAME            reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    NOEQUAL         reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    AND             reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    OR              reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    COMMA           reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    SEMICOLON       reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    RPAREN          reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    RSQUARE         reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    HASTA           reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)
    HACER           reduce using rule 81 (t -> f n_multQuad DIV n_Operador t .)


state 207

    (84) f -> LPAREN n_FF mult_exp RPAREN n_FF .

    MULT            reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    DIV             reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    PLUS            reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    MINUS           reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    LESSTHAN        reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    LESSEQUAL       reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    GREATERTHAN     reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    GREATEREQUAL    reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    SAME            reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    NOEQUAL         reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    AND             reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    OR              reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    COMMA           reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    SEMICOLON       reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    RPAREN          reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    RSQUARE         reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    HASTA           reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)
    HACER           reduce using rule 84 (f -> LPAREN n_FF mult_exp RPAREN n_FF .)


state 208

    (104) ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for . HACER bloque n_endFor

    HACER           shift and go to state 211


state 209

    (95) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque . n_endIfQuad
    (96) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque . SINO p_n_sinoQuad bloque n_endIfQuad
    (98) n_endIfQuad -> .

    SINO            shift and go to state 213
    ID              reduce using rule 98 (n_endIfQuad -> .)
    LEE             reduce using rule 98 (n_endIfQuad -> .)
    ESCRIBE         reduce using rule 98 (n_endIfQuad -> .)
    SI              reduce using rule 98 (n_endIfQuad -> .)
    MIENTRAS        reduce using rule 98 (n_endIfQuad -> .)
    REGRESA         reduce using rule 98 (n_endIfQuad -> .)
    DESDE           reduce using rule 98 (n_endIfQuad -> .)
    RBRACKET        reduce using rule 98 (n_endIfQuad -> .)

    n_endIfQuad                    shift and go to state 212

state 210

    (100) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ . bloque n_endWhile
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 214

state 211

    (104) ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER . bloque n_endFor
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 215

state 212

    (95) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .

    ID              reduce using rule 95 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    LEE             reduce using rule 95 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    ESCRIBE         reduce using rule 95 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    SI              reduce using rule 95 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    MIENTRAS        reduce using rule 95 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    REGRESA         reduce using rule 95 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    DESDE           reduce using rule 95 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    RBRACKET        reduce using rule 95 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)


state 213

    (96) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO . p_n_sinoQuad bloque n_endIfQuad
    (99) p_n_sinoQuad -> .

    LBRACKET        reduce using rule 99 (p_n_sinoQuad -> .)

    p_n_sinoQuad                   shift and go to state 216

state 214

    (100) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque . n_endWhile
    (103) n_endWhile -> .

    ID              reduce using rule 103 (n_endWhile -> .)
    LEE             reduce using rule 103 (n_endWhile -> .)
    ESCRIBE         reduce using rule 103 (n_endWhile -> .)
    SI              reduce using rule 103 (n_endWhile -> .)
    MIENTRAS        reduce using rule 103 (n_endWhile -> .)
    REGRESA         reduce using rule 103 (n_endWhile -> .)
    DESDE           reduce using rule 103 (n_endWhile -> .)
    RBRACKET        reduce using rule 103 (n_endWhile -> .)

    n_endWhile                     shift and go to state 217

state 215

    (104) ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque . n_endFor
    (106) n_endFor -> .

    ID              reduce using rule 106 (n_endFor -> .)
    LEE             reduce using rule 106 (n_endFor -> .)
    ESCRIBE         reduce using rule 106 (n_endFor -> .)
    SI              reduce using rule 106 (n_endFor -> .)
    MIENTRAS        reduce using rule 106 (n_endFor -> .)
    REGRESA         reduce using rule 106 (n_endFor -> .)
    DESDE           reduce using rule 106 (n_endFor -> .)
    RBRACKET        reduce using rule 106 (n_endFor -> .)

    n_endFor                       shift and go to state 218

state 216

    (96) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad . bloque n_endIfQuad
    (36) bloque -> . LBRACKET mult_estatutos RBRACKET
    (37) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 39

    bloque                         shift and go to state 219

state 217

    (100) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .

    ID              reduce using rule 100 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    LEE             reduce using rule 100 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    ESCRIBE         reduce using rule 100 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    SI              reduce using rule 100 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    MIENTRAS        reduce using rule 100 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    REGRESA         reduce using rule 100 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    DESDE           reduce using rule 100 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    RBRACKET        reduce using rule 100 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)


state 218

    (104) ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor .

    ID              reduce using rule 104 (ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    LEE             reduce using rule 104 (ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    ESCRIBE         reduce using rule 104 (ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    SI              reduce using rule 104 (ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    MIENTRAS        reduce using rule 104 (ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    REGRESA         reduce using rule 104 (ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    DESDE           reduce using rule 104 (ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    RBRACKET        reduce using rule 104 (ciclo_f -> DESDE n_startCicle asigna HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)


state 219

    (96) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque . n_endIfQuad
    (98) n_endIfQuad -> .

    ID              reduce using rule 98 (n_endIfQuad -> .)
    LEE             reduce using rule 98 (n_endIfQuad -> .)
    ESCRIBE         reduce using rule 98 (n_endIfQuad -> .)
    SI              reduce using rule 98 (n_endIfQuad -> .)
    MIENTRAS        reduce using rule 98 (n_endIfQuad -> .)
    REGRESA         reduce using rule 98 (n_endIfQuad -> .)
    DESDE           reduce using rule 98 (n_endIfQuad -> .)
    RBRACKET        reduce using rule 98 (n_endIfQuad -> .)

    n_endIfQuad                    shift and go to state 220

state 220

    (96) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .

    ID              reduce using rule 96 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    LEE             reduce using rule 96 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    ESCRIBE         reduce using rule 96 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    SI              reduce using rule 96 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    MIENTRAS        reduce using rule 96 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    REGRESA         reduce using rule 96 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    DESDE           reduce using rule 96 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    RBRACKET        reduce using rule 96 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)

