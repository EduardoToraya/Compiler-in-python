Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars mult_funcion principal
Rule 2     programa -> PROGRAMA p_n_mainJump ID SEMICOLON mult_funcion principal
Rule 3     programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars principal
Rule 4     programa -> PROGRAMA p_n_mainJump ID SEMICOLON principal
Rule 5     p_n_mainJump -> <empty>
Rule 6     principal -> PRINCIPAL n_register_glob LPAREN RPAREN bloque
Rule 7     n_register_glob -> <empty>
Rule 8     vars -> VAR vars_aux
Rule 9     vars_aux -> tipo_simple vars_aux1 SEMICOLON
Rule 10    vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux
Rule 11    vars_aux1 -> vars_aux2
Rule 12    vars_aux1 -> vars_aux2 COMMA vars_aux1
Rule 13    vars_aux2 -> ID n_save_var
Rule 14    vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE
Rule 15    n_save_array -> <empty>
Rule 16    n_save_var -> <empty>
Rule 17    tipo_simple -> INT n_save_type
Rule 18    tipo_simple -> FLOAT n_save_type
Rule 19    tipo_simple -> CHAR n_save_type
Rule 20    n_save_type -> <empty>
Rule 21    empty -> <empty>
Rule 22    variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
Rule 23    variable -> ID n_getVarVal
Rule 24    n_arr_quad -> <empty>
Rule 25    n_hasDim -> <empty>
Rule 26    n_getVarVal -> <empty>
Rule 27    mult_funcion -> funcion
Rule 28    mult_funcion -> funcion mult_funcion
Rule 29    funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
Rule 30    funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func
Rule 31    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
Rule 32    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func
Rule 33    funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func
Rule 34    funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func
Rule 35    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func
Rule 36    funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func
Rule 37    n_register_func -> <empty>
Rule 38    param -> tipo_simple param_aux1
Rule 39    param_aux1 -> ID save_param
Rule 40    param_aux1 -> ID save_param COMMA param
Rule 41    save_param -> <empty>
Rule 42    n_endof_func -> <empty>
Rule 43    bloque -> LBRACKET mult_estatutos RBRACKET
Rule 44    bloque -> LBRACKET empty RBRACKET
Rule 45    mult_estatutos -> estatuto
Rule 46    mult_estatutos -> estatuto mult_estatutos
Rule 47    estatuto -> asigna SEMICOLON
Rule 48    estatuto -> llamada SEMICOLON
Rule 49    estatuto -> lee
Rule 50    estatuto -> escribe
Rule 51    estatuto -> condicion
Rule 52    estatuto -> ciclo_w
Rule 53    estatuto -> retorno
Rule 54    estatuto -> ciclo_f
Rule 55    asigna -> mult_asigna
Rule 56    mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad
Rule 57    mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad
Rule 58    n_asignQuad -> <empty>
Rule 59    param_exp -> mult_exp n_parameter_action
Rule 60    param_exp -> mult_exp n_parameter_action COMMA param_exp
Rule 61    n_parameter_action -> <empty>
Rule 62    llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
Rule 63    llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action
Rule 64    n_last_param_action -> <empty>
Rule 65    n_start_pcounter -> <empty>
Rule 66    n_verify_func -> <empty>
Rule 67    lee -> LEE LPAREN variable RPAREN SEMICOLON
Rule 68    escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
Rule 69    escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON
Rule 70    n_escribeExp -> <empty>
Rule 71    mult_cte_s -> CTE_S
Rule 72    mult_cte_s -> CTE_S COMMA mult_cte_s
Rule 73    mult_exp -> exp
Rule 74    mult_exp -> exp COMMA mult_exp
Rule 75    exp -> t_exp n_orQuad
Rule 76    exp -> t_exp n_orQuad OR n_Operador exp
Rule 77    n_orQuad -> <empty>
Rule 78    t_exp -> g_exp n_andQuad
Rule 79    t_exp -> g_exp n_andQuad AND n_Operador t_exp
Rule 80    n_andQuad -> <empty>
Rule 81    g_exp -> m_exp n_compareQuad
Rule 82    g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp
Rule 83    g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp
Rule 84    g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp
Rule 85    g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
Rule 86    g_exp -> m_exp n_compareQuad SAME n_Operador g_exp
Rule 87    g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp
Rule 88    n_compareQuad -> <empty>
Rule 89    m_exp -> t n_sumQuad
Rule 90    m_exp -> t n_sumQuad PLUS n_Operador m_exp
Rule 91    m_exp -> t n_sumQuad MINUS n_Operador m_exp
Rule 92    n_sumQuad -> <empty>
Rule 93    t -> f n_multQuad
Rule 94    t -> f n_multQuad MULT n_Operador t
Rule 95    t -> f n_multQuad DIV n_Operador t
Rule 96    n_multQuad -> <empty>
Rule 97    n_Operador -> <empty>
Rule 98    f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF
Rule 99    f -> n_tempTypeI MINUS CTE_I n_directPrint_neg
Rule 100   f -> n_tempTypeF MINUS CTE_F n_directPrint_neg
Rule 101   f -> n_tempTypeI CTE_I n_directPrint
Rule 102   f -> n_tempTypeF CTE_F n_directPrint
Rule 103   f -> n_tempTypeC CTE_C n_directPrint
Rule 104   f -> variable
Rule 105   f -> llamada
Rule 106   n_tempTypeI -> <empty>
Rule 107   n_tempTypeF -> <empty>
Rule 108   n_tempTypeC -> <empty>
Rule 109   n_directPrint_neg -> <empty>
Rule 110   n_directPrint -> <empty>
Rule 111   n_start_FF -> <empty>
Rule 112   n_end_FF -> <empty>
Rule 113   condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
Rule 114   condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
Rule 115   n_ifQuad -> <empty>
Rule 116   n_endIfQuad -> <empty>
Rule 117   p_n_sinoQuad -> <empty>
Rule 118   ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
Rule 119   n_startCicle -> <empty>
Rule 120   n_evalExp -> <empty>
Rule 121   n_endWhile -> <empty>
Rule 122   ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
Rule 123   n_evalExp_for -> <empty>
Rule 124   n_endFor -> <empty>
Rule 125   retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON
Rule 126   n_regresaExp -> <empty>

Terminals, with rules where they appear

AND                  : 79
CHAR                 : 19
COMMA                : 12 40 60 72 74
COMMENT              : 
CTE_C                : 103
CTE_F                : 100 102
CTE_I                : 14 99 101
CTE_S                : 71 72
DESDE                : 122
DIV                  : 95
ENTONCES             : 113 114
EQUAL                : 56 57
ESCRIBE              : 68 69
FLOAT                : 18
FUNCION              : 29 30 31 32 33 34 35 36
GREATEREQUAL         : 85
GREATERTHAN          : 84
HACER                : 122
HASTA                : 122
HAZ                  : 118
ID                   : 1 2 3 4 13 14 22 23 29 30 31 32 33 34 35 36 39 40 62 63
INT                  : 17
LBRACKET             : 43 44
LEE                  : 67
LESSEQUAL            : 83
LESSTHAN             : 82
LPAREN               : 6 29 30 31 32 33 34 35 36 62 63 67 68 69 98 113 114 118 125
LSQUARE              : 14 22
MIENTRAS             : 118
MINUS                : 91 99 100
MULT                 : 94
NOEQUAL              : 87
OR                   : 76
PLUS                 : 90
PRINCIPAL            : 6
PROGRAMA             : 1 2 3 4
RBRACKET             : 43 44
REGRESA              : 125
RPAREN               : 6 29 30 31 32 33 34 35 36 62 63 67 68 69 98 113 114 118 125
RSQUARE              : 14 22
SAME                 : 86
SEMICOLON            : 1 2 3 4 9 10 47 48 67 68 69 125
SI                   : 113 114
SINO                 : 114
VAR                  : 8
VOID                 : 31 32 35 36
error                : 

Nonterminals, with rules where they appear

asigna               : 47 122
bloque               : 6 29 30 31 32 33 34 35 36 113 114 114 118 122
ciclo_f              : 54
ciclo_w              : 52
condicion            : 51
empty                : 44
escribe              : 50
estatuto             : 45 46
exp                  : 73 74 76
f                    : 93 94 95
funcion              : 27 28
g_exp                : 78 79 82 83 84 85 86 87
lee                  : 49
llamada              : 48 105
m_exp                : 81 82 83 84 85 86 87 90 91
mult_asigna          : 55 57
mult_cte_s           : 69 72
mult_estatutos       : 43 46
mult_exp             : 22 56 59 60 68 74 98 113 114 118 122 125
mult_funcion         : 1 2 28
n_Operador           : 56 57 76 79 82 83 84 85 86 87 90 91 94 95
n_andQuad            : 78 79
n_arr_quad           : 22
n_asignQuad          : 56 57
n_compareQuad        : 81 82 83 84 85 86 87
n_directPrint        : 101 102 103
n_directPrint_neg    : 99 100
n_endFor             : 122
n_endIfQuad          : 113 114
n_endWhile           : 118
n_end_FF             : 22 62 63 98
n_endof_func         : 29 30 31 32 33 34 35 36
n_escribeExp         : 68 69
n_evalExp            : 118
n_evalExp_for        : 122
n_getVarVal          : 22 23
n_hasDim             : 22
n_ifQuad             : 113 114
n_last_param_action  : 62 63
n_multQuad           : 93 94 95
n_orQuad             : 75 76
n_parameter_action   : 59 60
n_register_func      : 29 30 31 32 33 34 35 36
n_register_glob      : 6
n_regresaExp         : 125
n_save_array         : 14
n_save_type          : 17 18 19 31 32 35 36
n_save_var           : 13
n_startCicle         : 118 122
n_start_FF           : 22 62 63 98
n_start_pcounter     : 62 63
n_sumQuad            : 89 90 91
n_tempTypeC          : 103
n_tempTypeF          : 100 102
n_tempTypeI          : 99 101
n_verify_func        : 62 63
p_n_mainJump         : 1 2 3 4
p_n_sinoQuad         : 114
param                : 29 30 31 32 40
param_aux1           : 38
param_exp            : 60 62
principal            : 1 2 3 4
programa             : 0
retorno              : 53
save_param           : 39 40
t                    : 89 90 91 94 95
t_exp                : 75 76 79
tipo_simple          : 9 10 29 30 33 34 38
variable             : 56 57 67 104
vars                 : 1 3 29 31 33 35
vars_aux             : 8 10
vars_aux1            : 9 10 12
vars_aux2            : 11 12

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA p_n_mainJump ID SEMICOLON vars mult_funcion principal
    (2) programa -> . PROGRAMA p_n_mainJump ID SEMICOLON mult_funcion principal
    (3) programa -> . PROGRAMA p_n_mainJump ID SEMICOLON vars principal
    (4) programa -> . PROGRAMA p_n_mainJump ID SEMICOLON principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . p_n_mainJump ID SEMICOLON vars mult_funcion principal
    (2) programa -> PROGRAMA . p_n_mainJump ID SEMICOLON mult_funcion principal
    (3) programa -> PROGRAMA . p_n_mainJump ID SEMICOLON vars principal
    (4) programa -> PROGRAMA . p_n_mainJump ID SEMICOLON principal
    (5) p_n_mainJump -> .

    ID              reduce using rule 5 (p_n_mainJump -> .)

    p_n_mainJump                   shift and go to state 3

state 3

    (1) programa -> PROGRAMA p_n_mainJump . ID SEMICOLON vars mult_funcion principal
    (2) programa -> PROGRAMA p_n_mainJump . ID SEMICOLON mult_funcion principal
    (3) programa -> PROGRAMA p_n_mainJump . ID SEMICOLON vars principal
    (4) programa -> PROGRAMA p_n_mainJump . ID SEMICOLON principal

    ID              shift and go to state 4


state 4

    (1) programa -> PROGRAMA p_n_mainJump ID . SEMICOLON vars mult_funcion principal
    (2) programa -> PROGRAMA p_n_mainJump ID . SEMICOLON mult_funcion principal
    (3) programa -> PROGRAMA p_n_mainJump ID . SEMICOLON vars principal
    (4) programa -> PROGRAMA p_n_mainJump ID . SEMICOLON principal

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAMA p_n_mainJump ID SEMICOLON . vars mult_funcion principal
    (2) programa -> PROGRAMA p_n_mainJump ID SEMICOLON . mult_funcion principal
    (3) programa -> PROGRAMA p_n_mainJump ID SEMICOLON . vars principal
    (4) programa -> PROGRAMA p_n_mainJump ID SEMICOLON . principal
    (8) vars -> . VAR vars_aux
    (27) mult_funcion -> . funcion
    (28) mult_funcion -> . funcion mult_funcion
    (6) principal -> . PRINCIPAL n_register_glob LPAREN RPAREN bloque
    (29) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (30) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (31) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (32) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (33) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (34) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func
    (35) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (36) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func

    VAR             shift and go to state 9
    PRINCIPAL       shift and go to state 11
    FUNCION         shift and go to state 12

    vars                           shift and go to state 6
    mult_funcion                   shift and go to state 7
    principal                      shift and go to state 8
    funcion                        shift and go to state 10

state 6

    (1) programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars . mult_funcion principal
    (3) programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars . principal
    (27) mult_funcion -> . funcion
    (28) mult_funcion -> . funcion mult_funcion
    (6) principal -> . PRINCIPAL n_register_glob LPAREN RPAREN bloque
    (29) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (30) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (31) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (32) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (33) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (34) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func
    (35) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (36) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func

    PRINCIPAL       shift and go to state 11
    FUNCION         shift and go to state 12

    mult_funcion                   shift and go to state 13
    principal                      shift and go to state 14
    funcion                        shift and go to state 10

state 7

    (2) programa -> PROGRAMA p_n_mainJump ID SEMICOLON mult_funcion . principal
    (6) principal -> . PRINCIPAL n_register_glob LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 11

    principal                      shift and go to state 15

state 8

    (4) programa -> PROGRAMA p_n_mainJump ID SEMICOLON principal .

    $end            reduce using rule 4 (programa -> PROGRAMA p_n_mainJump ID SEMICOLON principal .)


state 9

    (8) vars -> VAR . vars_aux
    (9) vars_aux -> . tipo_simple vars_aux1 SEMICOLON
    (10) vars_aux -> . tipo_simple vars_aux1 SEMICOLON vars_aux
    (17) tipo_simple -> . INT n_save_type
    (18) tipo_simple -> . FLOAT n_save_type
    (19) tipo_simple -> . CHAR n_save_type

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    vars_aux                       shift and go to state 16
    tipo_simple                    shift and go to state 17

state 10

    (27) mult_funcion -> funcion .
    (28) mult_funcion -> funcion . mult_funcion
    (27) mult_funcion -> . funcion
    (28) mult_funcion -> . funcion mult_funcion
    (29) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (30) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (31) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (32) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (33) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (34) funcion -> . FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func
    (35) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (36) funcion -> . FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func

    PRINCIPAL       reduce using rule 27 (mult_funcion -> funcion .)
    FUNCION         shift and go to state 12

    funcion                        shift and go to state 10
    mult_funcion                   shift and go to state 21

state 11

    (6) principal -> PRINCIPAL . n_register_glob LPAREN RPAREN bloque
    (7) n_register_glob -> .

    LPAREN          reduce using rule 7 (n_register_glob -> .)

    n_register_glob                shift and go to state 22

state 12

    (29) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (30) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (31) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (32) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (33) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (34) funcion -> FUNCION . tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func
    (35) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (36) funcion -> FUNCION . VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func
    (17) tipo_simple -> . INT n_save_type
    (18) tipo_simple -> . FLOAT n_save_type
    (19) tipo_simple -> . CHAR n_save_type

    VOID            shift and go to state 24
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo_simple                    shift and go to state 23

state 13

    (1) programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars mult_funcion . principal
    (6) principal -> . PRINCIPAL n_register_glob LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 11

    principal                      shift and go to state 25

state 14

    (3) programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars principal .

    $end            reduce using rule 3 (programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars principal .)


state 15

    (2) programa -> PROGRAMA p_n_mainJump ID SEMICOLON mult_funcion principal .

    $end            reduce using rule 2 (programa -> PROGRAMA p_n_mainJump ID SEMICOLON mult_funcion principal .)


state 16

    (8) vars -> VAR vars_aux .

    PRINCIPAL       reduce using rule 8 (vars -> VAR vars_aux .)
    FUNCION         reduce using rule 8 (vars -> VAR vars_aux .)
    LBRACKET        reduce using rule 8 (vars -> VAR vars_aux .)


state 17

    (9) vars_aux -> tipo_simple . vars_aux1 SEMICOLON
    (10) vars_aux -> tipo_simple . vars_aux1 SEMICOLON vars_aux
    (11) vars_aux1 -> . vars_aux2
    (12) vars_aux1 -> . vars_aux2 COMMA vars_aux1
    (13) vars_aux2 -> . ID n_save_var
    (14) vars_aux2 -> . ID LSQUARE CTE_I n_save_array RSQUARE

    ID              shift and go to state 28

    vars_aux1                      shift and go to state 26
    vars_aux2                      shift and go to state 27

state 18

    (17) tipo_simple -> INT . n_save_type
    (20) n_save_type -> .

    ID              reduce using rule 20 (n_save_type -> .)

    n_save_type                    shift and go to state 29

state 19

    (18) tipo_simple -> FLOAT . n_save_type
    (20) n_save_type -> .

    ID              reduce using rule 20 (n_save_type -> .)

    n_save_type                    shift and go to state 30

state 20

    (19) tipo_simple -> CHAR . n_save_type
    (20) n_save_type -> .

    ID              reduce using rule 20 (n_save_type -> .)

    n_save_type                    shift and go to state 31

state 21

    (28) mult_funcion -> funcion mult_funcion .

    PRINCIPAL       reduce using rule 28 (mult_funcion -> funcion mult_funcion .)


state 22

    (6) principal -> PRINCIPAL n_register_glob . LPAREN RPAREN bloque

    LPAREN          shift and go to state 32


state 23

    (29) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (30) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (33) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (34) funcion -> FUNCION tipo_simple . ID n_register_func LPAREN RPAREN bloque n_endof_func

    ID              shift and go to state 33


state 24

    (31) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (32) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (35) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (36) funcion -> FUNCION VOID . n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func
    (20) n_save_type -> .

    ID              reduce using rule 20 (n_save_type -> .)

    n_save_type                    shift and go to state 34

state 25

    (1) programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars mult_funcion principal .

    $end            reduce using rule 1 (programa -> PROGRAMA p_n_mainJump ID SEMICOLON vars mult_funcion principal .)


state 26

    (9) vars_aux -> tipo_simple vars_aux1 . SEMICOLON
    (10) vars_aux -> tipo_simple vars_aux1 . SEMICOLON vars_aux

    SEMICOLON       shift and go to state 35


state 27

    (11) vars_aux1 -> vars_aux2 .
    (12) vars_aux1 -> vars_aux2 . COMMA vars_aux1

    SEMICOLON       reduce using rule 11 (vars_aux1 -> vars_aux2 .)
    COMMA           shift and go to state 36


state 28

    (13) vars_aux2 -> ID . n_save_var
    (14) vars_aux2 -> ID . LSQUARE CTE_I n_save_array RSQUARE
    (16) n_save_var -> .

    LSQUARE         shift and go to state 38
    COMMA           reduce using rule 16 (n_save_var -> .)
    SEMICOLON       reduce using rule 16 (n_save_var -> .)

    n_save_var                     shift and go to state 37

state 29

    (17) tipo_simple -> INT n_save_type .

    ID              reduce using rule 17 (tipo_simple -> INT n_save_type .)


state 30

    (18) tipo_simple -> FLOAT n_save_type .

    ID              reduce using rule 18 (tipo_simple -> FLOAT n_save_type .)


state 31

    (19) tipo_simple -> CHAR n_save_type .

    ID              reduce using rule 19 (tipo_simple -> CHAR n_save_type .)


state 32

    (6) principal -> PRINCIPAL n_register_glob LPAREN . RPAREN bloque

    RPAREN          shift and go to state 39


state 33

    (29) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (30) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN param RPAREN bloque n_endof_func
    (33) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN RPAREN vars bloque n_endof_func
    (34) funcion -> FUNCION tipo_simple ID . n_register_func LPAREN RPAREN bloque n_endof_func
    (37) n_register_func -> .

    LPAREN          reduce using rule 37 (n_register_func -> .)

    n_register_func                shift and go to state 40

state 34

    (31) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (32) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN param RPAREN bloque n_endof_func
    (35) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN RPAREN vars bloque n_endof_func
    (36) funcion -> FUNCION VOID n_save_type . ID n_register_func LPAREN RPAREN bloque n_endof_func

    ID              shift and go to state 41


state 35

    (9) vars_aux -> tipo_simple vars_aux1 SEMICOLON .
    (10) vars_aux -> tipo_simple vars_aux1 SEMICOLON . vars_aux
    (9) vars_aux -> . tipo_simple vars_aux1 SEMICOLON
    (10) vars_aux -> . tipo_simple vars_aux1 SEMICOLON vars_aux
    (17) tipo_simple -> . INT n_save_type
    (18) tipo_simple -> . FLOAT n_save_type
    (19) tipo_simple -> . CHAR n_save_type

    PRINCIPAL       reduce using rule 9 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    FUNCION         reduce using rule 9 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    LBRACKET        reduce using rule 9 (vars_aux -> tipo_simple vars_aux1 SEMICOLON .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo_simple                    shift and go to state 17
    vars_aux                       shift and go to state 42

state 36

    (12) vars_aux1 -> vars_aux2 COMMA . vars_aux1
    (11) vars_aux1 -> . vars_aux2
    (12) vars_aux1 -> . vars_aux2 COMMA vars_aux1
    (13) vars_aux2 -> . ID n_save_var
    (14) vars_aux2 -> . ID LSQUARE CTE_I n_save_array RSQUARE

    ID              shift and go to state 28

    vars_aux2                      shift and go to state 27
    vars_aux1                      shift and go to state 43

state 37

    (13) vars_aux2 -> ID n_save_var .

    COMMA           reduce using rule 13 (vars_aux2 -> ID n_save_var .)
    SEMICOLON       reduce using rule 13 (vars_aux2 -> ID n_save_var .)


state 38

    (14) vars_aux2 -> ID LSQUARE . CTE_I n_save_array RSQUARE

    CTE_I           shift and go to state 44


state 39

    (6) principal -> PRINCIPAL n_register_glob LPAREN RPAREN . bloque
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 46

    bloque                         shift and go to state 45

state 40

    (29) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN param RPAREN vars bloque n_endof_func
    (30) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN param RPAREN bloque n_endof_func
    (33) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN RPAREN vars bloque n_endof_func
    (34) funcion -> FUNCION tipo_simple ID n_register_func . LPAREN RPAREN bloque n_endof_func

    LPAREN          shift and go to state 47


state 41

    (31) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN param RPAREN vars bloque n_endof_func
    (32) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN param RPAREN bloque n_endof_func
    (35) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN RPAREN vars bloque n_endof_func
    (36) funcion -> FUNCION VOID n_save_type ID . n_register_func LPAREN RPAREN bloque n_endof_func
    (37) n_register_func -> .

    LPAREN          reduce using rule 37 (n_register_func -> .)

    n_register_func                shift and go to state 48

state 42

    (10) vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .

    PRINCIPAL       reduce using rule 10 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)
    FUNCION         reduce using rule 10 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)
    LBRACKET        reduce using rule 10 (vars_aux -> tipo_simple vars_aux1 SEMICOLON vars_aux .)


state 43

    (12) vars_aux1 -> vars_aux2 COMMA vars_aux1 .

    SEMICOLON       reduce using rule 12 (vars_aux1 -> vars_aux2 COMMA vars_aux1 .)


state 44

    (14) vars_aux2 -> ID LSQUARE CTE_I . n_save_array RSQUARE
    (15) n_save_array -> .

    RSQUARE         reduce using rule 15 (n_save_array -> .)

    n_save_array                   shift and go to state 49

state 45

    (6) principal -> PRINCIPAL n_register_glob LPAREN RPAREN bloque .

    $end            reduce using rule 6 (principal -> PRINCIPAL n_register_glob LPAREN RPAREN bloque .)


state 46

    (43) bloque -> LBRACKET . mult_estatutos RBRACKET
    (44) bloque -> LBRACKET . empty RBRACKET
    (45) mult_estatutos -> . estatuto
    (46) mult_estatutos -> . estatuto mult_estatutos
    (21) empty -> .
    (47) estatuto -> . asigna SEMICOLON
    (48) estatuto -> . llamada SEMICOLON
    (49) estatuto -> . lee
    (50) estatuto -> . escribe
    (51) estatuto -> . condicion
    (52) estatuto -> . ciclo_w
    (53) estatuto -> . retorno
    (54) estatuto -> . ciclo_f
    (55) asigna -> . mult_asigna
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action
    (67) lee -> . LEE LPAREN variable RPAREN SEMICOLON
    (68) escribe -> . ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
    (69) escribe -> . ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON
    (113) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (114) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (118) ciclo_w -> . MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (125) retorno -> . REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON
    (122) ciclo_f -> . DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (56) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (57) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal

    RBRACKET        reduce using rule 21 (empty -> .)
    ID              shift and go to state 62
    LEE             shift and go to state 63
    ESCRIBE         shift and go to state 65
    SI              shift and go to state 66
    MIENTRAS        shift and go to state 67
    REGRESA         shift and go to state 68
    DESDE           shift and go to state 69

    mult_estatutos                 shift and go to state 50
    empty                          shift and go to state 51
    estatuto                       shift and go to state 52
    asigna                         shift and go to state 53
    llamada                        shift and go to state 54
    lee                            shift and go to state 55
    escribe                        shift and go to state 56
    condicion                      shift and go to state 57
    ciclo_w                        shift and go to state 58
    retorno                        shift and go to state 59
    ciclo_f                        shift and go to state 60
    mult_asigna                    shift and go to state 61
    variable                       shift and go to state 64

state 47

    (29) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . param RPAREN vars bloque n_endof_func
    (30) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . param RPAREN bloque n_endof_func
    (33) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . RPAREN vars bloque n_endof_func
    (34) funcion -> FUNCION tipo_simple ID n_register_func LPAREN . RPAREN bloque n_endof_func
    (38) param -> . tipo_simple param_aux1
    (17) tipo_simple -> . INT n_save_type
    (18) tipo_simple -> . FLOAT n_save_type
    (19) tipo_simple -> . CHAR n_save_type

    RPAREN          shift and go to state 72
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo_simple                    shift and go to state 70
    param                          shift and go to state 71

state 48

    (31) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN param RPAREN vars bloque n_endof_func
    (32) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN param RPAREN bloque n_endof_func
    (35) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN RPAREN vars bloque n_endof_func
    (36) funcion -> FUNCION VOID n_save_type ID n_register_func . LPAREN RPAREN bloque n_endof_func

    LPAREN          shift and go to state 73


state 49

    (14) vars_aux2 -> ID LSQUARE CTE_I n_save_array . RSQUARE

    RSQUARE         shift and go to state 74


state 50

    (43) bloque -> LBRACKET mult_estatutos . RBRACKET

    RBRACKET        shift and go to state 75


state 51

    (44) bloque -> LBRACKET empty . RBRACKET

    RBRACKET        shift and go to state 76


state 52

    (45) mult_estatutos -> estatuto .
    (46) mult_estatutos -> estatuto . mult_estatutos
    (45) mult_estatutos -> . estatuto
    (46) mult_estatutos -> . estatuto mult_estatutos
    (47) estatuto -> . asigna SEMICOLON
    (48) estatuto -> . llamada SEMICOLON
    (49) estatuto -> . lee
    (50) estatuto -> . escribe
    (51) estatuto -> . condicion
    (52) estatuto -> . ciclo_w
    (53) estatuto -> . retorno
    (54) estatuto -> . ciclo_f
    (55) asigna -> . mult_asigna
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action
    (67) lee -> . LEE LPAREN variable RPAREN SEMICOLON
    (68) escribe -> . ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
    (69) escribe -> . ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON
    (113) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (114) condicion -> . SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (118) ciclo_w -> . MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (125) retorno -> . REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON
    (122) ciclo_f -> . DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (56) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (57) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal

    RBRACKET        reduce using rule 45 (mult_estatutos -> estatuto .)
    ID              shift and go to state 62
    LEE             shift and go to state 63
    ESCRIBE         shift and go to state 65
    SI              shift and go to state 66
    MIENTRAS        shift and go to state 67
    REGRESA         shift and go to state 68
    DESDE           shift and go to state 69

    estatuto                       shift and go to state 52
    mult_estatutos                 shift and go to state 77
    asigna                         shift and go to state 53
    llamada                        shift and go to state 54
    lee                            shift and go to state 55
    escribe                        shift and go to state 56
    condicion                      shift and go to state 57
    ciclo_w                        shift and go to state 58
    retorno                        shift and go to state 59
    ciclo_f                        shift and go to state 60
    mult_asigna                    shift and go to state 61
    variable                       shift and go to state 64

state 53

    (47) estatuto -> asigna . SEMICOLON

    SEMICOLON       shift and go to state 78


state 54

    (48) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 79


state 55

    (49) estatuto -> lee .

    ID              reduce using rule 49 (estatuto -> lee .)
    LEE             reduce using rule 49 (estatuto -> lee .)
    ESCRIBE         reduce using rule 49 (estatuto -> lee .)
    SI              reduce using rule 49 (estatuto -> lee .)
    MIENTRAS        reduce using rule 49 (estatuto -> lee .)
    REGRESA         reduce using rule 49 (estatuto -> lee .)
    DESDE           reduce using rule 49 (estatuto -> lee .)
    RBRACKET        reduce using rule 49 (estatuto -> lee .)


state 56

    (50) estatuto -> escribe .

    ID              reduce using rule 50 (estatuto -> escribe .)
    LEE             reduce using rule 50 (estatuto -> escribe .)
    ESCRIBE         reduce using rule 50 (estatuto -> escribe .)
    SI              reduce using rule 50 (estatuto -> escribe .)
    MIENTRAS        reduce using rule 50 (estatuto -> escribe .)
    REGRESA         reduce using rule 50 (estatuto -> escribe .)
    DESDE           reduce using rule 50 (estatuto -> escribe .)
    RBRACKET        reduce using rule 50 (estatuto -> escribe .)


state 57

    (51) estatuto -> condicion .

    ID              reduce using rule 51 (estatuto -> condicion .)
    LEE             reduce using rule 51 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 51 (estatuto -> condicion .)
    SI              reduce using rule 51 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 51 (estatuto -> condicion .)
    REGRESA         reduce using rule 51 (estatuto -> condicion .)
    DESDE           reduce using rule 51 (estatuto -> condicion .)
    RBRACKET        reduce using rule 51 (estatuto -> condicion .)


state 58

    (52) estatuto -> ciclo_w .

    ID              reduce using rule 52 (estatuto -> ciclo_w .)
    LEE             reduce using rule 52 (estatuto -> ciclo_w .)
    ESCRIBE         reduce using rule 52 (estatuto -> ciclo_w .)
    SI              reduce using rule 52 (estatuto -> ciclo_w .)
    MIENTRAS        reduce using rule 52 (estatuto -> ciclo_w .)
    REGRESA         reduce using rule 52 (estatuto -> ciclo_w .)
    DESDE           reduce using rule 52 (estatuto -> ciclo_w .)
    RBRACKET        reduce using rule 52 (estatuto -> ciclo_w .)


state 59

    (53) estatuto -> retorno .

    ID              reduce using rule 53 (estatuto -> retorno .)
    LEE             reduce using rule 53 (estatuto -> retorno .)
    ESCRIBE         reduce using rule 53 (estatuto -> retorno .)
    SI              reduce using rule 53 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 53 (estatuto -> retorno .)
    REGRESA         reduce using rule 53 (estatuto -> retorno .)
    DESDE           reduce using rule 53 (estatuto -> retorno .)
    RBRACKET        reduce using rule 53 (estatuto -> retorno .)


state 60

    (54) estatuto -> ciclo_f .

    ID              reduce using rule 54 (estatuto -> ciclo_f .)
    LEE             reduce using rule 54 (estatuto -> ciclo_f .)
    ESCRIBE         reduce using rule 54 (estatuto -> ciclo_f .)
    SI              reduce using rule 54 (estatuto -> ciclo_f .)
    MIENTRAS        reduce using rule 54 (estatuto -> ciclo_f .)
    REGRESA         reduce using rule 54 (estatuto -> ciclo_f .)
    DESDE           reduce using rule 54 (estatuto -> ciclo_f .)
    RBRACKET        reduce using rule 54 (estatuto -> ciclo_f .)


state 61

    (55) asigna -> mult_asigna .

    SEMICOLON       reduce using rule 55 (asigna -> mult_asigna .)
    HASTA           reduce using rule 55 (asigna -> mult_asigna .)


state 62

    (62) llamada -> ID . n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> ID . n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action
    (22) variable -> ID . n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> ID . n_getVarVal
    (66) n_verify_func -> .
    (26) n_getVarVal -> .

    LPAREN          reduce using rule 66 (n_verify_func -> .)
    LSQUARE         reduce using rule 26 (n_getVarVal -> .)
    EQUAL           reduce using rule 26 (n_getVarVal -> .)

    n_verify_func                  shift and go to state 80
    n_getVarVal                    shift and go to state 81

state 63

    (67) lee -> LEE . LPAREN variable RPAREN SEMICOLON

    LPAREN          shift and go to state 82


state 64

    (56) mult_asigna -> variable . EQUAL n_Operador mult_exp n_asignQuad
    (57) mult_asigna -> variable . EQUAL n_Operador mult_asigna n_asignQuad

    EQUAL           shift and go to state 83


state 65

    (68) escribe -> ESCRIBE . LPAREN mult_exp n_escribeExp RPAREN SEMICOLON
    (69) escribe -> ESCRIBE . LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON

    LPAREN          shift and go to state 84


state 66

    (113) condicion -> SI . LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (114) condicion -> SI . LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad

    LPAREN          shift and go to state 85


state 67

    (118) ciclo_w -> MIENTRAS . n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (119) n_startCicle -> .

    LPAREN          reduce using rule 119 (n_startCicle -> .)

    n_startCicle                   shift and go to state 86

state 68

    (125) retorno -> REGRESA . LPAREN mult_exp n_regresaExp RPAREN SEMICOLON

    LPAREN          shift and go to state 87


state 69

    (122) ciclo_f -> DESDE . asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (55) asigna -> . mult_asigna
    (56) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (57) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal

    ID              shift and go to state 89

    asigna                         shift and go to state 88
    mult_asigna                    shift and go to state 61
    variable                       shift and go to state 64

state 70

    (38) param -> tipo_simple . param_aux1
    (39) param_aux1 -> . ID save_param
    (40) param_aux1 -> . ID save_param COMMA param

    ID              shift and go to state 91

    param_aux1                     shift and go to state 90

state 71

    (29) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param . RPAREN vars bloque n_endof_func
    (30) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param . RPAREN bloque n_endof_func

    RPAREN          shift and go to state 92


state 72

    (33) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN . vars bloque n_endof_func
    (34) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN . bloque n_endof_func
    (8) vars -> . VAR vars_aux
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 9
    LBRACKET        shift and go to state 46

    vars                           shift and go to state 93
    bloque                         shift and go to state 94

state 73

    (31) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . param RPAREN vars bloque n_endof_func
    (32) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . param RPAREN bloque n_endof_func
    (35) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . RPAREN vars bloque n_endof_func
    (36) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN . RPAREN bloque n_endof_func
    (38) param -> . tipo_simple param_aux1
    (17) tipo_simple -> . INT n_save_type
    (18) tipo_simple -> . FLOAT n_save_type
    (19) tipo_simple -> . CHAR n_save_type

    RPAREN          shift and go to state 96
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    param                          shift and go to state 95
    tipo_simple                    shift and go to state 70

state 74

    (14) vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .

    COMMA           reduce using rule 14 (vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .)
    SEMICOLON       reduce using rule 14 (vars_aux2 -> ID LSQUARE CTE_I n_save_array RSQUARE .)


state 75

    (43) bloque -> LBRACKET mult_estatutos RBRACKET .

    $end            reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    FUNCION         reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    PRINCIPAL       reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SINO            reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    ID              reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    LEE             reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    ESCRIBE         reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SI              reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    MIENTRAS        reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    REGRESA         reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    DESDE           reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    RBRACKET        reduce using rule 43 (bloque -> LBRACKET mult_estatutos RBRACKET .)


state 76

    (44) bloque -> LBRACKET empty RBRACKET .

    $end            reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    FUNCION         reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    PRINCIPAL       reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    SINO            reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    ID              reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    LEE             reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    ESCRIBE         reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    SI              reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    MIENTRAS        reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    REGRESA         reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    DESDE           reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)
    RBRACKET        reduce using rule 44 (bloque -> LBRACKET empty RBRACKET .)


state 77

    (46) mult_estatutos -> estatuto mult_estatutos .

    RBRACKET        reduce using rule 46 (mult_estatutos -> estatuto mult_estatutos .)


state 78

    (47) estatuto -> asigna SEMICOLON .

    ID              reduce using rule 47 (estatuto -> asigna SEMICOLON .)
    LEE             reduce using rule 47 (estatuto -> asigna SEMICOLON .)
    ESCRIBE         reduce using rule 47 (estatuto -> asigna SEMICOLON .)
    SI              reduce using rule 47 (estatuto -> asigna SEMICOLON .)
    MIENTRAS        reduce using rule 47 (estatuto -> asigna SEMICOLON .)
    REGRESA         reduce using rule 47 (estatuto -> asigna SEMICOLON .)
    DESDE           reduce using rule 47 (estatuto -> asigna SEMICOLON .)
    RBRACKET        reduce using rule 47 (estatuto -> asigna SEMICOLON .)


state 79

    (48) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 48 (estatuto -> llamada SEMICOLON .)
    LEE             reduce using rule 48 (estatuto -> llamada SEMICOLON .)
    ESCRIBE         reduce using rule 48 (estatuto -> llamada SEMICOLON .)
    SI              reduce using rule 48 (estatuto -> llamada SEMICOLON .)
    MIENTRAS        reduce using rule 48 (estatuto -> llamada SEMICOLON .)
    REGRESA         reduce using rule 48 (estatuto -> llamada SEMICOLON .)
    DESDE           reduce using rule 48 (estatuto -> llamada SEMICOLON .)
    RBRACKET        reduce using rule 48 (estatuto -> llamada SEMICOLON .)


state 80

    (62) llamada -> ID n_verify_func . LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> ID n_verify_func . LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

    LPAREN          shift and go to state 97


state 81

    (22) variable -> ID n_getVarVal . LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> ID n_getVarVal .

    LSQUARE         shift and go to state 98
    EQUAL           reduce using rule 23 (variable -> ID n_getVarVal .)
    RPAREN          reduce using rule 23 (variable -> ID n_getVarVal .)
    MULT            reduce using rule 23 (variable -> ID n_getVarVal .)
    DIV             reduce using rule 23 (variable -> ID n_getVarVal .)
    PLUS            reduce using rule 23 (variable -> ID n_getVarVal .)
    MINUS           reduce using rule 23 (variable -> ID n_getVarVal .)
    LESSTHAN        reduce using rule 23 (variable -> ID n_getVarVal .)
    LESSEQUAL       reduce using rule 23 (variable -> ID n_getVarVal .)
    GREATERTHAN     reduce using rule 23 (variable -> ID n_getVarVal .)
    GREATEREQUAL    reduce using rule 23 (variable -> ID n_getVarVal .)
    SAME            reduce using rule 23 (variable -> ID n_getVarVal .)
    NOEQUAL         reduce using rule 23 (variable -> ID n_getVarVal .)
    AND             reduce using rule 23 (variable -> ID n_getVarVal .)
    OR              reduce using rule 23 (variable -> ID n_getVarVal .)
    COMMA           reduce using rule 23 (variable -> ID n_getVarVal .)
    SEMICOLON       reduce using rule 23 (variable -> ID n_getVarVal .)
    HASTA           reduce using rule 23 (variable -> ID n_getVarVal .)
    HACER           reduce using rule 23 (variable -> ID n_getVarVal .)
    RSQUARE         reduce using rule 23 (variable -> ID n_getVarVal .)


state 82

    (67) lee -> LEE LPAREN . variable RPAREN SEMICOLON
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal

    ID              shift and go to state 89

    variable                       shift and go to state 99

state 83

    (56) mult_asigna -> variable EQUAL . n_Operador mult_exp n_asignQuad
    (57) mult_asigna -> variable EQUAL . n_Operador mult_asigna n_asignQuad
    (97) n_Operador -> .

    ID              reduce using rule 97 (n_Operador -> .)
    LPAREN          reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 100

state 84

    (68) escribe -> ESCRIBE LPAREN . mult_exp n_escribeExp RPAREN SEMICOLON
    (69) escribe -> ESCRIBE LPAREN . mult_cte_s n_escribeExp RPAREN SEMICOLON
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (71) mult_cte_s -> . CTE_S
    (72) mult_cte_s -> . CTE_S COMMA mult_cte_s
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    CTE_S           shift and go to state 105
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    mult_exp                       shift and go to state 102
    mult_cte_s                     shift and go to state 103
    exp                            shift and go to state 104
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 85

    (113) condicion -> SI LPAREN . mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (114) condicion -> SI LPAREN . mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    mult_exp                       shift and go to state 117
    exp                            shift and go to state 104
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 86

    (118) ciclo_w -> MIENTRAS n_startCicle . LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile

    LPAREN          shift and go to state 118


state 87

    (125) retorno -> REGRESA LPAREN . mult_exp n_regresaExp RPAREN SEMICOLON
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    mult_exp                       shift and go to state 119
    exp                            shift and go to state 104
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 88

    (122) ciclo_f -> DESDE asigna . n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor
    (119) n_startCicle -> .

    HASTA           reduce using rule 119 (n_startCicle -> .)

    n_startCicle                   shift and go to state 120

state 89

    (22) variable -> ID . n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> ID . n_getVarVal
    (26) n_getVarVal -> .

    LSQUARE         reduce using rule 26 (n_getVarVal -> .)
    EQUAL           reduce using rule 26 (n_getVarVal -> .)
    RPAREN          reduce using rule 26 (n_getVarVal -> .)

    n_getVarVal                    shift and go to state 81

state 90

    (38) param -> tipo_simple param_aux1 .

    RPAREN          reduce using rule 38 (param -> tipo_simple param_aux1 .)


state 91

    (39) param_aux1 -> ID . save_param
    (40) param_aux1 -> ID . save_param COMMA param
    (41) save_param -> .

    COMMA           reduce using rule 41 (save_param -> .)
    RPAREN          reduce using rule 41 (save_param -> .)

    save_param                     shift and go to state 121

state 92

    (29) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN . vars bloque n_endof_func
    (30) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN . bloque n_endof_func
    (8) vars -> . VAR vars_aux
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 9
    LBRACKET        shift and go to state 46

    vars                           shift and go to state 122
    bloque                         shift and go to state 123

state 93

    (33) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars . bloque n_endof_func
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 46

    bloque                         shift and go to state 124

state 94

    (34) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque . n_endof_func
    (42) n_endof_func -> .

    FUNCION         reduce using rule 42 (n_endof_func -> .)
    PRINCIPAL       reduce using rule 42 (n_endof_func -> .)

    n_endof_func                   shift and go to state 125

state 95

    (31) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param . RPAREN vars bloque n_endof_func
    (32) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param . RPAREN bloque n_endof_func

    RPAREN          shift and go to state 126


state 96

    (35) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN . vars bloque n_endof_func
    (36) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN . bloque n_endof_func
    (8) vars -> . VAR vars_aux
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 9
    LBRACKET        shift and go to state 46

    vars                           shift and go to state 127
    bloque                         shift and go to state 128

state 97

    (62) llamada -> ID n_verify_func LPAREN . n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> ID n_verify_func LPAREN . n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action
    (111) n_start_FF -> .

    RPAREN          reduce using rule 111 (n_start_FF -> .)
    LPAREN          reduce using rule 111 (n_start_FF -> .)
    ID              reduce using rule 111 (n_start_FF -> .)
    MINUS           reduce using rule 111 (n_start_FF -> .)
    CTE_I           reduce using rule 111 (n_start_FF -> .)
    CTE_F           reduce using rule 111 (n_start_FF -> .)
    CTE_C           reduce using rule 111 (n_start_FF -> .)

    n_start_FF                     shift and go to state 129

state 98

    (22) variable -> ID n_getVarVal LSQUARE . n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (111) n_start_FF -> .

    LPAREN          reduce using rule 111 (n_start_FF -> .)
    ID              reduce using rule 111 (n_start_FF -> .)
    MINUS           reduce using rule 111 (n_start_FF -> .)
    CTE_I           reduce using rule 111 (n_start_FF -> .)
    CTE_F           reduce using rule 111 (n_start_FF -> .)
    CTE_C           reduce using rule 111 (n_start_FF -> .)

    n_start_FF                     shift and go to state 130

state 99

    (67) lee -> LEE LPAREN variable . RPAREN SEMICOLON

    RPAREN          shift and go to state 131


state 100

    (56) mult_asigna -> variable EQUAL n_Operador . mult_exp n_asignQuad
    (57) mult_asigna -> variable EQUAL n_Operador . mult_asigna n_asignQuad
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (56) mult_asigna -> . variable EQUAL n_Operador mult_exp n_asignQuad
    (57) mult_asigna -> . variable EQUAL n_Operador mult_asigna n_asignQuad
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    ID              shift and go to state 116
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    variable                       shift and go to state 132
    mult_exp                       shift and go to state 133
    mult_asigna                    shift and go to state 134
    exp                            shift and go to state 104
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    llamada                        shift and go to state 115

state 101

    (98) f -> LPAREN . n_start_FF mult_exp RPAREN n_end_FF
    (111) n_start_FF -> .

    LPAREN          reduce using rule 111 (n_start_FF -> .)
    ID              reduce using rule 111 (n_start_FF -> .)
    MINUS           reduce using rule 111 (n_start_FF -> .)
    CTE_I           reduce using rule 111 (n_start_FF -> .)
    CTE_F           reduce using rule 111 (n_start_FF -> .)
    CTE_C           reduce using rule 111 (n_start_FF -> .)

    n_start_FF                     shift and go to state 135

state 102

    (68) escribe -> ESCRIBE LPAREN mult_exp . n_escribeExp RPAREN SEMICOLON
    (70) n_escribeExp -> .

    RPAREN          reduce using rule 70 (n_escribeExp -> .)

    n_escribeExp                   shift and go to state 136

state 103

    (69) escribe -> ESCRIBE LPAREN mult_cte_s . n_escribeExp RPAREN SEMICOLON
    (70) n_escribeExp -> .

    RPAREN          reduce using rule 70 (n_escribeExp -> .)

    n_escribeExp                   shift and go to state 137

state 104

    (73) mult_exp -> exp .
    (74) mult_exp -> exp . COMMA mult_exp

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 73 (mult_exp -> exp .)
    SEMICOLON       reduce using rule 73 (mult_exp -> exp .)
    HASTA           reduce using rule 73 (mult_exp -> exp .)
    HACER           reduce using rule 73 (mult_exp -> exp .)
    RSQUARE         reduce using rule 73 (mult_exp -> exp .)
    COMMA           shift and go to state 138

  ! COMMA           [ reduce using rule 73 (mult_exp -> exp .) ]


state 105

    (71) mult_cte_s -> CTE_S .
    (72) mult_cte_s -> CTE_S . COMMA mult_cte_s

    RPAREN          reduce using rule 71 (mult_cte_s -> CTE_S .)
    COMMA           shift and go to state 139


state 106

    (75) exp -> t_exp . n_orQuad
    (76) exp -> t_exp . n_orQuad OR n_Operador exp
    (77) n_orQuad -> .

    OR              reduce using rule 77 (n_orQuad -> .)
    COMMA           reduce using rule 77 (n_orQuad -> .)
    RPAREN          reduce using rule 77 (n_orQuad -> .)
    SEMICOLON       reduce using rule 77 (n_orQuad -> .)
    HASTA           reduce using rule 77 (n_orQuad -> .)
    HACER           reduce using rule 77 (n_orQuad -> .)
    RSQUARE         reduce using rule 77 (n_orQuad -> .)

    n_orQuad                       shift and go to state 140

state 107

    (78) t_exp -> g_exp . n_andQuad
    (79) t_exp -> g_exp . n_andQuad AND n_Operador t_exp
    (80) n_andQuad -> .

    AND             reduce using rule 80 (n_andQuad -> .)
    OR              reduce using rule 80 (n_andQuad -> .)
    COMMA           reduce using rule 80 (n_andQuad -> .)
    RPAREN          reduce using rule 80 (n_andQuad -> .)
    SEMICOLON       reduce using rule 80 (n_andQuad -> .)
    HASTA           reduce using rule 80 (n_andQuad -> .)
    HACER           reduce using rule 80 (n_andQuad -> .)
    RSQUARE         reduce using rule 80 (n_andQuad -> .)

    n_andQuad                      shift and go to state 141

state 108

    (81) g_exp -> m_exp . n_compareQuad
    (82) g_exp -> m_exp . n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> m_exp . n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> m_exp . n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> m_exp . n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> m_exp . n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> m_exp . n_compareQuad NOEQUAL n_Operador g_exp
    (88) n_compareQuad -> .

    LESSTHAN        reduce using rule 88 (n_compareQuad -> .)
    LESSEQUAL       reduce using rule 88 (n_compareQuad -> .)
    GREATERTHAN     reduce using rule 88 (n_compareQuad -> .)
    GREATEREQUAL    reduce using rule 88 (n_compareQuad -> .)
    SAME            reduce using rule 88 (n_compareQuad -> .)
    NOEQUAL         reduce using rule 88 (n_compareQuad -> .)
    AND             reduce using rule 88 (n_compareQuad -> .)
    OR              reduce using rule 88 (n_compareQuad -> .)
    COMMA           reduce using rule 88 (n_compareQuad -> .)
    RPAREN          reduce using rule 88 (n_compareQuad -> .)
    SEMICOLON       reduce using rule 88 (n_compareQuad -> .)
    HASTA           reduce using rule 88 (n_compareQuad -> .)
    HACER           reduce using rule 88 (n_compareQuad -> .)
    RSQUARE         reduce using rule 88 (n_compareQuad -> .)

    n_compareQuad                  shift and go to state 142

state 109

    (89) m_exp -> t . n_sumQuad
    (90) m_exp -> t . n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> t . n_sumQuad MINUS n_Operador m_exp
    (92) n_sumQuad -> .

    PLUS            reduce using rule 92 (n_sumQuad -> .)
    MINUS           reduce using rule 92 (n_sumQuad -> .)
    LESSTHAN        reduce using rule 92 (n_sumQuad -> .)
    LESSEQUAL       reduce using rule 92 (n_sumQuad -> .)
    GREATERTHAN     reduce using rule 92 (n_sumQuad -> .)
    GREATEREQUAL    reduce using rule 92 (n_sumQuad -> .)
    SAME            reduce using rule 92 (n_sumQuad -> .)
    NOEQUAL         reduce using rule 92 (n_sumQuad -> .)
    AND             reduce using rule 92 (n_sumQuad -> .)
    OR              reduce using rule 92 (n_sumQuad -> .)
    COMMA           reduce using rule 92 (n_sumQuad -> .)
    RPAREN          reduce using rule 92 (n_sumQuad -> .)
    SEMICOLON       reduce using rule 92 (n_sumQuad -> .)
    HASTA           reduce using rule 92 (n_sumQuad -> .)
    HACER           reduce using rule 92 (n_sumQuad -> .)
    RSQUARE         reduce using rule 92 (n_sumQuad -> .)

    n_sumQuad                      shift and go to state 143

state 110

    (93) t -> f . n_multQuad
    (94) t -> f . n_multQuad MULT n_Operador t
    (95) t -> f . n_multQuad DIV n_Operador t
    (96) n_multQuad -> .

    MULT            reduce using rule 96 (n_multQuad -> .)
    DIV             reduce using rule 96 (n_multQuad -> .)
    PLUS            reduce using rule 96 (n_multQuad -> .)
    MINUS           reduce using rule 96 (n_multQuad -> .)
    LESSTHAN        reduce using rule 96 (n_multQuad -> .)
    LESSEQUAL       reduce using rule 96 (n_multQuad -> .)
    GREATERTHAN     reduce using rule 96 (n_multQuad -> .)
    GREATEREQUAL    reduce using rule 96 (n_multQuad -> .)
    SAME            reduce using rule 96 (n_multQuad -> .)
    NOEQUAL         reduce using rule 96 (n_multQuad -> .)
    AND             reduce using rule 96 (n_multQuad -> .)
    OR              reduce using rule 96 (n_multQuad -> .)
    COMMA           reduce using rule 96 (n_multQuad -> .)
    RPAREN          reduce using rule 96 (n_multQuad -> .)
    SEMICOLON       reduce using rule 96 (n_multQuad -> .)
    HASTA           reduce using rule 96 (n_multQuad -> .)
    HACER           reduce using rule 96 (n_multQuad -> .)
    RSQUARE         reduce using rule 96 (n_multQuad -> .)

    n_multQuad                     shift and go to state 144

state 111

    (99) f -> n_tempTypeI . MINUS CTE_I n_directPrint_neg
    (101) f -> n_tempTypeI . CTE_I n_directPrint

    MINUS           shift and go to state 145
    CTE_I           shift and go to state 146


state 112

    (100) f -> n_tempTypeF . MINUS CTE_F n_directPrint_neg
    (102) f -> n_tempTypeF . CTE_F n_directPrint

    MINUS           shift and go to state 147
    CTE_F           shift and go to state 148


state 113

    (103) f -> n_tempTypeC . CTE_C n_directPrint

    CTE_C           shift and go to state 149


state 114

    (104) f -> variable .

    MULT            reduce using rule 104 (f -> variable .)
    DIV             reduce using rule 104 (f -> variable .)
    PLUS            reduce using rule 104 (f -> variable .)
    MINUS           reduce using rule 104 (f -> variable .)
    LESSTHAN        reduce using rule 104 (f -> variable .)
    LESSEQUAL       reduce using rule 104 (f -> variable .)
    GREATERTHAN     reduce using rule 104 (f -> variable .)
    GREATEREQUAL    reduce using rule 104 (f -> variable .)
    SAME            reduce using rule 104 (f -> variable .)
    NOEQUAL         reduce using rule 104 (f -> variable .)
    AND             reduce using rule 104 (f -> variable .)
    OR              reduce using rule 104 (f -> variable .)
    COMMA           reduce using rule 104 (f -> variable .)
    RPAREN          reduce using rule 104 (f -> variable .)
    SEMICOLON       reduce using rule 104 (f -> variable .)
    HASTA           reduce using rule 104 (f -> variable .)
    HACER           reduce using rule 104 (f -> variable .)
    RSQUARE         reduce using rule 104 (f -> variable .)


state 115

    (105) f -> llamada .

    MULT            reduce using rule 105 (f -> llamada .)
    DIV             reduce using rule 105 (f -> llamada .)
    PLUS            reduce using rule 105 (f -> llamada .)
    MINUS           reduce using rule 105 (f -> llamada .)
    LESSTHAN        reduce using rule 105 (f -> llamada .)
    LESSEQUAL       reduce using rule 105 (f -> llamada .)
    GREATERTHAN     reduce using rule 105 (f -> llamada .)
    GREATEREQUAL    reduce using rule 105 (f -> llamada .)
    SAME            reduce using rule 105 (f -> llamada .)
    NOEQUAL         reduce using rule 105 (f -> llamada .)
    AND             reduce using rule 105 (f -> llamada .)
    OR              reduce using rule 105 (f -> llamada .)
    COMMA           reduce using rule 105 (f -> llamada .)
    RPAREN          reduce using rule 105 (f -> llamada .)
    SEMICOLON       reduce using rule 105 (f -> llamada .)
    HASTA           reduce using rule 105 (f -> llamada .)
    HACER           reduce using rule 105 (f -> llamada .)
    RSQUARE         reduce using rule 105 (f -> llamada .)


state 116

    (22) variable -> ID . n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> ID . n_getVarVal
    (62) llamada -> ID . n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> ID . n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action
    (26) n_getVarVal -> .
    (66) n_verify_func -> .

    LSQUARE         reduce using rule 26 (n_getVarVal -> .)
    MULT            reduce using rule 26 (n_getVarVal -> .)
    DIV             reduce using rule 26 (n_getVarVal -> .)
    PLUS            reduce using rule 26 (n_getVarVal -> .)
    MINUS           reduce using rule 26 (n_getVarVal -> .)
    LESSTHAN        reduce using rule 26 (n_getVarVal -> .)
    LESSEQUAL       reduce using rule 26 (n_getVarVal -> .)
    GREATERTHAN     reduce using rule 26 (n_getVarVal -> .)
    GREATEREQUAL    reduce using rule 26 (n_getVarVal -> .)
    SAME            reduce using rule 26 (n_getVarVal -> .)
    NOEQUAL         reduce using rule 26 (n_getVarVal -> .)
    AND             reduce using rule 26 (n_getVarVal -> .)
    OR              reduce using rule 26 (n_getVarVal -> .)
    COMMA           reduce using rule 26 (n_getVarVal -> .)
    RPAREN          reduce using rule 26 (n_getVarVal -> .)
    EQUAL           reduce using rule 26 (n_getVarVal -> .)
    SEMICOLON       reduce using rule 26 (n_getVarVal -> .)
    HASTA           reduce using rule 26 (n_getVarVal -> .)
    HACER           reduce using rule 26 (n_getVarVal -> .)
    RSQUARE         reduce using rule 26 (n_getVarVal -> .)
    LPAREN          reduce using rule 66 (n_verify_func -> .)

    n_getVarVal                    shift and go to state 81
    n_verify_func                  shift and go to state 80

state 117

    (113) condicion -> SI LPAREN mult_exp . RPAREN n_ifQuad ENTONCES bloque n_endIfQuad
    (114) condicion -> SI LPAREN mult_exp . RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad

    RPAREN          shift and go to state 150


state 118

    (118) ciclo_w -> MIENTRAS n_startCicle LPAREN . mult_exp RPAREN n_evalExp HAZ bloque n_endWhile
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    mult_exp                       shift and go to state 151
    exp                            shift and go to state 104
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 119

    (125) retorno -> REGRESA LPAREN mult_exp . n_regresaExp RPAREN SEMICOLON
    (126) n_regresaExp -> .

    RPAREN          reduce using rule 126 (n_regresaExp -> .)

    n_regresaExp                   shift and go to state 152

state 120

    (122) ciclo_f -> DESDE asigna n_startCicle . HASTA mult_exp n_evalExp_for HACER bloque n_endFor

    HASTA           shift and go to state 153


state 121

    (39) param_aux1 -> ID save_param .
    (40) param_aux1 -> ID save_param . COMMA param

    RPAREN          reduce using rule 39 (param_aux1 -> ID save_param .)
    COMMA           shift and go to state 154


state 122

    (29) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars . bloque n_endof_func
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 46

    bloque                         shift and go to state 155

state 123

    (30) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque . n_endof_func
    (42) n_endof_func -> .

    FUNCION         reduce using rule 42 (n_endof_func -> .)
    PRINCIPAL       reduce using rule 42 (n_endof_func -> .)

    n_endof_func                   shift and go to state 156

state 124

    (33) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque . n_endof_func
    (42) n_endof_func -> .

    FUNCION         reduce using rule 42 (n_endof_func -> .)
    PRINCIPAL       reduce using rule 42 (n_endof_func -> .)

    n_endof_func                   shift and go to state 157

state 125

    (34) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func .

    FUNCION         reduce using rule 34 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func .)
    PRINCIPAL       reduce using rule 34 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN bloque n_endof_func .)


state 126

    (31) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN . vars bloque n_endof_func
    (32) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN . bloque n_endof_func
    (8) vars -> . VAR vars_aux
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    VAR             shift and go to state 9
    LBRACKET        shift and go to state 46

    vars                           shift and go to state 158
    bloque                         shift and go to state 159

state 127

    (35) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars . bloque n_endof_func
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 46

    bloque                         shift and go to state 160

state 128

    (36) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque . n_endof_func
    (42) n_endof_func -> .

    FUNCION         reduce using rule 42 (n_endof_func -> .)
    PRINCIPAL       reduce using rule 42 (n_endof_func -> .)

    n_endof_func                   shift and go to state 161

state 129

    (62) llamada -> ID n_verify_func LPAREN n_start_FF . n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> ID n_verify_func LPAREN n_start_FF . n_start_pcounter RPAREN n_end_FF n_last_param_action
    (65) n_start_pcounter -> .

    RPAREN          reduce using rule 65 (n_start_pcounter -> .)
    LPAREN          reduce using rule 65 (n_start_pcounter -> .)
    ID              reduce using rule 65 (n_start_pcounter -> .)
    MINUS           reduce using rule 65 (n_start_pcounter -> .)
    CTE_I           reduce using rule 65 (n_start_pcounter -> .)
    CTE_F           reduce using rule 65 (n_start_pcounter -> .)
    CTE_C           reduce using rule 65 (n_start_pcounter -> .)

    n_start_pcounter               shift and go to state 162

state 130

    (22) variable -> ID n_getVarVal LSQUARE n_start_FF . n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (25) n_hasDim -> .

    LPAREN          reduce using rule 25 (n_hasDim -> .)
    ID              reduce using rule 25 (n_hasDim -> .)
    MINUS           reduce using rule 25 (n_hasDim -> .)
    CTE_I           reduce using rule 25 (n_hasDim -> .)
    CTE_F           reduce using rule 25 (n_hasDim -> .)
    CTE_C           reduce using rule 25 (n_hasDim -> .)

    n_hasDim                       shift and go to state 163

state 131

    (67) lee -> LEE LPAREN variable RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 164


state 132

    (56) mult_asigna -> variable . EQUAL n_Operador mult_exp n_asignQuad
    (57) mult_asigna -> variable . EQUAL n_Operador mult_asigna n_asignQuad
    (104) f -> variable .

    EQUAL           shift and go to state 83
    MULT            reduce using rule 104 (f -> variable .)
    DIV             reduce using rule 104 (f -> variable .)
    PLUS            reduce using rule 104 (f -> variable .)
    MINUS           reduce using rule 104 (f -> variable .)
    LESSTHAN        reduce using rule 104 (f -> variable .)
    LESSEQUAL       reduce using rule 104 (f -> variable .)
    GREATERTHAN     reduce using rule 104 (f -> variable .)
    GREATEREQUAL    reduce using rule 104 (f -> variable .)
    SAME            reduce using rule 104 (f -> variable .)
    NOEQUAL         reduce using rule 104 (f -> variable .)
    AND             reduce using rule 104 (f -> variable .)
    OR              reduce using rule 104 (f -> variable .)
    COMMA           reduce using rule 104 (f -> variable .)
    SEMICOLON       reduce using rule 104 (f -> variable .)
    HASTA           reduce using rule 104 (f -> variable .)


state 133

    (56) mult_asigna -> variable EQUAL n_Operador mult_exp . n_asignQuad
    (58) n_asignQuad -> .

    SEMICOLON       reduce using rule 58 (n_asignQuad -> .)
    HASTA           reduce using rule 58 (n_asignQuad -> .)

    n_asignQuad                    shift and go to state 165

state 134

    (57) mult_asigna -> variable EQUAL n_Operador mult_asigna . n_asignQuad
    (58) n_asignQuad -> .

    SEMICOLON       reduce using rule 58 (n_asignQuad -> .)
    HASTA           reduce using rule 58 (n_asignQuad -> .)

    n_asignQuad                    shift and go to state 166

state 135

    (98) f -> LPAREN n_start_FF . mult_exp RPAREN n_end_FF
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    mult_exp                       shift and go to state 167
    exp                            shift and go to state 104
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 136

    (68) escribe -> ESCRIBE LPAREN mult_exp n_escribeExp . RPAREN SEMICOLON

    RPAREN          shift and go to state 168


state 137

    (69) escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp . RPAREN SEMICOLON

    RPAREN          shift and go to state 169


state 138

    (74) mult_exp -> exp COMMA . mult_exp
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    exp                            shift and go to state 104
    mult_exp                       shift and go to state 170
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 139

    (72) mult_cte_s -> CTE_S COMMA . mult_cte_s
    (71) mult_cte_s -> . CTE_S
    (72) mult_cte_s -> . CTE_S COMMA mult_cte_s

    CTE_S           shift and go to state 105

    mult_cte_s                     shift and go to state 171

state 140

    (75) exp -> t_exp n_orQuad .
    (76) exp -> t_exp n_orQuad . OR n_Operador exp

    COMMA           reduce using rule 75 (exp -> t_exp n_orQuad .)
    RPAREN          reduce using rule 75 (exp -> t_exp n_orQuad .)
    SEMICOLON       reduce using rule 75 (exp -> t_exp n_orQuad .)
    HASTA           reduce using rule 75 (exp -> t_exp n_orQuad .)
    HACER           reduce using rule 75 (exp -> t_exp n_orQuad .)
    RSQUARE         reduce using rule 75 (exp -> t_exp n_orQuad .)
    OR              shift and go to state 172


state 141

    (78) t_exp -> g_exp n_andQuad .
    (79) t_exp -> g_exp n_andQuad . AND n_Operador t_exp

    OR              reduce using rule 78 (t_exp -> g_exp n_andQuad .)
    COMMA           reduce using rule 78 (t_exp -> g_exp n_andQuad .)
    RPAREN          reduce using rule 78 (t_exp -> g_exp n_andQuad .)
    SEMICOLON       reduce using rule 78 (t_exp -> g_exp n_andQuad .)
    HASTA           reduce using rule 78 (t_exp -> g_exp n_andQuad .)
    HACER           reduce using rule 78 (t_exp -> g_exp n_andQuad .)
    RSQUARE         reduce using rule 78 (t_exp -> g_exp n_andQuad .)
    AND             shift and go to state 173


state 142

    (81) g_exp -> m_exp n_compareQuad .
    (82) g_exp -> m_exp n_compareQuad . LESSTHAN n_Operador g_exp
    (83) g_exp -> m_exp n_compareQuad . LESSEQUAL n_Operador g_exp
    (84) g_exp -> m_exp n_compareQuad . GREATERTHAN n_Operador g_exp
    (85) g_exp -> m_exp n_compareQuad . GREATEREQUAL n_Operador g_exp
    (86) g_exp -> m_exp n_compareQuad . SAME n_Operador g_exp
    (87) g_exp -> m_exp n_compareQuad . NOEQUAL n_Operador g_exp

    AND             reduce using rule 81 (g_exp -> m_exp n_compareQuad .)
    OR              reduce using rule 81 (g_exp -> m_exp n_compareQuad .)
    COMMA           reduce using rule 81 (g_exp -> m_exp n_compareQuad .)
    RPAREN          reduce using rule 81 (g_exp -> m_exp n_compareQuad .)
    SEMICOLON       reduce using rule 81 (g_exp -> m_exp n_compareQuad .)
    HASTA           reduce using rule 81 (g_exp -> m_exp n_compareQuad .)
    HACER           reduce using rule 81 (g_exp -> m_exp n_compareQuad .)
    RSQUARE         reduce using rule 81 (g_exp -> m_exp n_compareQuad .)
    LESSTHAN        shift and go to state 174
    LESSEQUAL       shift and go to state 175
    GREATERTHAN     shift and go to state 176
    GREATEREQUAL    shift and go to state 177
    SAME            shift and go to state 178
    NOEQUAL         shift and go to state 179


state 143

    (89) m_exp -> t n_sumQuad .
    (90) m_exp -> t n_sumQuad . PLUS n_Operador m_exp
    (91) m_exp -> t n_sumQuad . MINUS n_Operador m_exp

    LESSTHAN        reduce using rule 89 (m_exp -> t n_sumQuad .)
    LESSEQUAL       reduce using rule 89 (m_exp -> t n_sumQuad .)
    GREATERTHAN     reduce using rule 89 (m_exp -> t n_sumQuad .)
    GREATEREQUAL    reduce using rule 89 (m_exp -> t n_sumQuad .)
    SAME            reduce using rule 89 (m_exp -> t n_sumQuad .)
    NOEQUAL         reduce using rule 89 (m_exp -> t n_sumQuad .)
    AND             reduce using rule 89 (m_exp -> t n_sumQuad .)
    OR              reduce using rule 89 (m_exp -> t n_sumQuad .)
    COMMA           reduce using rule 89 (m_exp -> t n_sumQuad .)
    RPAREN          reduce using rule 89 (m_exp -> t n_sumQuad .)
    SEMICOLON       reduce using rule 89 (m_exp -> t n_sumQuad .)
    HASTA           reduce using rule 89 (m_exp -> t n_sumQuad .)
    HACER           reduce using rule 89 (m_exp -> t n_sumQuad .)
    RSQUARE         reduce using rule 89 (m_exp -> t n_sumQuad .)
    PLUS            shift and go to state 180
    MINUS           shift and go to state 181


state 144

    (93) t -> f n_multQuad .
    (94) t -> f n_multQuad . MULT n_Operador t
    (95) t -> f n_multQuad . DIV n_Operador t

    PLUS            reduce using rule 93 (t -> f n_multQuad .)
    MINUS           reduce using rule 93 (t -> f n_multQuad .)
    LESSTHAN        reduce using rule 93 (t -> f n_multQuad .)
    LESSEQUAL       reduce using rule 93 (t -> f n_multQuad .)
    GREATERTHAN     reduce using rule 93 (t -> f n_multQuad .)
    GREATEREQUAL    reduce using rule 93 (t -> f n_multQuad .)
    SAME            reduce using rule 93 (t -> f n_multQuad .)
    NOEQUAL         reduce using rule 93 (t -> f n_multQuad .)
    AND             reduce using rule 93 (t -> f n_multQuad .)
    OR              reduce using rule 93 (t -> f n_multQuad .)
    COMMA           reduce using rule 93 (t -> f n_multQuad .)
    RPAREN          reduce using rule 93 (t -> f n_multQuad .)
    SEMICOLON       reduce using rule 93 (t -> f n_multQuad .)
    HASTA           reduce using rule 93 (t -> f n_multQuad .)
    HACER           reduce using rule 93 (t -> f n_multQuad .)
    RSQUARE         reduce using rule 93 (t -> f n_multQuad .)
    MULT            shift and go to state 182
    DIV             shift and go to state 183


state 145

    (99) f -> n_tempTypeI MINUS . CTE_I n_directPrint_neg

    CTE_I           shift and go to state 184


state 146

    (101) f -> n_tempTypeI CTE_I . n_directPrint
    (110) n_directPrint -> .

    MULT            reduce using rule 110 (n_directPrint -> .)
    DIV             reduce using rule 110 (n_directPrint -> .)
    PLUS            reduce using rule 110 (n_directPrint -> .)
    MINUS           reduce using rule 110 (n_directPrint -> .)
    LESSTHAN        reduce using rule 110 (n_directPrint -> .)
    LESSEQUAL       reduce using rule 110 (n_directPrint -> .)
    GREATERTHAN     reduce using rule 110 (n_directPrint -> .)
    GREATEREQUAL    reduce using rule 110 (n_directPrint -> .)
    SAME            reduce using rule 110 (n_directPrint -> .)
    NOEQUAL         reduce using rule 110 (n_directPrint -> .)
    AND             reduce using rule 110 (n_directPrint -> .)
    OR              reduce using rule 110 (n_directPrint -> .)
    COMMA           reduce using rule 110 (n_directPrint -> .)
    RPAREN          reduce using rule 110 (n_directPrint -> .)
    SEMICOLON       reduce using rule 110 (n_directPrint -> .)
    HASTA           reduce using rule 110 (n_directPrint -> .)
    HACER           reduce using rule 110 (n_directPrint -> .)
    RSQUARE         reduce using rule 110 (n_directPrint -> .)

    n_directPrint                  shift and go to state 185

state 147

    (100) f -> n_tempTypeF MINUS . CTE_F n_directPrint_neg

    CTE_F           shift and go to state 186


state 148

    (102) f -> n_tempTypeF CTE_F . n_directPrint
    (110) n_directPrint -> .

    MULT            reduce using rule 110 (n_directPrint -> .)
    DIV             reduce using rule 110 (n_directPrint -> .)
    PLUS            reduce using rule 110 (n_directPrint -> .)
    MINUS           reduce using rule 110 (n_directPrint -> .)
    LESSTHAN        reduce using rule 110 (n_directPrint -> .)
    LESSEQUAL       reduce using rule 110 (n_directPrint -> .)
    GREATERTHAN     reduce using rule 110 (n_directPrint -> .)
    GREATEREQUAL    reduce using rule 110 (n_directPrint -> .)
    SAME            reduce using rule 110 (n_directPrint -> .)
    NOEQUAL         reduce using rule 110 (n_directPrint -> .)
    AND             reduce using rule 110 (n_directPrint -> .)
    OR              reduce using rule 110 (n_directPrint -> .)
    COMMA           reduce using rule 110 (n_directPrint -> .)
    RPAREN          reduce using rule 110 (n_directPrint -> .)
    SEMICOLON       reduce using rule 110 (n_directPrint -> .)
    HASTA           reduce using rule 110 (n_directPrint -> .)
    HACER           reduce using rule 110 (n_directPrint -> .)
    RSQUARE         reduce using rule 110 (n_directPrint -> .)

    n_directPrint                  shift and go to state 187

state 149

    (103) f -> n_tempTypeC CTE_C . n_directPrint
    (110) n_directPrint -> .

    MULT            reduce using rule 110 (n_directPrint -> .)
    DIV             reduce using rule 110 (n_directPrint -> .)
    PLUS            reduce using rule 110 (n_directPrint -> .)
    MINUS           reduce using rule 110 (n_directPrint -> .)
    LESSTHAN        reduce using rule 110 (n_directPrint -> .)
    LESSEQUAL       reduce using rule 110 (n_directPrint -> .)
    GREATERTHAN     reduce using rule 110 (n_directPrint -> .)
    GREATEREQUAL    reduce using rule 110 (n_directPrint -> .)
    SAME            reduce using rule 110 (n_directPrint -> .)
    NOEQUAL         reduce using rule 110 (n_directPrint -> .)
    AND             reduce using rule 110 (n_directPrint -> .)
    OR              reduce using rule 110 (n_directPrint -> .)
    COMMA           reduce using rule 110 (n_directPrint -> .)
    RPAREN          reduce using rule 110 (n_directPrint -> .)
    SEMICOLON       reduce using rule 110 (n_directPrint -> .)
    HASTA           reduce using rule 110 (n_directPrint -> .)
    HACER           reduce using rule 110 (n_directPrint -> .)
    RSQUARE         reduce using rule 110 (n_directPrint -> .)

    n_directPrint                  shift and go to state 188

state 150

    (113) condicion -> SI LPAREN mult_exp RPAREN . n_ifQuad ENTONCES bloque n_endIfQuad
    (114) condicion -> SI LPAREN mult_exp RPAREN . n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (115) n_ifQuad -> .

    ENTONCES        reduce using rule 115 (n_ifQuad -> .)

    n_ifQuad                       shift and go to state 189

state 151

    (118) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp . RPAREN n_evalExp HAZ bloque n_endWhile

    RPAREN          shift and go to state 190


state 152

    (125) retorno -> REGRESA LPAREN mult_exp n_regresaExp . RPAREN SEMICOLON

    RPAREN          shift and go to state 191


state 153

    (122) ciclo_f -> DESDE asigna n_startCicle HASTA . mult_exp n_evalExp_for HACER bloque n_endFor
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    mult_exp                       shift and go to state 192
    exp                            shift and go to state 104
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 154

    (40) param_aux1 -> ID save_param COMMA . param
    (38) param -> . tipo_simple param_aux1
    (17) tipo_simple -> . INT n_save_type
    (18) tipo_simple -> . FLOAT n_save_type
    (19) tipo_simple -> . CHAR n_save_type

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    param                          shift and go to state 193
    tipo_simple                    shift and go to state 70

state 155

    (29) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque . n_endof_func
    (42) n_endof_func -> .

    FUNCION         reduce using rule 42 (n_endof_func -> .)
    PRINCIPAL       reduce using rule 42 (n_endof_func -> .)

    n_endof_func                   shift and go to state 194

state 156

    (30) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func .

    FUNCION         reduce using rule 30 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func .)
    PRINCIPAL       reduce using rule 30 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN bloque n_endof_func .)


state 157

    (33) funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func .

    FUNCION         reduce using rule 33 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func .)
    PRINCIPAL       reduce using rule 33 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN RPAREN vars bloque n_endof_func .)


state 158

    (31) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars . bloque n_endof_func
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 46

    bloque                         shift and go to state 195

state 159

    (32) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque . n_endof_func
    (42) n_endof_func -> .

    FUNCION         reduce using rule 42 (n_endof_func -> .)
    PRINCIPAL       reduce using rule 42 (n_endof_func -> .)

    n_endof_func                   shift and go to state 196

state 160

    (35) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque . n_endof_func
    (42) n_endof_func -> .

    FUNCION         reduce using rule 42 (n_endof_func -> .)
    PRINCIPAL       reduce using rule 42 (n_endof_func -> .)

    n_endof_func                   shift and go to state 197

state 161

    (36) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func .

    FUNCION         reduce using rule 36 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func .)
    PRINCIPAL       reduce using rule 36 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN bloque n_endof_func .)


state 162

    (62) llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter . param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter . RPAREN n_end_FF n_last_param_action
    (59) param_exp -> . mult_exp n_parameter_action
    (60) param_exp -> . mult_exp n_parameter_action COMMA param_exp
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    RPAREN          shift and go to state 199
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    param_exp                      shift and go to state 198
    mult_exp                       shift and go to state 200
    exp                            shift and go to state 104
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 163

    (22) variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim . mult_exp RSQUARE n_end_FF n_arr_quad
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    mult_exp                       shift and go to state 201
    exp                            shift and go to state 104
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 164

    (67) lee -> LEE LPAREN variable RPAREN SEMICOLON .

    ID              reduce using rule 67 (lee -> LEE LPAREN variable RPAREN SEMICOLON .)
    LEE             reduce using rule 67 (lee -> LEE LPAREN variable RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 67 (lee -> LEE LPAREN variable RPAREN SEMICOLON .)
    SI              reduce using rule 67 (lee -> LEE LPAREN variable RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 67 (lee -> LEE LPAREN variable RPAREN SEMICOLON .)
    REGRESA         reduce using rule 67 (lee -> LEE LPAREN variable RPAREN SEMICOLON .)
    DESDE           reduce using rule 67 (lee -> LEE LPAREN variable RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 67 (lee -> LEE LPAREN variable RPAREN SEMICOLON .)


state 165

    (56) mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad .

    SEMICOLON       reduce using rule 56 (mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad .)
    HASTA           reduce using rule 56 (mult_asigna -> variable EQUAL n_Operador mult_exp n_asignQuad .)


state 166

    (57) mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad .

    SEMICOLON       reduce using rule 57 (mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad .)
    HASTA           reduce using rule 57 (mult_asigna -> variable EQUAL n_Operador mult_asigna n_asignQuad .)


state 167

    (98) f -> LPAREN n_start_FF mult_exp . RPAREN n_end_FF

    RPAREN          shift and go to state 202


state 168

    (68) escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 203


state 169

    (69) escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 204


state 170

    (74) mult_exp -> exp COMMA mult_exp .

    RPAREN          reduce using rule 74 (mult_exp -> exp COMMA mult_exp .)
    SEMICOLON       reduce using rule 74 (mult_exp -> exp COMMA mult_exp .)
    HASTA           reduce using rule 74 (mult_exp -> exp COMMA mult_exp .)
    HACER           reduce using rule 74 (mult_exp -> exp COMMA mult_exp .)
    COMMA           reduce using rule 74 (mult_exp -> exp COMMA mult_exp .)
    RSQUARE         reduce using rule 74 (mult_exp -> exp COMMA mult_exp .)


state 171

    (72) mult_cte_s -> CTE_S COMMA mult_cte_s .

    RPAREN          reduce using rule 72 (mult_cte_s -> CTE_S COMMA mult_cte_s .)


state 172

    (76) exp -> t_exp n_orQuad OR . n_Operador exp
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 205

state 173

    (79) t_exp -> g_exp n_andQuad AND . n_Operador t_exp
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 206

state 174

    (82) g_exp -> m_exp n_compareQuad LESSTHAN . n_Operador g_exp
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 207

state 175

    (83) g_exp -> m_exp n_compareQuad LESSEQUAL . n_Operador g_exp
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 208

state 176

    (84) g_exp -> m_exp n_compareQuad GREATERTHAN . n_Operador g_exp
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 209

state 177

    (85) g_exp -> m_exp n_compareQuad GREATEREQUAL . n_Operador g_exp
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 210

state 178

    (86) g_exp -> m_exp n_compareQuad SAME . n_Operador g_exp
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 211

state 179

    (87) g_exp -> m_exp n_compareQuad NOEQUAL . n_Operador g_exp
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 212

state 180

    (90) m_exp -> t n_sumQuad PLUS . n_Operador m_exp
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 213

state 181

    (91) m_exp -> t n_sumQuad MINUS . n_Operador m_exp
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 214

state 182

    (94) t -> f n_multQuad MULT . n_Operador t
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 215

state 183

    (95) t -> f n_multQuad DIV . n_Operador t
    (97) n_Operador -> .

    LPAREN          reduce using rule 97 (n_Operador -> .)
    ID              reduce using rule 97 (n_Operador -> .)
    MINUS           reduce using rule 97 (n_Operador -> .)
    CTE_I           reduce using rule 97 (n_Operador -> .)
    CTE_F           reduce using rule 97 (n_Operador -> .)
    CTE_C           reduce using rule 97 (n_Operador -> .)

    n_Operador                     shift and go to state 216

state 184

    (99) f -> n_tempTypeI MINUS CTE_I . n_directPrint_neg
    (109) n_directPrint_neg -> .

    MULT            reduce using rule 109 (n_directPrint_neg -> .)
    DIV             reduce using rule 109 (n_directPrint_neg -> .)
    PLUS            reduce using rule 109 (n_directPrint_neg -> .)
    MINUS           reduce using rule 109 (n_directPrint_neg -> .)
    LESSTHAN        reduce using rule 109 (n_directPrint_neg -> .)
    LESSEQUAL       reduce using rule 109 (n_directPrint_neg -> .)
    GREATERTHAN     reduce using rule 109 (n_directPrint_neg -> .)
    GREATEREQUAL    reduce using rule 109 (n_directPrint_neg -> .)
    SAME            reduce using rule 109 (n_directPrint_neg -> .)
    NOEQUAL         reduce using rule 109 (n_directPrint_neg -> .)
    AND             reduce using rule 109 (n_directPrint_neg -> .)
    OR              reduce using rule 109 (n_directPrint_neg -> .)
    COMMA           reduce using rule 109 (n_directPrint_neg -> .)
    RPAREN          reduce using rule 109 (n_directPrint_neg -> .)
    SEMICOLON       reduce using rule 109 (n_directPrint_neg -> .)
    HASTA           reduce using rule 109 (n_directPrint_neg -> .)
    HACER           reduce using rule 109 (n_directPrint_neg -> .)
    RSQUARE         reduce using rule 109 (n_directPrint_neg -> .)

    n_directPrint_neg              shift and go to state 217

state 185

    (101) f -> n_tempTypeI CTE_I n_directPrint .

    MULT            reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    DIV             reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    PLUS            reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    MINUS           reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    LESSTHAN        reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    LESSEQUAL       reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    GREATERTHAN     reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    GREATEREQUAL    reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    SAME            reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    NOEQUAL         reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    AND             reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    OR              reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    COMMA           reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    RPAREN          reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    SEMICOLON       reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    HASTA           reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    HACER           reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)
    RSQUARE         reduce using rule 101 (f -> n_tempTypeI CTE_I n_directPrint .)


state 186

    (100) f -> n_tempTypeF MINUS CTE_F . n_directPrint_neg
    (109) n_directPrint_neg -> .

    MULT            reduce using rule 109 (n_directPrint_neg -> .)
    DIV             reduce using rule 109 (n_directPrint_neg -> .)
    PLUS            reduce using rule 109 (n_directPrint_neg -> .)
    MINUS           reduce using rule 109 (n_directPrint_neg -> .)
    LESSTHAN        reduce using rule 109 (n_directPrint_neg -> .)
    LESSEQUAL       reduce using rule 109 (n_directPrint_neg -> .)
    GREATERTHAN     reduce using rule 109 (n_directPrint_neg -> .)
    GREATEREQUAL    reduce using rule 109 (n_directPrint_neg -> .)
    SAME            reduce using rule 109 (n_directPrint_neg -> .)
    NOEQUAL         reduce using rule 109 (n_directPrint_neg -> .)
    AND             reduce using rule 109 (n_directPrint_neg -> .)
    OR              reduce using rule 109 (n_directPrint_neg -> .)
    COMMA           reduce using rule 109 (n_directPrint_neg -> .)
    RPAREN          reduce using rule 109 (n_directPrint_neg -> .)
    SEMICOLON       reduce using rule 109 (n_directPrint_neg -> .)
    HASTA           reduce using rule 109 (n_directPrint_neg -> .)
    HACER           reduce using rule 109 (n_directPrint_neg -> .)
    RSQUARE         reduce using rule 109 (n_directPrint_neg -> .)

    n_directPrint_neg              shift and go to state 218

state 187

    (102) f -> n_tempTypeF CTE_F n_directPrint .

    MULT            reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    DIV             reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    PLUS            reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    MINUS           reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    LESSTHAN        reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    LESSEQUAL       reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    GREATERTHAN     reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    GREATEREQUAL    reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    SAME            reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    NOEQUAL         reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    AND             reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    OR              reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    COMMA           reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    RPAREN          reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    SEMICOLON       reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    HASTA           reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    HACER           reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)
    RSQUARE         reduce using rule 102 (f -> n_tempTypeF CTE_F n_directPrint .)


state 188

    (103) f -> n_tempTypeC CTE_C n_directPrint .

    MULT            reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    DIV             reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    PLUS            reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    MINUS           reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    LESSTHAN        reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    LESSEQUAL       reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    GREATERTHAN     reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    GREATEREQUAL    reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    SAME            reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    NOEQUAL         reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    AND             reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    OR              reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    COMMA           reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    RPAREN          reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    SEMICOLON       reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    HASTA           reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    HACER           reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)
    RSQUARE         reduce using rule 103 (f -> n_tempTypeC CTE_C n_directPrint .)


state 189

    (113) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad . ENTONCES bloque n_endIfQuad
    (114) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad . ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad

    ENTONCES        shift and go to state 219


state 190

    (118) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN . n_evalExp HAZ bloque n_endWhile
    (120) n_evalExp -> .

    HAZ             reduce using rule 120 (n_evalExp -> .)

    n_evalExp                      shift and go to state 220

state 191

    (125) retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 221


state 192

    (122) ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp . n_evalExp_for HACER bloque n_endFor
    (123) n_evalExp_for -> .

    HACER           reduce using rule 123 (n_evalExp_for -> .)

    n_evalExp_for                  shift and go to state 222

state 193

    (40) param_aux1 -> ID save_param COMMA param .

    RPAREN          reduce using rule 40 (param_aux1 -> ID save_param COMMA param .)


state 194

    (29) funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func .

    FUNCION         reduce using rule 29 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func .)
    PRINCIPAL       reduce using rule 29 (funcion -> FUNCION tipo_simple ID n_register_func LPAREN param RPAREN vars bloque n_endof_func .)


state 195

    (31) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque . n_endof_func
    (42) n_endof_func -> .

    FUNCION         reduce using rule 42 (n_endof_func -> .)
    PRINCIPAL       reduce using rule 42 (n_endof_func -> .)

    n_endof_func                   shift and go to state 223

state 196

    (32) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func .

    FUNCION         reduce using rule 32 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func .)
    PRINCIPAL       reduce using rule 32 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN bloque n_endof_func .)


state 197

    (35) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func .

    FUNCION         reduce using rule 35 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func .)
    PRINCIPAL       reduce using rule 35 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN RPAREN vars bloque n_endof_func .)


state 198

    (62) llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp . RPAREN n_end_FF n_last_param_action

    RPAREN          shift and go to state 224


state 199

    (63) llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN . n_end_FF n_last_param_action
    (112) n_end_FF -> .

    SEMICOLON       reduce using rule 112 (n_end_FF -> .)
    MULT            reduce using rule 112 (n_end_FF -> .)
    DIV             reduce using rule 112 (n_end_FF -> .)
    PLUS            reduce using rule 112 (n_end_FF -> .)
    MINUS           reduce using rule 112 (n_end_FF -> .)
    LESSTHAN        reduce using rule 112 (n_end_FF -> .)
    LESSEQUAL       reduce using rule 112 (n_end_FF -> .)
    GREATERTHAN     reduce using rule 112 (n_end_FF -> .)
    GREATEREQUAL    reduce using rule 112 (n_end_FF -> .)
    SAME            reduce using rule 112 (n_end_FF -> .)
    NOEQUAL         reduce using rule 112 (n_end_FF -> .)
    AND             reduce using rule 112 (n_end_FF -> .)
    OR              reduce using rule 112 (n_end_FF -> .)
    COMMA           reduce using rule 112 (n_end_FF -> .)
    RPAREN          reduce using rule 112 (n_end_FF -> .)
    HASTA           reduce using rule 112 (n_end_FF -> .)
    HACER           reduce using rule 112 (n_end_FF -> .)
    RSQUARE         reduce using rule 112 (n_end_FF -> .)

    n_end_FF                       shift and go to state 225

state 200

    (59) param_exp -> mult_exp . n_parameter_action
    (60) param_exp -> mult_exp . n_parameter_action COMMA param_exp
    (61) n_parameter_action -> .

    COMMA           reduce using rule 61 (n_parameter_action -> .)
    RPAREN          reduce using rule 61 (n_parameter_action -> .)

    n_parameter_action             shift and go to state 226

state 201

    (22) variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp . RSQUARE n_end_FF n_arr_quad

    RSQUARE         shift and go to state 227


state 202

    (98) f -> LPAREN n_start_FF mult_exp RPAREN . n_end_FF
    (112) n_end_FF -> .

    MULT            reduce using rule 112 (n_end_FF -> .)
    DIV             reduce using rule 112 (n_end_FF -> .)
    PLUS            reduce using rule 112 (n_end_FF -> .)
    MINUS           reduce using rule 112 (n_end_FF -> .)
    LESSTHAN        reduce using rule 112 (n_end_FF -> .)
    LESSEQUAL       reduce using rule 112 (n_end_FF -> .)
    GREATERTHAN     reduce using rule 112 (n_end_FF -> .)
    GREATEREQUAL    reduce using rule 112 (n_end_FF -> .)
    SAME            reduce using rule 112 (n_end_FF -> .)
    NOEQUAL         reduce using rule 112 (n_end_FF -> .)
    AND             reduce using rule 112 (n_end_FF -> .)
    OR              reduce using rule 112 (n_end_FF -> .)
    COMMA           reduce using rule 112 (n_end_FF -> .)
    RPAREN          reduce using rule 112 (n_end_FF -> .)
    SEMICOLON       reduce using rule 112 (n_end_FF -> .)
    HASTA           reduce using rule 112 (n_end_FF -> .)
    HACER           reduce using rule 112 (n_end_FF -> .)
    RSQUARE         reduce using rule 112 (n_end_FF -> .)

    n_end_FF                       shift and go to state 228

state 203

    (68) escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .

    ID              reduce using rule 68 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    LEE             reduce using rule 68 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 68 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    SI              reduce using rule 68 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 68 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    REGRESA         reduce using rule 68 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    DESDE           reduce using rule 68 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 68 (escribe -> ESCRIBE LPAREN mult_exp n_escribeExp RPAREN SEMICOLON .)


state 204

    (69) escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .

    ID              reduce using rule 69 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    LEE             reduce using rule 69 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 69 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    SI              reduce using rule 69 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 69 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    REGRESA         reduce using rule 69 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    DESDE           reduce using rule 69 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 69 (escribe -> ESCRIBE LPAREN mult_cte_s n_escribeExp RPAREN SEMICOLON .)


state 205

    (76) exp -> t_exp n_orQuad OR n_Operador . exp
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    t_exp                          shift and go to state 106
    exp                            shift and go to state 229
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 206

    (79) t_exp -> g_exp n_andQuad AND n_Operador . t_exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    g_exp                          shift and go to state 107
    t_exp                          shift and go to state 230
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 207

    (82) g_exp -> m_exp n_compareQuad LESSTHAN n_Operador . g_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    m_exp                          shift and go to state 108
    g_exp                          shift and go to state 231
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 208

    (83) g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador . g_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    m_exp                          shift and go to state 108
    g_exp                          shift and go to state 232
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 209

    (84) g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador . g_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    m_exp                          shift and go to state 108
    g_exp                          shift and go to state 233
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 210

    (85) g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador . g_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    m_exp                          shift and go to state 108
    g_exp                          shift and go to state 234
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 211

    (86) g_exp -> m_exp n_compareQuad SAME n_Operador . g_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    m_exp                          shift and go to state 108
    g_exp                          shift and go to state 235
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 212

    (87) g_exp -> m_exp n_compareQuad NOEQUAL n_Operador . g_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    m_exp                          shift and go to state 108
    g_exp                          shift and go to state 236
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 213

    (90) m_exp -> t n_sumQuad PLUS n_Operador . m_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    t                              shift and go to state 109
    m_exp                          shift and go to state 237
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 214

    (91) m_exp -> t n_sumQuad MINUS n_Operador . m_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    t                              shift and go to state 109
    m_exp                          shift and go to state 238
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 215

    (94) t -> f n_multQuad MULT n_Operador . t
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    f                              shift and go to state 110
    t                              shift and go to state 239
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 216

    (95) t -> f n_multQuad DIV n_Operador . t
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    f                              shift and go to state 110
    t                              shift and go to state 240
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 217

    (99) f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .

    MULT            reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    DIV             reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    PLUS            reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    MINUS           reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    LESSTHAN        reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    LESSEQUAL       reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    GREATERTHAN     reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    GREATEREQUAL    reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    SAME            reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    NOEQUAL         reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    AND             reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    OR              reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    COMMA           reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    RPAREN          reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    SEMICOLON       reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    HASTA           reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    HACER           reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)
    RSQUARE         reduce using rule 99 (f -> n_tempTypeI MINUS CTE_I n_directPrint_neg .)


state 218

    (100) f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .

    MULT            reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    DIV             reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    PLUS            reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    MINUS           reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    LESSTHAN        reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    LESSEQUAL       reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    GREATERTHAN     reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    GREATEREQUAL    reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    SAME            reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    NOEQUAL         reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    AND             reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    OR              reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    COMMA           reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    RPAREN          reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    SEMICOLON       reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    HASTA           reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    HACER           reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)
    RSQUARE         reduce using rule 100 (f -> n_tempTypeF MINUS CTE_F n_directPrint_neg .)


state 219

    (113) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES . bloque n_endIfQuad
    (114) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES . bloque SINO p_n_sinoQuad bloque n_endIfQuad
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 46

    bloque                         shift and go to state 241

state 220

    (118) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp . HAZ bloque n_endWhile

    HAZ             shift and go to state 242


state 221

    (125) retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON .

    ID              reduce using rule 125 (retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON .)
    LEE             reduce using rule 125 (retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 125 (retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON .)
    SI              reduce using rule 125 (retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 125 (retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON .)
    REGRESA         reduce using rule 125 (retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON .)
    DESDE           reduce using rule 125 (retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 125 (retorno -> REGRESA LPAREN mult_exp n_regresaExp RPAREN SEMICOLON .)


state 222

    (122) ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for . HACER bloque n_endFor

    HACER           shift and go to state 243


state 223

    (31) funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func .

    FUNCION         reduce using rule 31 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func .)
    PRINCIPAL       reduce using rule 31 (funcion -> FUNCION VOID n_save_type ID n_register_func LPAREN param RPAREN vars bloque n_endof_func .)


state 224

    (62) llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN . n_end_FF n_last_param_action
    (112) n_end_FF -> .

    SEMICOLON       reduce using rule 112 (n_end_FF -> .)
    MULT            reduce using rule 112 (n_end_FF -> .)
    DIV             reduce using rule 112 (n_end_FF -> .)
    PLUS            reduce using rule 112 (n_end_FF -> .)
    MINUS           reduce using rule 112 (n_end_FF -> .)
    LESSTHAN        reduce using rule 112 (n_end_FF -> .)
    LESSEQUAL       reduce using rule 112 (n_end_FF -> .)
    GREATERTHAN     reduce using rule 112 (n_end_FF -> .)
    GREATEREQUAL    reduce using rule 112 (n_end_FF -> .)
    SAME            reduce using rule 112 (n_end_FF -> .)
    NOEQUAL         reduce using rule 112 (n_end_FF -> .)
    AND             reduce using rule 112 (n_end_FF -> .)
    OR              reduce using rule 112 (n_end_FF -> .)
    COMMA           reduce using rule 112 (n_end_FF -> .)
    RPAREN          reduce using rule 112 (n_end_FF -> .)
    HASTA           reduce using rule 112 (n_end_FF -> .)
    HACER           reduce using rule 112 (n_end_FF -> .)
    RSQUARE         reduce using rule 112 (n_end_FF -> .)

    n_end_FF                       shift and go to state 244

state 225

    (63) llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF . n_last_param_action
    (64) n_last_param_action -> .

    SEMICOLON       reduce using rule 64 (n_last_param_action -> .)
    MULT            reduce using rule 64 (n_last_param_action -> .)
    DIV             reduce using rule 64 (n_last_param_action -> .)
    PLUS            reduce using rule 64 (n_last_param_action -> .)
    MINUS           reduce using rule 64 (n_last_param_action -> .)
    LESSTHAN        reduce using rule 64 (n_last_param_action -> .)
    LESSEQUAL       reduce using rule 64 (n_last_param_action -> .)
    GREATERTHAN     reduce using rule 64 (n_last_param_action -> .)
    GREATEREQUAL    reduce using rule 64 (n_last_param_action -> .)
    SAME            reduce using rule 64 (n_last_param_action -> .)
    NOEQUAL         reduce using rule 64 (n_last_param_action -> .)
    AND             reduce using rule 64 (n_last_param_action -> .)
    OR              reduce using rule 64 (n_last_param_action -> .)
    COMMA           reduce using rule 64 (n_last_param_action -> .)
    RPAREN          reduce using rule 64 (n_last_param_action -> .)
    HASTA           reduce using rule 64 (n_last_param_action -> .)
    HACER           reduce using rule 64 (n_last_param_action -> .)
    RSQUARE         reduce using rule 64 (n_last_param_action -> .)

    n_last_param_action            shift and go to state 245

state 226

    (59) param_exp -> mult_exp n_parameter_action .
    (60) param_exp -> mult_exp n_parameter_action . COMMA param_exp

    RPAREN          reduce using rule 59 (param_exp -> mult_exp n_parameter_action .)
    COMMA           shift and go to state 246


state 227

    (22) variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE . n_end_FF n_arr_quad
    (112) n_end_FF -> .

    EQUAL           reduce using rule 112 (n_end_FF -> .)
    RPAREN          reduce using rule 112 (n_end_FF -> .)
    MULT            reduce using rule 112 (n_end_FF -> .)
    DIV             reduce using rule 112 (n_end_FF -> .)
    PLUS            reduce using rule 112 (n_end_FF -> .)
    MINUS           reduce using rule 112 (n_end_FF -> .)
    LESSTHAN        reduce using rule 112 (n_end_FF -> .)
    LESSEQUAL       reduce using rule 112 (n_end_FF -> .)
    GREATERTHAN     reduce using rule 112 (n_end_FF -> .)
    GREATEREQUAL    reduce using rule 112 (n_end_FF -> .)
    SAME            reduce using rule 112 (n_end_FF -> .)
    NOEQUAL         reduce using rule 112 (n_end_FF -> .)
    AND             reduce using rule 112 (n_end_FF -> .)
    OR              reduce using rule 112 (n_end_FF -> .)
    COMMA           reduce using rule 112 (n_end_FF -> .)
    SEMICOLON       reduce using rule 112 (n_end_FF -> .)
    HASTA           reduce using rule 112 (n_end_FF -> .)
    HACER           reduce using rule 112 (n_end_FF -> .)
    RSQUARE         reduce using rule 112 (n_end_FF -> .)

    n_end_FF                       shift and go to state 247

state 228

    (98) f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .

    MULT            reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    DIV             reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    PLUS            reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    MINUS           reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    LESSTHAN        reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    LESSEQUAL       reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    GREATERTHAN     reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    GREATEREQUAL    reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    SAME            reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    NOEQUAL         reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    AND             reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    OR              reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    COMMA           reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    RPAREN          reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    SEMICOLON       reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    HASTA           reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    HACER           reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)
    RSQUARE         reduce using rule 98 (f -> LPAREN n_start_FF mult_exp RPAREN n_end_FF .)


state 229

    (76) exp -> t_exp n_orQuad OR n_Operador exp .

    COMMA           reduce using rule 76 (exp -> t_exp n_orQuad OR n_Operador exp .)
    RPAREN          reduce using rule 76 (exp -> t_exp n_orQuad OR n_Operador exp .)
    SEMICOLON       reduce using rule 76 (exp -> t_exp n_orQuad OR n_Operador exp .)
    HASTA           reduce using rule 76 (exp -> t_exp n_orQuad OR n_Operador exp .)
    HACER           reduce using rule 76 (exp -> t_exp n_orQuad OR n_Operador exp .)
    RSQUARE         reduce using rule 76 (exp -> t_exp n_orQuad OR n_Operador exp .)


state 230

    (79) t_exp -> g_exp n_andQuad AND n_Operador t_exp .

    OR              reduce using rule 79 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    COMMA           reduce using rule 79 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    RPAREN          reduce using rule 79 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    SEMICOLON       reduce using rule 79 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    HASTA           reduce using rule 79 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    HACER           reduce using rule 79 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)
    RSQUARE         reduce using rule 79 (t_exp -> g_exp n_andQuad AND n_Operador t_exp .)


state 231

    (82) g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .

    AND             reduce using rule 82 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    OR              reduce using rule 82 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    COMMA           reduce using rule 82 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    RPAREN          reduce using rule 82 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    SEMICOLON       reduce using rule 82 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    HASTA           reduce using rule 82 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    HACER           reduce using rule 82 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)
    RSQUARE         reduce using rule 82 (g_exp -> m_exp n_compareQuad LESSTHAN n_Operador g_exp .)


state 232

    (83) g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .

    AND             reduce using rule 83 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    OR              reduce using rule 83 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    COMMA           reduce using rule 83 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    RPAREN          reduce using rule 83 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    SEMICOLON       reduce using rule 83 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    HASTA           reduce using rule 83 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    HACER           reduce using rule 83 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)
    RSQUARE         reduce using rule 83 (g_exp -> m_exp n_compareQuad LESSEQUAL n_Operador g_exp .)


state 233

    (84) g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .

    AND             reduce using rule 84 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    OR              reduce using rule 84 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    COMMA           reduce using rule 84 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    RPAREN          reduce using rule 84 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    SEMICOLON       reduce using rule 84 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    HASTA           reduce using rule 84 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    HACER           reduce using rule 84 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)
    RSQUARE         reduce using rule 84 (g_exp -> m_exp n_compareQuad GREATERTHAN n_Operador g_exp .)


state 234

    (85) g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .

    AND             reduce using rule 85 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    OR              reduce using rule 85 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    COMMA           reduce using rule 85 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    RPAREN          reduce using rule 85 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    SEMICOLON       reduce using rule 85 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    HASTA           reduce using rule 85 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    HACER           reduce using rule 85 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)
    RSQUARE         reduce using rule 85 (g_exp -> m_exp n_compareQuad GREATEREQUAL n_Operador g_exp .)


state 235

    (86) g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .

    AND             reduce using rule 86 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    OR              reduce using rule 86 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    COMMA           reduce using rule 86 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    RPAREN          reduce using rule 86 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    SEMICOLON       reduce using rule 86 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    HASTA           reduce using rule 86 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    HACER           reduce using rule 86 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)
    RSQUARE         reduce using rule 86 (g_exp -> m_exp n_compareQuad SAME n_Operador g_exp .)


state 236

    (87) g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .

    AND             reduce using rule 87 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    OR              reduce using rule 87 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    COMMA           reduce using rule 87 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    RPAREN          reduce using rule 87 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    SEMICOLON       reduce using rule 87 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    HASTA           reduce using rule 87 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    HACER           reduce using rule 87 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)
    RSQUARE         reduce using rule 87 (g_exp -> m_exp n_compareQuad NOEQUAL n_Operador g_exp .)


state 237

    (90) m_exp -> t n_sumQuad PLUS n_Operador m_exp .

    LESSTHAN        reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    LESSEQUAL       reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    GREATERTHAN     reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    GREATEREQUAL    reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    SAME            reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    NOEQUAL         reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    AND             reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    OR              reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    COMMA           reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    RPAREN          reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    SEMICOLON       reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    HASTA           reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    HACER           reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)
    RSQUARE         reduce using rule 90 (m_exp -> t n_sumQuad PLUS n_Operador m_exp .)


state 238

    (91) m_exp -> t n_sumQuad MINUS n_Operador m_exp .

    LESSTHAN        reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    LESSEQUAL       reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    GREATERTHAN     reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    GREATEREQUAL    reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    SAME            reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    NOEQUAL         reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    AND             reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    OR              reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    COMMA           reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    RPAREN          reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    SEMICOLON       reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    HASTA           reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    HACER           reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)
    RSQUARE         reduce using rule 91 (m_exp -> t n_sumQuad MINUS n_Operador m_exp .)


state 239

    (94) t -> f n_multQuad MULT n_Operador t .

    PLUS            reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    MINUS           reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    LESSTHAN        reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    LESSEQUAL       reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    GREATERTHAN     reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    GREATEREQUAL    reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    SAME            reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    NOEQUAL         reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    AND             reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    OR              reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    COMMA           reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    RPAREN          reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    SEMICOLON       reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    HASTA           reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    HACER           reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)
    RSQUARE         reduce using rule 94 (t -> f n_multQuad MULT n_Operador t .)


state 240

    (95) t -> f n_multQuad DIV n_Operador t .

    PLUS            reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    MINUS           reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    LESSTHAN        reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    LESSEQUAL       reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    GREATERTHAN     reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    GREATEREQUAL    reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    SAME            reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    NOEQUAL         reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    AND             reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    OR              reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    COMMA           reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    RPAREN          reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    SEMICOLON       reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    HASTA           reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    HACER           reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)
    RSQUARE         reduce using rule 95 (t -> f n_multQuad DIV n_Operador t .)


state 241

    (113) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque . n_endIfQuad
    (114) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque . SINO p_n_sinoQuad bloque n_endIfQuad
    (116) n_endIfQuad -> .

    SINO            shift and go to state 249
    ID              reduce using rule 116 (n_endIfQuad -> .)
    LEE             reduce using rule 116 (n_endIfQuad -> .)
    ESCRIBE         reduce using rule 116 (n_endIfQuad -> .)
    SI              reduce using rule 116 (n_endIfQuad -> .)
    MIENTRAS        reduce using rule 116 (n_endIfQuad -> .)
    REGRESA         reduce using rule 116 (n_endIfQuad -> .)
    DESDE           reduce using rule 116 (n_endIfQuad -> .)
    RBRACKET        reduce using rule 116 (n_endIfQuad -> .)

    n_endIfQuad                    shift and go to state 248

state 242

    (118) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ . bloque n_endWhile
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 46

    bloque                         shift and go to state 250

state 243

    (122) ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER . bloque n_endFor
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 46

    bloque                         shift and go to state 251

state 244

    (62) llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF . n_last_param_action
    (64) n_last_param_action -> .

    SEMICOLON       reduce using rule 64 (n_last_param_action -> .)
    MULT            reduce using rule 64 (n_last_param_action -> .)
    DIV             reduce using rule 64 (n_last_param_action -> .)
    PLUS            reduce using rule 64 (n_last_param_action -> .)
    MINUS           reduce using rule 64 (n_last_param_action -> .)
    LESSTHAN        reduce using rule 64 (n_last_param_action -> .)
    LESSEQUAL       reduce using rule 64 (n_last_param_action -> .)
    GREATERTHAN     reduce using rule 64 (n_last_param_action -> .)
    GREATEREQUAL    reduce using rule 64 (n_last_param_action -> .)
    SAME            reduce using rule 64 (n_last_param_action -> .)
    NOEQUAL         reduce using rule 64 (n_last_param_action -> .)
    AND             reduce using rule 64 (n_last_param_action -> .)
    OR              reduce using rule 64 (n_last_param_action -> .)
    COMMA           reduce using rule 64 (n_last_param_action -> .)
    RPAREN          reduce using rule 64 (n_last_param_action -> .)
    HASTA           reduce using rule 64 (n_last_param_action -> .)
    HACER           reduce using rule 64 (n_last_param_action -> .)
    RSQUARE         reduce using rule 64 (n_last_param_action -> .)

    n_last_param_action            shift and go to state 252

state 245

    (63) llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .

    SEMICOLON       reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    MULT            reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    DIV             reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    PLUS            reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    MINUS           reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    LESSTHAN        reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    LESSEQUAL       reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    GREATERTHAN     reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    GREATEREQUAL    reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    SAME            reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    NOEQUAL         reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    AND             reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    OR              reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    COMMA           reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    RPAREN          reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    HASTA           reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    HACER           reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)
    RSQUARE         reduce using rule 63 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action .)


state 246

    (60) param_exp -> mult_exp n_parameter_action COMMA . param_exp
    (59) param_exp -> . mult_exp n_parameter_action
    (60) param_exp -> . mult_exp n_parameter_action COMMA param_exp
    (73) mult_exp -> . exp
    (74) mult_exp -> . exp COMMA mult_exp
    (75) exp -> . t_exp n_orQuad
    (76) exp -> . t_exp n_orQuad OR n_Operador exp
    (78) t_exp -> . g_exp n_andQuad
    (79) t_exp -> . g_exp n_andQuad AND n_Operador t_exp
    (81) g_exp -> . m_exp n_compareQuad
    (82) g_exp -> . m_exp n_compareQuad LESSTHAN n_Operador g_exp
    (83) g_exp -> . m_exp n_compareQuad LESSEQUAL n_Operador g_exp
    (84) g_exp -> . m_exp n_compareQuad GREATERTHAN n_Operador g_exp
    (85) g_exp -> . m_exp n_compareQuad GREATEREQUAL n_Operador g_exp
    (86) g_exp -> . m_exp n_compareQuad SAME n_Operador g_exp
    (87) g_exp -> . m_exp n_compareQuad NOEQUAL n_Operador g_exp
    (89) m_exp -> . t n_sumQuad
    (90) m_exp -> . t n_sumQuad PLUS n_Operador m_exp
    (91) m_exp -> . t n_sumQuad MINUS n_Operador m_exp
    (93) t -> . f n_multQuad
    (94) t -> . f n_multQuad MULT n_Operador t
    (95) t -> . f n_multQuad DIV n_Operador t
    (98) f -> . LPAREN n_start_FF mult_exp RPAREN n_end_FF
    (99) f -> . n_tempTypeI MINUS CTE_I n_directPrint_neg
    (100) f -> . n_tempTypeF MINUS CTE_F n_directPrint_neg
    (101) f -> . n_tempTypeI CTE_I n_directPrint
    (102) f -> . n_tempTypeF CTE_F n_directPrint
    (103) f -> . n_tempTypeC CTE_C n_directPrint
    (104) f -> . variable
    (105) f -> . llamada
    (106) n_tempTypeI -> .
    (107) n_tempTypeF -> .
    (108) n_tempTypeC -> .
    (22) variable -> . ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad
    (23) variable -> . ID n_getVarVal
    (62) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action
    (63) llamada -> . ID n_verify_func LPAREN n_start_FF n_start_pcounter RPAREN n_end_FF n_last_param_action

  ! reduce/reduce conflict for MINUS resolved using rule 106 (n_tempTypeI -> .)
    LPAREN          shift and go to state 101
    MINUS           reduce using rule 106 (n_tempTypeI -> .)
    CTE_I           reduce using rule 106 (n_tempTypeI -> .)
    CTE_F           reduce using rule 107 (n_tempTypeF -> .)
    CTE_C           reduce using rule 108 (n_tempTypeC -> .)
    ID              shift and go to state 116

  ! MINUS           [ reduce using rule 107 (n_tempTypeF -> .) ]

    mult_exp                       shift and go to state 200
    param_exp                      shift and go to state 253
    exp                            shift and go to state 104
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    t                              shift and go to state 109
    f                              shift and go to state 110
    n_tempTypeI                    shift and go to state 111
    n_tempTypeF                    shift and go to state 112
    n_tempTypeC                    shift and go to state 113
    variable                       shift and go to state 114
    llamada                        shift and go to state 115

state 247

    (22) variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF . n_arr_quad
    (24) n_arr_quad -> .

    EQUAL           reduce using rule 24 (n_arr_quad -> .)
    RPAREN          reduce using rule 24 (n_arr_quad -> .)
    MULT            reduce using rule 24 (n_arr_quad -> .)
    DIV             reduce using rule 24 (n_arr_quad -> .)
    PLUS            reduce using rule 24 (n_arr_quad -> .)
    MINUS           reduce using rule 24 (n_arr_quad -> .)
    LESSTHAN        reduce using rule 24 (n_arr_quad -> .)
    LESSEQUAL       reduce using rule 24 (n_arr_quad -> .)
    GREATERTHAN     reduce using rule 24 (n_arr_quad -> .)
    GREATEREQUAL    reduce using rule 24 (n_arr_quad -> .)
    SAME            reduce using rule 24 (n_arr_quad -> .)
    NOEQUAL         reduce using rule 24 (n_arr_quad -> .)
    AND             reduce using rule 24 (n_arr_quad -> .)
    OR              reduce using rule 24 (n_arr_quad -> .)
    COMMA           reduce using rule 24 (n_arr_quad -> .)
    SEMICOLON       reduce using rule 24 (n_arr_quad -> .)
    HASTA           reduce using rule 24 (n_arr_quad -> .)
    HACER           reduce using rule 24 (n_arr_quad -> .)
    RSQUARE         reduce using rule 24 (n_arr_quad -> .)

    n_arr_quad                     shift and go to state 254

state 248

    (113) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .

    ID              reduce using rule 113 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    LEE             reduce using rule 113 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    ESCRIBE         reduce using rule 113 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    SI              reduce using rule 113 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    MIENTRAS        reduce using rule 113 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    REGRESA         reduce using rule 113 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    DESDE           reduce using rule 113 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)
    RBRACKET        reduce using rule 113 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque n_endIfQuad .)


state 249

    (114) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO . p_n_sinoQuad bloque n_endIfQuad
    (117) p_n_sinoQuad -> .

    LBRACKET        reduce using rule 117 (p_n_sinoQuad -> .)

    p_n_sinoQuad                   shift and go to state 255

state 250

    (118) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque . n_endWhile
    (121) n_endWhile -> .

    ID              reduce using rule 121 (n_endWhile -> .)
    LEE             reduce using rule 121 (n_endWhile -> .)
    ESCRIBE         reduce using rule 121 (n_endWhile -> .)
    SI              reduce using rule 121 (n_endWhile -> .)
    MIENTRAS        reduce using rule 121 (n_endWhile -> .)
    REGRESA         reduce using rule 121 (n_endWhile -> .)
    DESDE           reduce using rule 121 (n_endWhile -> .)
    RBRACKET        reduce using rule 121 (n_endWhile -> .)

    n_endWhile                     shift and go to state 256

state 251

    (122) ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque . n_endFor
    (124) n_endFor -> .

    ID              reduce using rule 124 (n_endFor -> .)
    LEE             reduce using rule 124 (n_endFor -> .)
    ESCRIBE         reduce using rule 124 (n_endFor -> .)
    SI              reduce using rule 124 (n_endFor -> .)
    MIENTRAS        reduce using rule 124 (n_endFor -> .)
    REGRESA         reduce using rule 124 (n_endFor -> .)
    DESDE           reduce using rule 124 (n_endFor -> .)
    RBRACKET        reduce using rule 124 (n_endFor -> .)

    n_endFor                       shift and go to state 257

state 252

    (62) llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .

    SEMICOLON       reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    MULT            reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    DIV             reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    PLUS            reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    MINUS           reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    LESSTHAN        reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    LESSEQUAL       reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    GREATERTHAN     reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    GREATEREQUAL    reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    SAME            reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    NOEQUAL         reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    AND             reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    OR              reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    COMMA           reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    RPAREN          reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    HASTA           reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    HACER           reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)
    RSQUARE         reduce using rule 62 (llamada -> ID n_verify_func LPAREN n_start_FF n_start_pcounter param_exp RPAREN n_end_FF n_last_param_action .)


state 253

    (60) param_exp -> mult_exp n_parameter_action COMMA param_exp .

    RPAREN          reduce using rule 60 (param_exp -> mult_exp n_parameter_action COMMA param_exp .)


state 254

    (22) variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .

    EQUAL           reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    RPAREN          reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    MULT            reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    DIV             reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    PLUS            reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    MINUS           reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    LESSTHAN        reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    LESSEQUAL       reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    GREATERTHAN     reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    GREATEREQUAL    reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    SAME            reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    NOEQUAL         reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    AND             reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    OR              reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    COMMA           reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    SEMICOLON       reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    HASTA           reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    HACER           reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)
    RSQUARE         reduce using rule 22 (variable -> ID n_getVarVal LSQUARE n_start_FF n_hasDim mult_exp RSQUARE n_end_FF n_arr_quad .)


state 255

    (114) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad . bloque n_endIfQuad
    (43) bloque -> . LBRACKET mult_estatutos RBRACKET
    (44) bloque -> . LBRACKET empty RBRACKET

    LBRACKET        shift and go to state 46

    bloque                         shift and go to state 258

state 256

    (118) ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .

    ID              reduce using rule 118 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    LEE             reduce using rule 118 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    ESCRIBE         reduce using rule 118 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    SI              reduce using rule 118 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    MIENTRAS        reduce using rule 118 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    REGRESA         reduce using rule 118 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    DESDE           reduce using rule 118 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)
    RBRACKET        reduce using rule 118 (ciclo_w -> MIENTRAS n_startCicle LPAREN mult_exp RPAREN n_evalExp HAZ bloque n_endWhile .)


state 257

    (122) ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .

    ID              reduce using rule 122 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    LEE             reduce using rule 122 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    ESCRIBE         reduce using rule 122 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    SI              reduce using rule 122 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    MIENTRAS        reduce using rule 122 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    REGRESA         reduce using rule 122 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    DESDE           reduce using rule 122 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)
    RBRACKET        reduce using rule 122 (ciclo_f -> DESDE asigna n_startCicle HASTA mult_exp n_evalExp_for HACER bloque n_endFor .)


state 258

    (114) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque . n_endIfQuad
    (116) n_endIfQuad -> .

    ID              reduce using rule 116 (n_endIfQuad -> .)
    LEE             reduce using rule 116 (n_endIfQuad -> .)
    ESCRIBE         reduce using rule 116 (n_endIfQuad -> .)
    SI              reduce using rule 116 (n_endIfQuad -> .)
    MIENTRAS        reduce using rule 116 (n_endIfQuad -> .)
    REGRESA         reduce using rule 116 (n_endIfQuad -> .)
    DESDE           reduce using rule 116 (n_endIfQuad -> .)
    RBRACKET        reduce using rule 116 (n_endIfQuad -> .)

    n_endIfQuad                    shift and go to state 259

state 259

    (114) condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .

    ID              reduce using rule 114 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    LEE             reduce using rule 114 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    ESCRIBE         reduce using rule 114 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    SI              reduce using rule 114 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    MIENTRAS        reduce using rule 114 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    REGRESA         reduce using rule 114 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    DESDE           reduce using rule 114 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)
    RBRACKET        reduce using rule 114 (condicion -> SI LPAREN mult_exp RPAREN n_ifQuad ENTONCES bloque SINO p_n_sinoQuad bloque n_endIfQuad .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 104 resolved as shift
WARNING: reduce/reduce conflict in state 84 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 84
WARNING: reduce/reduce conflict in state 85 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 85
WARNING: reduce/reduce conflict in state 87 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 87
WARNING: reduce/reduce conflict in state 100 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 100
WARNING: reduce/reduce conflict in state 118 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 118
WARNING: reduce/reduce conflict in state 135 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 135
WARNING: reduce/reduce conflict in state 138 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 138
WARNING: reduce/reduce conflict in state 153 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 162 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 162
WARNING: reduce/reduce conflict in state 163 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 205 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 205
WARNING: reduce/reduce conflict in state 206 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 206
WARNING: reduce/reduce conflict in state 207 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 207
WARNING: reduce/reduce conflict in state 208 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 208
WARNING: reduce/reduce conflict in state 209 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 209
WARNING: reduce/reduce conflict in state 210 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 210
WARNING: reduce/reduce conflict in state 211 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 211
WARNING: reduce/reduce conflict in state 212 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 212
WARNING: reduce/reduce conflict in state 213 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 213
WARNING: reduce/reduce conflict in state 214 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 214
WARNING: reduce/reduce conflict in state 215 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 215
WARNING: reduce/reduce conflict in state 216 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 246 resolved using rule (n_tempTypeI -> <empty>)
WARNING: rejected rule (n_tempTypeF -> <empty>) in state 246
